ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
V/Users/Ian/git/IAT/IAT.psyexp
p7
sS'dataFileName'
p8
V/Users/Ian/git/IAT/data/4_IAT_2016_May_05_1418
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'IAT'
p12
sS'dataNames'
p13
(lp14
S'requiredResponse.keys'
p15
aS'requiredResponse.corr'
p16
aS'requiredResponse.rt'
p17
aS'feedbackResponse.keys'
p18
aS'feedbackResponse.corr'
p19
aS'feedbackResponse.rt'
p20
asS'autoLog'
p21
I01
sS'extraInfo'
p22
(dp23
Vparticipant
p24
V4
sVgender
p25
V
sVage
p26
V
sS'frameRate'
p27
cnumpy.core.multiarray
scalar
p28
(cnumpy
dtype
p29
(S'f8'
I0
I1
tRp30
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x98E\x10\xe3\x82\rN@'
tRp31
sS'expName'
p32
g12
sS'date'
p33
V2016_May_05_1418
p34
ssS'loopsUnfinished'
p35
(lp36
sS'saveWideText'
p37
I01
sS'thisEntry'
p38
(dp39
sS'version'
p40
S''
sS'_paramNamesSoFar'
p41
(lp42
VcategoryA
p43
aVcategoryB
p44
aVrightAttribute
p45
aVleftAttribute
p46
aVorStimulus
p47
aVinstructions
p48
aVtrial_type
p49
aVstimulusImage
p50
aVstimulusText
p51
asS'entries'
p52
(lp53
(dp54
g51
Vtext_trial_type_3
p55
sg50
Vimg_trial_type_3
p56
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p57
I0
sg43
V 
sg44
V 
sS'blocks.thisN'
p58
I0
sS'blocks.thisTrialN'
p59
I0
sg32
g12
sg45
VPositive
p60
sg49
I3
sg47
V 
sg33
g34
sg48
VPut your middle or index fingers on the E and I keys of your keyboard. Words representing the categories at the top will appear one-by-one in the middle of the screen. When the item belongs to a category on the left, press the E key; when the item belongs to a category on the right, press the I key. Items belong to only one category. If you make an error, an X will appear - fix the error by hitting the other key.\u000a\u000aThis is a timed sorting task. GO AS FAST AS YOU CAN while making as few mistakes as possible. Going too slow or making too many errors will result in an uninterpretable score. This task will take about 5 minutes to complete.\u000a\u000aPress E or I to continue.
p61
sS'trials.thisIndex'
p62
I0
sg46
VNegative
p63
sS'blocks.thisIndex'
p64
g28
(g29
(S'i4'
I0
I1
tRp65
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x00\x00\x00\x00'
tRp66
sS'trials.thisRepN'
p67
I0
sg26
V
sg18
NsS'trials.thisTrialN'
p68
I0
sg17
F0.43633389472961426
sS'blocks.thisRepN'
p69
I0
sg25
V
sa(dp70
g51
Vtext_trial_type_4
p71
sg50
Vimg_trial_type_4
p72
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p73
I1
sg43
V 
sg44
V 
sS'blocks.thisN'
p74
I0
sS'blocks.thisTrialN'
p75
I0
sg32
g12
sg45
g60
sg49
I4
sg47
V 
sg33
g34
sg48
g61
sS'trials.thisIndex'
p76
I1
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p77
g66
sS'trials.thisRepN'
p78
I0
sg26
V
sg20
F0.25172090530395508
sS'trials.thisTrialN'
p79
I1
sg17
F0.26857995986938477
sS'blocks.thisRepN'
p80
I0
sg25
V
sa(dp81
g51
g71
sg50
g72
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p82
I2
sg43
V 
sg44
V 
sS'blocks.thisN'
p83
I0
sS'blocks.thisTrialN'
p84
I0
sg32
g12
sg45
g60
sg49
I4
sg47
V 
sg33
g34
sg48
g61
sS'trials.thisIndex'
p85
I1
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p86
g66
sS'trials.thisRepN'
p87
I1
sg26
V
sg20
F0.18593907356262207
sS'trials.thisTrialN'
p88
I0
sg17
F0.20258212089538574
sS'blocks.thisRepN'
p89
I0
sg25
V
sa(dp90
g51
g55
sg50
g56
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p91
I3
sg43
V 
sg44
V 
sS'blocks.thisN'
p92
I0
sS'blocks.thisTrialN'
p93
I0
sg32
g12
sg45
g60
sg49
I3
sg47
V 
sg33
g34
sg48
g61
sS'trials.thisIndex'
p94
I0
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p95
g66
sS'trials.thisRepN'
p96
I1
sg26
V
sg20
F0.18394589424133301
sS'trials.thisTrialN'
p97
I1
sg17
F0.1840510368347168
sS'blocks.thisRepN'
p98
I0
sg25
V
sa(dp99
g51
g55
sg50
g56
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p100
I4
sg43
V 
sg44
V 
sS'blocks.thisN'
p101
I0
sS'blocks.thisTrialN'
p102
I0
sg32
g12
sg45
g60
sg49
I3
sg47
V 
sg33
g34
sg48
g61
sS'trials.thisIndex'
p103
I0
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p104
g66
sS'trials.thisRepN'
p105
I2
sg26
V
sg20
F0.1854240894317627
sS'trials.thisTrialN'
p106
I0
sg17
F0.20274591445922852
sS'blocks.thisRepN'
p107
I0
sg25
V
sa(dp108
g51
g55
sg50
g56
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p109
I5
sg43
V 
sg44
V 
sS'blocks.thisN'
p110
I0
sS'blocks.thisTrialN'
p111
I0
sg32
g12
sg45
g60
sg49
I3
sg47
V 
sg33
g34
sg48
g61
sS'trials.thisIndex'
p112
I0
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p113
g66
sS'trials.thisRepN'
p114
I2
sg26
V
sg20
F0.16748905181884766
sS'trials.thisTrialN'
p115
I1
sg17
F0.18541908264160156
sS'blocks.thisRepN'
p116
I0
sg25
V
sa(dp117
g51
g71
sg50
g72
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p118
I6
sg43
V 
sg44
V 
sS'blocks.thisN'
p119
I0
sS'blocks.thisTrialN'
p120
I0
sg32
g12
sg45
g60
sg49
I4
sg47
V 
sg33
g34
sg48
g61
sS'trials.thisIndex'
p121
I1
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p122
g66
sS'trials.thisRepN'
p123
I3
sg26
V
sg20
F0.15114188194274902
sS'trials.thisTrialN'
p124
I0
sg17
F0.16749215126037598
sS'blocks.thisRepN'
p125
I0
sg25
V
sa(dp126
g51
g71
sg50
g72
sg16
I1
sg27
g31
sg15
S'e'
sg19
I0
sg24
V4
sS'trials.thisN'
p127
I7
sg43
V 
sg44
V 
sS'blocks.thisN'
p128
I0
sS'blocks.thisTrialN'
p129
I0
sg32
g12
sg45
g60
sg49
I4
sg47
V 
sg33
g34
sg48
g61
sS'trials.thisIndex'
p130
I1
sg46
g63
sS'blocks.thisIndex'
p131
g66
sS'trials.thisRepN'
p132
I3
sg26
V
sg18
NsS'trials.thisTrialN'
p133
I1
sg17
F0.13367605209350586
sS'blocks.thisRepN'
p134
I0
sg25
V
sa(dp135
g51
g71
sg50
g72
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p136
I8
sg43
V 
sg44
V 
sS'blocks.thisN'
p137
I0
sS'blocks.thisTrialN'
p138
I0
sg32
g12
sg45
g60
sg49
I4
sg47
V 
sg33
g34
sg48
g61
sS'trials.thisIndex'
p139
I1
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p140
g66
sS'trials.thisRepN'
p141
I4
sg26
V
sg20
F0.15049314498901367
sS'trials.thisTrialN'
p142
I0
sg17
F0.15051913261413574
sS'blocks.thisRepN'
p143
I0
sg25
V
sa(dp144
g51
g55
sg50
g56
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p145
I9
sg43
V 
sg44
V 
sS'blocks.thisN'
p146
I0
sS'blocks.thisTrialN'
p147
I0
sg32
g12
sg45
g60
sg49
I3
sg47
V 
sg33
g34
sg48
g61
sS'trials.thisIndex'
p148
I0
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p149
g66
sS'trials.thisRepN'
p150
I4
sg26
V
sg20
F0.15274882316589355
sS'trials.thisTrialN'
p151
I1
sg17
F0.15278196334838867
sS'blocks.thisRepN'
p152
I0
sg25
V
sa(dp153
g51
g71
sg50
g72
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p154
I10
sg43
V 
sg44
V 
sS'blocks.thisN'
p155
I0
sS'blocks.thisTrialN'
p156
I0
sg32
g12
sg45
g60
sg49
I4
sg47
V 
sg33
g34
sg48
g61
sS'trials.thisIndex'
p157
I1
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p158
g66
sS'trials.thisRepN'
p159
I5
sg26
V
sg20
F0.13490509986877441
sS'trials.thisTrialN'
p160
I0
sg17
F0.1349949836730957
sS'blocks.thisRepN'
p161
I0
sg25
V
sa(dp162
g51
g71
sg50
g72
sg16
I1
sg27
g31
sg15
S'e'
sg19
I0
sg24
V4
sS'trials.thisN'
p163
I11
sg43
V 
sg44
V 
sS'blocks.thisN'
p164
I0
sS'blocks.thisTrialN'
p165
I0
sg32
g12
sg45
g60
sg49
I4
sg47
V 
sg33
g34
sg48
g61
sS'trials.thisIndex'
p166
I1
sg46
g63
sS'blocks.thisIndex'
p167
g66
sS'trials.thisRepN'
p168
I5
sg26
V
sg18
NsS'trials.thisTrialN'
p169
I1
sg17
F0.18420982360839844
sS'blocks.thisRepN'
p170
I0
sg25
V
sa(dp171
g51
g55
sg50
g56
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p172
I12
sg43
V 
sg44
V 
sS'blocks.thisN'
p173
I0
sS'blocks.thisTrialN'
p174
I0
sg32
g12
sg45
g60
sg49
I3
sg47
V 
sg33
g34
sg48
g61
sS'trials.thisIndex'
p175
I0
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p176
g66
sS'trials.thisRepN'
p177
I6
sg26
V
sg20
F0.13353419303894043
sS'trials.thisTrialN'
p178
I0
sg17
F0.15131306648254395
sS'blocks.thisRepN'
p179
I0
sg25
V
sa(dp180
g51
g55
sg50
g56
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p181
I13
sg43
V 
sg44
V 
sS'blocks.thisN'
p182
I0
sS'blocks.thisTrialN'
p183
I0
sg32
g12
sg45
g60
sg49
I3
sg47
V 
sg33
g34
sg48
g61
sS'trials.thisIndex'
p184
I0
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p185
g66
sS'trials.thisRepN'
p186
I6
sg26
V
sg20
F0.18612909317016602
sS'trials.thisTrialN'
p187
I1
sg17
F0.18619298934936523
sS'blocks.thisRepN'
p188
I0
sg25
V
sa(dp189
g51
g71
sg50
g72
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p190
I14
sg43
V 
sg44
V 
sS'blocks.thisN'
p191
I0
sS'blocks.thisTrialN'
p192
I0
sg32
g12
sg45
g60
sg49
I4
sg47
V 
sg33
g34
sg48
g61
sS'trials.thisIndex'
p193
I1
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p194
g66
sS'trials.thisRepN'
p195
I7
sg26
V
sg20
F0.15128207206726074
sS'trials.thisTrialN'
p196
I0
sg17
F0.16741490364074707
sS'blocks.thisRepN'
p197
I0
sg25
V
sa(dp198
g51
g71
sg50
g72
sg16
I1
sg27
g31
sg15
S'e'
sg19
I0
sg24
V4
sS'trials.thisN'
p199
I15
sg43
V 
sg44
V 
sS'blocks.thisN'
p200
I0
sS'blocks.thisTrialN'
p201
I0
sg32
g12
sg45
g60
sg49
I4
sg47
V 
sg33
g34
sg48
g61
sS'trials.thisIndex'
p202
I1
sg46
g63
sS'blocks.thisIndex'
p203
g66
sS'trials.thisRepN'
p204
I7
sg26
V
sg18
NsS'trials.thisTrialN'
p205
I1
sg17
F0.11748909950256348
sS'blocks.thisRepN'
p206
I0
sg25
V
sa(dp207
g51
g71
sg50
g72
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p208
I16
sg43
V 
sg44
V 
sS'blocks.thisN'
p209
I0
sS'blocks.thisTrialN'
p210
I0
sg32
g12
sg45
g60
sg49
I4
sg47
V 
sg33
g34
sg48
g61
sS'trials.thisIndex'
p211
I1
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p212
g66
sS'trials.thisRepN'
p213
I8
sg26
V
sg20
F0.18428993225097656
sS'trials.thisTrialN'
p214
I0
sg17
F0.18467283248901367
sS'blocks.thisRepN'
p215
I0
sg25
V
sa(dp216
g51
g55
sg50
g56
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p217
I17
sg43
V 
sg44
V 
sS'blocks.thisN'
p218
I0
sS'blocks.thisTrialN'
p219
I0
sg32
g12
sg45
g60
sg49
I3
sg47
V 
sg33
g34
sg48
g61
sS'trials.thisIndex'
p220
I0
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p221
g66
sS'trials.thisRepN'
p222
I8
sg26
V
sg20
F0.1678159236907959
sS'trials.thisTrialN'
p223
I1
sg17
F0.16792893409729004
sS'blocks.thisRepN'
p224
I0
sg25
V
sa(dp225
g51
g55
sg50
g56
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p226
I18
sg43
V 
sg44
V 
sS'blocks.thisN'
p227
I0
sS'blocks.thisTrialN'
p228
I0
sg32
g12
sg45
g60
sg49
I3
sg47
V 
sg33
g34
sg48
g61
sS'trials.thisIndex'
p229
I0
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p230
g66
sS'trials.thisRepN'
p231
I9
sg26
V
sg20
F0.15118503570556641
sS'trials.thisTrialN'
p232
I0
sg17
F0.15169811248779297
sS'blocks.thisRepN'
p233
I0
sg25
V
sa(dp234
g51
g55
sg50
g56
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p235
I19
sg43
V 
sg44
V 
sS'blocks.thisN'
p236
I0
sS'blocks.thisTrialN'
p237
I0
sg32
g12
sg45
g60
sg49
I3
sg47
V 
sg33
g34
sg48
g61
sS'trials.thisIndex'
p238
I0
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p239
g66
sS'trials.thisRepN'
p240
I9
sg26
V
sg20
F0.1846611499786377
sS'trials.thisTrialN'
p241
I1
sg17
F0.18479013442993164
sS'blocks.thisRepN'
p242
I0
sg25
V
sa(dp243
VstimulusText
p244
Vtext_trial_type_2
p245
sVstimulusImage
p246
Vimg_trial_type_2
p247
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p248
I0
sg43
VInsects
p249
sg44
VFlowers
p250
sS'blocks.thisN'
p251
I1
sS'blocks.thisTrialN'
p252
I1
sg32
g12
sg45
V 
sVtrial_type
p253
I2
sg47
V 
sg33
g34
sg48
VSee above, the categories have changed. The items for sorting have changed as well. The rules, however, are the same.\u000a\u000aWhen the item belongs to a category on the left, press the E key; when the item belongs to a category on the right, press the I key. Items belong to only one category. An X appears after an error - fix the error by hitting the other key. GO AS FAST AS YOU CAN.\u000a\u000aPress E or I to continue.
p254
sS'trials.thisIndex'
p255
I1
sg46
V 
sS'blocks.thisIndex'
p256
g28
(g65
S'\x01\x00\x00\x00'
tRp257
sS'trials.thisRepN'
p258
I0
sg26
V
sg18
NsS'trials.thisTrialN'
p259
I0
sg17
F0.18492293357849121
sS'blocks.thisRepN'
p260
I0
sg25
V
sa(dp261
g244
g245
sg246
g247
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p262
I1
sg43
g249
sg44
g250
sS'blocks.thisN'
p263
I1
sS'blocks.thisTrialN'
p264
I1
sg32
g12
sg45
V 
sg253
I2
sg47
V 
sg33
g34
sg48
g254
sS'trials.thisIndex'
p265
I1
sg46
V 
sS'blocks.thisIndex'
p266
g257
sS'trials.thisRepN'
p267
I0
sg26
V
sg18
NsS'trials.thisTrialN'
p268
I1
sg17
F0.13450217247009277
sS'blocks.thisRepN'
p269
I0
sg25
V
sa(dp270
g244
Vtext_trial_type_1
p271
sg246
Vimg_trial_type_1
p272
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p273
I2
sg43
g249
sg44
g250
sS'blocks.thisN'
p274
I1
sS'blocks.thisTrialN'
p275
I1
sg32
g12
sg45
V 
sg253
I1
sg47
V 
sg33
g34
sg48
g254
sS'trials.thisIndex'
p276
I0
sg46
V 
sg18
S'i'
sS'blocks.thisIndex'
p277
g257
sS'trials.thisRepN'
p278
I1
sg26
V
sg20
F0.084167957305908203
sS'trials.thisTrialN'
p279
I0
sg17
F0.084402084350585938
sS'blocks.thisRepN'
p280
I0
sg25
V
sa(dp281
g244
g271
sg246
g272
sg16
I1
sg27
g31
sg15
S'e'
sg19
I0
sg24
V4
sS'trials.thisN'
p282
I3
sg43
g249
sg44
g250
sS'blocks.thisN'
p283
I1
sS'blocks.thisTrialN'
p284
I1
sg32
g12
sg45
V 
sg253
I1
sg47
V 
sg33
g34
sg48
g254
sS'trials.thisIndex'
p285
I0
sg46
V 
sS'blocks.thisIndex'
p286
g257
sS'trials.thisRepN'
p287
I1
sg26
V
sg18
NsS'trials.thisTrialN'
p288
I1
sg17
F0.067503929138183594
sS'blocks.thisRepN'
p289
I0
sg25
V
sa(dp290
g244
g245
sg246
g247
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p291
I4
sg43
g249
sg44
g250
sS'blocks.thisN'
p292
I1
sS'blocks.thisTrialN'
p293
I1
sg32
g12
sg45
V 
sg253
I2
sg47
V 
sg33
g34
sg48
g254
sS'trials.thisIndex'
p294
I1
sg46
V 
sS'blocks.thisIndex'
p295
g257
sS'trials.thisRepN'
p296
I2
sg26
V
sg18
NsS'trials.thisTrialN'
p297
I0
sg17
F0.067657947540283203
sS'blocks.thisRepN'
p298
I0
sg25
V
sa(dp299
g244
g245
sg246
g247
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p300
I5
sg43
g249
sg44
g250
sS'blocks.thisN'
p301
I1
sS'blocks.thisTrialN'
p302
I1
sg32
g12
sg45
V 
sg253
I2
sg47
V 
sg33
g34
sg48
g254
sS'trials.thisIndex'
p303
I1
sg46
V 
sg18
S'e'
sS'blocks.thisIndex'
p304
g257
sS'trials.thisRepN'
p305
I2
sg26
V
sg20
F0.067957878112792969
sS'trials.thisTrialN'
p306
I1
sg17
F0.068296909332275391
sS'blocks.thisRepN'
p307
I0
sg25
V
sa(dp308
g244
g245
sg246
g247
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p309
I6
sg43
g249
sg44
g250
sS'blocks.thisN'
p310
I1
sS'blocks.thisTrialN'
p311
I1
sg32
g12
sg45
V 
sg253
I2
sg47
V 
sg33
g34
sg48
g254
sS'trials.thisIndex'
p312
I1
sg46
V 
sg18
S'e'
sS'blocks.thisIndex'
p313
g257
sS'trials.thisRepN'
p314
I3
sg26
V
sg20
F0.049729824066162109
sS'trials.thisTrialN'
p315
I0
sg17
F0.06760716438293457
sS'blocks.thisRepN'
p316
I0
sg25
V
sa(dp317
g244
g271
sg246
g272
sg16
I1
sg27
g31
sg15
S'e'
sg19
I0
sg24
V4
sS'trials.thisN'
p318
I7
sg43
g249
sg44
g250
sS'blocks.thisN'
p319
I1
sS'blocks.thisTrialN'
p320
I1
sg32
g12
sg45
V 
sg253
I1
sg47
V 
sg33
g34
sg48
g254
sS'trials.thisIndex'
p321
I0
sg46
V 
sS'blocks.thisIndex'
p322
g257
sS'trials.thisRepN'
p323
I3
sg26
V
sg18
NsS'trials.thisTrialN'
p324
I1
sg17
F0.017252922058105469
sS'blocks.thisRepN'
p325
I0
sg25
V
sa(dp326
g244
g245
sg246
g247
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p327
I8
sg43
g249
sg44
g250
sS'blocks.thisN'
p328
I1
sS'blocks.thisTrialN'
p329
I1
sg32
g12
sg45
V 
sg253
I2
sg47
V 
sg33
g34
sg48
g254
sS'trials.thisIndex'
p330
I1
sg46
V 
sS'blocks.thisIndex'
p331
g257
sS'trials.thisRepN'
p332
I4
sg26
V
sg18
NsS'trials.thisTrialN'
p333
I0
sg17
F0.066695928573608398
sS'blocks.thisRepN'
p334
I0
sg25
V
sa(dp335
g244
g245
sg246
g247
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p336
I9
sg43
g249
sg44
g250
sS'blocks.thisN'
p337
I1
sS'blocks.thisTrialN'
p338
I1
sg32
g12
sg45
V 
sg253
I2
sg47
V 
sg33
g34
sg48
g254
sS'trials.thisIndex'
p339
I1
sg46
V 
sg18
S'e'
sS'blocks.thisIndex'
p340
g257
sS'trials.thisRepN'
p341
I4
sg26
V
sg20
F0.050544977188110352
sS'trials.thisTrialN'
p342
I1
sg17
F0.067384958267211914
sS'blocks.thisRepN'
p343
I0
sg25
V
sa(dp344
g244
g271
sg246
g272
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p345
I10
sg43
g249
sg44
g250
sS'blocks.thisN'
p346
I1
sS'blocks.thisTrialN'
p347
I1
sg32
g12
sg45
V 
sg253
I1
sg47
V 
sg33
g34
sg48
g254
sS'trials.thisIndex'
p348
I0
sg46
V 
sg18
S'i'
sS'blocks.thisIndex'
p349
g257
sS'trials.thisRepN'
p350
I5
sg26
V
sg20
F0.034204006195068359
sS'trials.thisTrialN'
p351
I0
sg17
F0.050027132034301758
sS'blocks.thisRepN'
p352
I0
sg25
V
sa(dp353
g244
g271
sg246
g272
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p354
I11
sg43
g249
sg44
g250
sS'blocks.thisN'
p355
I1
sS'blocks.thisTrialN'
p356
I1
sg32
g12
sg45
V 
sg253
I1
sg47
V 
sg33
g34
sg48
g254
sS'trials.thisIndex'
p357
I0
sg46
V 
sg18
S'i'
sS'blocks.thisIndex'
p358
g257
sS'trials.thisRepN'
p359
I5
sg26
V
sg20
F0.017747879028320312
sS'trials.thisTrialN'
p360
I1
sg17
F0.035952091217041016
sS'blocks.thisRepN'
p361
I0
sg25
V
sa(dp362
g244
g271
sg246
g272
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p363
I12
sg43
g249
sg44
g250
sS'blocks.thisN'
p364
I1
sS'blocks.thisTrialN'
p365
I1
sg32
g12
sg45
V 
sg253
I1
sg47
V 
sg33
g34
sg48
g254
sS'trials.thisIndex'
p366
I0
sg46
V 
sg18
S'i'
sS'blocks.thisIndex'
p367
g257
sS'trials.thisRepN'
p368
I6
sg26
V
sg20
F0.016525030136108398
sS'trials.thisTrialN'
p369
I0
sg17
F0.36923599243164062
sS'blocks.thisRepN'
p370
I0
sg25
V
sa(dp371
g244
g271
sg246
g272
sg16
I1
sg27
g31
sg15
S'e'
sg19
I0
sg24
V4
sS'trials.thisN'
p372
I13
sg43
g249
sg44
g250
sS'blocks.thisN'
p373
I1
sS'blocks.thisTrialN'
p374
I1
sg32
g12
sg45
V 
sg253
I1
sg47
V 
sg33
g34
sg48
g254
sS'trials.thisIndex'
p375
I0
sg46
V 
sS'blocks.thisIndex'
p376
g257
sS'trials.thisRepN'
p377
I6
sg26
V
sg18
NsS'trials.thisTrialN'
p378
I1
sg17
F0.11772894859313965
sS'blocks.thisRepN'
p379
I0
sg25
V
sa(dp380
g244
g245
sg246
g247
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p381
I14
sg43
g249
sg44
g250
sS'blocks.thisN'
p382
I1
sS'blocks.thisTrialN'
p383
I1
sg32
g12
sg45
V 
sg253
I2
sg47
V 
sg33
g34
sg48
g254
sS'trials.thisIndex'
p384
I1
sg46
V 
sg18
S'e'
sS'blocks.thisIndex'
p385
g257
sS'trials.thisRepN'
p386
I7
sg26
V
sg20
F0.0673980712890625
sS'trials.thisTrialN'
p387
I0
sg17
F0.083795070648193359
sS'blocks.thisRepN'
p388
I0
sg25
V
sa(dp389
g244
g271
sg246
g272
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p390
I15
sg43
g249
sg44
g250
sS'blocks.thisN'
p391
I1
sS'blocks.thisTrialN'
p392
I1
sg32
g12
sg45
V 
sg253
I1
sg47
V 
sg33
g34
sg48
g254
sS'trials.thisIndex'
p393
I0
sg46
V 
sg18
S'i'
sS'blocks.thisIndex'
p394
g257
sS'trials.thisRepN'
p395
I7
sg26
V
sg20
F0.067281961441040039
sS'trials.thisTrialN'
p396
I1
sg17
F0.067016124725341797
sS'blocks.thisRepN'
p397
I0
sg25
V
sa(dp398
g244
g271
sg246
g272
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p399
I16
sg43
g249
sg44
g250
sS'blocks.thisN'
p400
I1
sS'blocks.thisTrialN'
p401
I1
sg32
g12
sg45
V 
sg253
I1
sg47
V 
sg33
g34
sg48
g254
sS'trials.thisIndex'
p402
I0
sg46
V 
sg18
S'i'
sS'blocks.thisIndex'
p403
g257
sS'trials.thisRepN'
p404
I8
sg26
V
sg20
F0.067252874374389648
sS'trials.thisTrialN'
p405
I0
sg17
F0.067743062973022461
sS'blocks.thisRepN'
p406
I0
sg25
V
sa(dp407
g244
g245
sg246
g247
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p408
I17
sg43
g249
sg44
g250
sS'blocks.thisN'
p409
I1
sS'blocks.thisTrialN'
p410
I1
sg32
g12
sg45
V 
sg253
I2
sg47
V 
sg33
g34
sg48
g254
sS'trials.thisIndex'
p411
I1
sg46
V 
sg18
S'e'
sS'blocks.thisIndex'
p412
g257
sS'trials.thisRepN'
p413
I8
sg26
V
sg20
F0.051484107971191406
sS'trials.thisTrialN'
p414
I1
sg17
F0.051655054092407227
sS'blocks.thisRepN'
p415
I0
sg25
V
sa(dp416
g244
g245
sg246
g247
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p417
I18
sg43
g249
sg44
g250
sS'blocks.thisN'
p418
I1
sS'blocks.thisTrialN'
p419
I1
sg32
g12
sg45
V 
sg253
I2
sg47
V 
sg33
g34
sg48
g254
sS'trials.thisIndex'
p420
I1
sg46
V 
sg18
S'e'
sS'blocks.thisIndex'
p421
g257
sS'trials.thisRepN'
p422
I9
sg26
V
sg20
F0.050338029861450195
sS'trials.thisTrialN'
p423
I0
sg17
F0.067579984664916992
sS'blocks.thisRepN'
p424
I0
sg25
V
sa(dp425
g244
g271
sg246
g272
sg16
I1
sg27
g31
sg15
S'e'
sg19
I0
sg24
V4
sS'trials.thisN'
p426
I19
sg43
g249
sg44
g250
sS'blocks.thisN'
p427
I1
sS'blocks.thisTrialN'
p428
I1
sg32
g12
sg45
V 
sg253
I1
sg47
V 
sg33
g34
sg48
g254
sS'trials.thisIndex'
p429
I0
sg46
V 
sS'blocks.thisIndex'
p430
g257
sS'trials.thisRepN'
p431
I9
sg26
V
sg18
NsS'trials.thisTrialN'
p432
I1
sg17
F0.050797939300537109
sS'blocks.thisRepN'
p433
I0
sg25
V
sa(dp434
VstimulusText
p435
Vtext_trial_type_3
p436
sVstimulusImage
p437
Vimg_trial_type_3
p438
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p439
I0
sg43
g249
sg44
g250
sS'blocks.thisN'
p440
I2
sS'blocks.thisTrialN'
p441
I2
sg32
g12
sg45
g60
sVtrial_type
p442
I3
sg47
Vor
p443
sg33
g34
sg48
VSee above, the four categories you saw separately now appear together. Remember, each item belongs to only one group.\u000a\u000aThe green and white labels and items may help to identify the appropriate category. Use the E and I keys to categorize items into four groups left and right, and correct errors by hitting the other key.\u000a\u000aPress E or I to continue.
p444
sS'trials.thisIndex'
p445
I2
sg46
g63
sS'blocks.thisIndex'
p446
g28
(g65
S'\x02\x00\x00\x00'
tRp447
sS'trials.thisRepN'
p448
I0
sg26
V
sg18
NsS'trials.thisTrialN'
p449
I0
sg17
F0.26929998397827148
sS'blocks.thisRepN'
p450
I0
sg25
V
sa(dp451
g435
Vtext_trial_type_1
p452
sg437
Vimg_trial_type_1
p453
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p454
I1
sg43
g249
sg44
g250
sS'blocks.thisN'
p455
I2
sS'blocks.thisTrialN'
p456
I2
sg32
g12
sg45
g60
sg442
I1
sg47
g443
sg33
g34
sg48
g444
sS'trials.thisIndex'
p457
I0
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p458
g447
sS'trials.thisRepN'
p459
I0
sg26
V
sg20
F0.066965818405151367
sS'trials.thisTrialN'
p460
I1
sg17
F0.084361076354980469
sS'blocks.thisRepN'
p461
I0
sg25
V
sa(dp462
g435
g452
sg437
g453
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p463
I2
sg43
g249
sg44
g250
sS'blocks.thisN'
p464
I2
sS'blocks.thisTrialN'
p465
I2
sg32
g12
sg45
g60
sg442
I1
sg47
g443
sg33
g34
sg48
g444
sS'trials.thisIndex'
p466
I0
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p467
g447
sS'trials.thisRepN'
p468
I0
sg26
V
sg20
F0.034699916839599609
sS'trials.thisTrialN'
p469
I2
sg17
F0.034914016723632812
sS'blocks.thisRepN'
p470
I0
sg25
V
sa(dp471
g435
Vtext_trial_type_2
p472
sg437
Vimg_trial_type_2
p473
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p474
I3
sg43
g249
sg44
g250
sS'blocks.thisN'
p475
I2
sS'blocks.thisTrialN'
p476
I2
sg32
g12
sg45
g60
sg442
I2
sg47
g443
sg33
g34
sg48
g444
sS'trials.thisIndex'
p477
I1
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p478
g447
sS'trials.thisRepN'
p479
I0
sg26
V
sg20
F0.016561031341552734
sS'trials.thisTrialN'
p480
I3
sg17
F0.36921215057373047
sS'blocks.thisRepN'
p481
I0
sg25
V
sa(dp482
g435
Vtext_trial_type_4
p483
sg437
Vimg_trial_type_4
p484
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p485
I4
sg43
g249
sg44
g250
sS'blocks.thisN'
p486
I2
sS'blocks.thisTrialN'
p487
I2
sg32
g12
sg45
g60
sg442
I4
sg47
g443
sg33
g34
sg48
g444
sS'trials.thisIndex'
p488
I3
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p489
g447
sS'trials.thisRepN'
p490
I1
sg26
V
sg20
F0.15005707740783691
sS'trials.thisTrialN'
p491
I0
sg17
F0.16790986061096191
sS'blocks.thisRepN'
p492
I0
sg25
V
sa(dp493
g435
g452
sg437
g453
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p494
I5
sg43
g249
sg44
g250
sS'blocks.thisN'
p495
I2
sS'blocks.thisTrialN'
p496
I2
sg32
g12
sg45
g60
sg442
I1
sg47
g443
sg33
g34
sg48
g444
sS'trials.thisIndex'
p497
I0
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p498
g447
sS'trials.thisRepN'
p499
I1
sg26
V
sg20
F0.18370890617370605
sS'trials.thisTrialN'
p500
I1
sg17
F0.20042610168457031
sS'blocks.thisRepN'
p501
I0
sg25
V
sa(dp502
g435
g436
sg437
g438
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p503
I6
sg43
g249
sg44
g250
sS'blocks.thisN'
p504
I2
sS'blocks.thisTrialN'
p505
I2
sg32
g12
sg45
g60
sg442
I3
sg47
g443
sg33
g34
sg48
g444
sS'trials.thisIndex'
p506
I2
sg46
g63
sS'blocks.thisIndex'
p507
g447
sS'trials.thisRepN'
p508
I1
sg26
V
sg18
NsS'trials.thisTrialN'
p509
I2
sg17
F0.11866402626037598
sS'blocks.thisRepN'
p510
I0
sg25
V
sa(dp511
g435
g483
sg437
g484
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p512
I7
sg43
g249
sg44
g250
sS'blocks.thisN'
p513
I2
sS'blocks.thisTrialN'
p514
I2
sg32
g12
sg45
g60
sg442
I4
sg47
g443
sg33
g34
sg48
g444
sS'trials.thisIndex'
p515
I3
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p516
g447
sS'trials.thisRepN'
p517
I1
sg26
V
sg20
F0.15111684799194336
sS'trials.thisTrialN'
p518
I3
sg17
F0.16881895065307617
sS'blocks.thisRepN'
p519
I0
sg25
V
sa(dp520
g435
g452
sg437
g453
sg16
I1
sg27
g31
sg15
S'e'
sg19
I0
sg24
V4
sS'trials.thisN'
p521
I8
sg43
g249
sg44
g250
sS'blocks.thisN'
p522
I2
sS'blocks.thisTrialN'
p523
I2
sg32
g12
sg45
g60
sg442
I1
sg47
g443
sg33
g34
sg48
g444
sS'trials.thisIndex'
p524
I0
sg46
g63
sS'blocks.thisIndex'
p525
g447
sS'trials.thisRepN'
p526
I2
sg26
V
sg18
NsS'trials.thisTrialN'
p527
I0
sg17
F0.13456320762634277
sS'blocks.thisRepN'
p528
I0
sg25
V
sa(dp529
g435
g472
sg437
g473
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p530
I9
sg43
g249
sg44
g250
sS'blocks.thisN'
p531
I2
sS'blocks.thisTrialN'
p532
I2
sg32
g12
sg45
g60
sg442
I2
sg47
g443
sg33
g34
sg48
g444
sS'trials.thisIndex'
p533
I1
sg46
g63
sS'blocks.thisIndex'
p534
g447
sS'trials.thisRepN'
p535
I2
sg26
V
sg18
NsS'trials.thisTrialN'
p536
I1
sg17
F0.13454103469848633
sS'blocks.thisRepN'
p537
I0
sg25
V
sa(dp538
g435
g472
sg437
g473
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p539
I10
sg43
g249
sg44
g250
sS'blocks.thisN'
p540
I2
sS'blocks.thisTrialN'
p541
I2
sg32
g12
sg45
g60
sg442
I2
sg47
g443
sg33
g34
sg48
g444
sS'trials.thisIndex'
p542
I1
sg46
g63
sS'blocks.thisIndex'
p543
g447
sS'trials.thisRepN'
p544
I2
sg26
V
sg18
NsS'trials.thisTrialN'
p545
I2
sg17
F0.084295034408569336
sS'blocks.thisRepN'
p546
I0
sg25
V
sa(dp547
g435
g436
sg437
g438
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p548
I11
sg43
g249
sg44
g250
sS'blocks.thisN'
p549
I2
sS'blocks.thisTrialN'
p550
I2
sg32
g12
sg45
g60
sg442
I3
sg47
g443
sg33
g34
sg48
g444
sS'trials.thisIndex'
p551
I2
sg46
g63
sS'blocks.thisIndex'
p552
g447
sS'trials.thisRepN'
p553
I2
sg26
V
sg18
NsS'trials.thisTrialN'
p554
I3
sg17
F0.084503173828125
sS'blocks.thisRepN'
p555
I0
sg25
V
sa(dp556
g435
g472
sg437
g473
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p557
I12
sg43
g249
sg44
g250
sS'blocks.thisN'
p558
I2
sS'blocks.thisTrialN'
p559
I2
sg32
g12
sg45
g60
sg442
I2
sg47
g443
sg33
g34
sg48
g444
sS'trials.thisIndex'
p560
I1
sg46
g63
sS'blocks.thisIndex'
p561
g447
sS'trials.thisRepN'
p562
I3
sg26
V
sg18
NsS'trials.thisTrialN'
p563
I0
sg17
F0.10081911087036133
sS'blocks.thisRepN'
p564
I0
sg25
V
sa(dp565
g435
g436
sg437
g438
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p566
I13
sg43
g249
sg44
g250
sS'blocks.thisN'
p567
I2
sS'blocks.thisTrialN'
p568
I2
sg32
g12
sg45
g60
sg442
I3
sg47
g443
sg33
g34
sg48
g444
sS'trials.thisIndex'
p569
I2
sg46
g63
sS'blocks.thisIndex'
p570
g447
sS'trials.thisRepN'
p571
I3
sg26
V
sg18
NsS'trials.thisTrialN'
p572
I1
sg17
F0.10058498382568359
sS'blocks.thisRepN'
p573
I0
sg25
V
sa(dp574
g435
g483
sg437
g484
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p575
I14
sg43
g249
sg44
g250
sS'blocks.thisN'
p576
I2
sS'blocks.thisTrialN'
p577
I2
sg32
g12
sg45
g60
sg442
I4
sg47
g443
sg33
g34
sg48
g444
sS'trials.thisIndex'
p578
I3
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p579
g447
sS'trials.thisRepN'
p580
I3
sg26
V
sg20
F0.13399600982666016
sS'trials.thisTrialN'
p581
I2
sg17
F0.18434977531433105
sS'blocks.thisRepN'
p582
I0
sg25
V
sa(dp583
g435
g452
sg437
g453
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p584
I15
sg43
g249
sg44
g250
sS'blocks.thisN'
p585
I2
sS'blocks.thisTrialN'
p586
I2
sg32
g12
sg45
g60
sg442
I1
sg47
g443
sg33
g34
sg48
g444
sS'trials.thisIndex'
p587
I0
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p588
g447
sS'trials.thisRepN'
p589
I3
sg26
V
sg20
F0.033442974090576172
sS'trials.thisTrialN'
p590
I3
sg17
F0.10187792778015137
sS'blocks.thisRepN'
p591
I0
sg25
V
sa(dp592
g435
g436
sg437
g438
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p593
I16
sg43
g249
sg44
g250
sS'blocks.thisN'
p594
I2
sS'blocks.thisTrialN'
p595
I2
sg32
g12
sg45
g60
sg442
I3
sg47
g443
sg33
g34
sg48
g444
sS'trials.thisIndex'
p596
I2
sg46
g63
sS'blocks.thisIndex'
p597
g447
sS'trials.thisRepN'
p598
I4
sg26
V
sg18
NsS'trials.thisTrialN'
p599
I0
sg17
F0.03484797477722168
sS'blocks.thisRepN'
p600
I0
sg25
V
sa(dp601
g435
g483
sg437
g484
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p602
I17
sg43
g249
sg44
g250
sS'blocks.thisN'
p603
I2
sS'blocks.thisTrialN'
p604
I2
sg32
g12
sg45
g60
sg442
I4
sg47
g443
sg33
g34
sg48
g444
sS'trials.thisIndex'
p605
I3
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p606
g447
sS'trials.thisRepN'
p607
I4
sg26
V
sg20
F0.13419198989868164
sS'trials.thisTrialN'
p608
I1
sg17
F0.20172882080078125
sS'blocks.thisRepN'
p609
I0
sg25
V
sa(dp610
g435
g472
sg437
g473
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p611
I18
sg43
g249
sg44
g250
sS'blocks.thisN'
p612
I2
sS'blocks.thisTrialN'
p613
I2
sg32
g12
sg45
g60
sg442
I2
sg47
g443
sg33
g34
sg48
g444
sS'trials.thisIndex'
p614
I1
sg46
g63
sS'blocks.thisIndex'
p615
g447
sS'trials.thisRepN'
p616
I4
sg26
V
sg18
NsS'trials.thisTrialN'
p617
I2
sg17
F0.05200505256652832
sS'blocks.thisRepN'
p618
I0
sg25
V
sa(dp619
g435
g483
sg437
g484
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p620
I19
sg43
g249
sg44
g250
sS'blocks.thisN'
p621
I2
sS'blocks.thisTrialN'
p622
I2
sg32
g12
sg45
g60
sg442
I4
sg47
g443
sg33
g34
sg48
g444
sS'trials.thisIndex'
p623
I3
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p624
g447
sS'trials.thisRepN'
p625
I4
sg26
V
sg20
F0.16782402992248535
sS'trials.thisTrialN'
p626
I3
sg17
F0.21773004531860352
sS'blocks.thisRepN'
p627
I0
sg25
V
sa(dp628
VstimulusText
p629
Vtext_trial_type_4
p630
sVstimulusImage
p631
Vimg_trial_type_4
p632
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p633
I0
sg43
g249
sg44
g250
sS'blocks.thisN'
p634
I3
sS'blocks.thisTrialN'
p635
I3
sg32
g12
sg45
g60
sVtrial_type
p636
I4
sg47
g443
sg33
g34
sg48
VSort the same four categories again. Remember to go as fast as you can while making as few mistakes as possible.\u000a\u000aThe green and white labels and items may help to identify the appropriate category. Use the E and I keys to categorize items into the four groups left and right, and correct errors by hitting the other key.\u000a\u000aPress E or I to continue.
p637
sS'trials.thisIndex'
p638
I3
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p639
g28
(g65
S'\x03\x00\x00\x00'
tRp640
sS'trials.thisRepN'
p641
I0
sg26
V
sg20
F0.20202302932739258
sS'trials.thisTrialN'
p642
I0
sg17
F0.20228290557861328
sS'blocks.thisRepN'
p643
I0
sg25
V
sa(dp644
g629
Vtext_trial_type_3
p645
sg631
Vimg_trial_type_3
p646
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p647
I1
sg43
g249
sg44
g250
sS'blocks.thisN'
p648
I3
sS'blocks.thisTrialN'
p649
I3
sg32
g12
sg45
g60
sg636
I3
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p650
I2
sg46
g63
sS'blocks.thisIndex'
p651
g640
sS'trials.thisRepN'
p652
I0
sg26
V
sg18
NsS'trials.thisTrialN'
p653
I1
sg17
F0.16817808151245117
sS'blocks.thisRepN'
p654
I0
sg25
V
sa(dp655
g629
g630
sg631
g632
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p656
I2
sg43
g249
sg44
g250
sS'blocks.thisN'
p657
I3
sS'blocks.thisTrialN'
p658
I3
sg32
g12
sg45
g60
sg636
I4
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p659
I3
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p660
g640
sS'trials.thisRepN'
p661
I0
sg26
V
sg20
F0.15110301971435547
sS'trials.thisTrialN'
p662
I2
sg17
F0.16790604591369629
sS'blocks.thisRepN'
p663
I0
sg25
V
sa(dp664
g629
Vtext_trial_type_1
p665
sg631
Vimg_trial_type_1
p666
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p667
I3
sg43
g249
sg44
g250
sS'blocks.thisN'
p668
I3
sS'blocks.thisTrialN'
p669
I3
sg32
g12
sg45
g60
sg636
I1
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p670
I0
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p671
g640
sS'trials.thisRepN'
p672
I0
sg26
V
sg20
F0.13487386703491211
sS'trials.thisTrialN'
p673
I3
sg17
F0.13508796691894531
sS'blocks.thisRepN'
p674
I0
sg25
V
sa(dp675
g629
g630
sg631
g632
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p676
I4
sg43
g249
sg44
g250
sS'blocks.thisN'
p677
I3
sS'blocks.thisTrialN'
p678
I3
sg32
g12
sg45
g60
sg636
I4
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p679
I3
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p680
g640
sS'trials.thisRepN'
p681
I1
sg26
V
sg20
F0.10054588317871094
sS'trials.thisTrialN'
p682
I0
sg17
F0.11786103248596191
sS'blocks.thisRepN'
p683
I0
sg25
V
sa(dp684
g629
g630
sg631
g632
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p685
I5
sg43
g249
sg44
g250
sS'blocks.thisN'
p686
I3
sS'blocks.thisTrialN'
p687
I3
sg32
g12
sg45
g60
sg636
I4
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p688
I3
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p689
g640
sS'trials.thisRepN'
p690
I1
sg26
V
sg20
F0.13400411605834961
sS'trials.thisTrialN'
p691
I1
sg17
F0.13422584533691406
sS'blocks.thisRepN'
p692
I0
sg25
V
sa(dp693
g629
g630
sg631
g632
sg16
I1
sg27
g31
sg15
S'e'
sg19
I0
sg24
V4
sS'trials.thisN'
p694
I6
sg43
g249
sg44
g250
sS'blocks.thisN'
p695
I3
sS'blocks.thisTrialN'
p696
I3
sg32
g12
sg45
g60
sg636
I4
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p697
I3
sg46
g63
sS'blocks.thisIndex'
p698
g640
sS'trials.thisRepN'
p699
I1
sg26
V
sg18
NsS'trials.thisTrialN'
p700
I2
sg17
F0.10077905654907227
sS'blocks.thisRepN'
p701
I0
sg25
V
sa(dp702
g629
g645
sg631
g646
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p703
I7
sg43
g249
sg44
g250
sS'blocks.thisN'
p704
I3
sS'blocks.thisTrialN'
p705
I3
sg32
g12
sg45
g60
sg636
I3
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p706
I2
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p707
g640
sS'trials.thisRepN'
p708
I1
sg26
V
sg20
F0.1346287727355957
sS'trials.thisTrialN'
p709
I3
sg17
F0.13489603996276855
sS'blocks.thisRepN'
p710
I0
sg25
V
sa(dp711
g629
Vtext_trial_type_2
p712
sg631
Vimg_trial_type_2
p713
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p714
I8
sg43
g249
sg44
g250
sS'blocks.thisN'
p715
I3
sS'blocks.thisTrialN'
p716
I3
sg32
g12
sg45
g60
sg636
I2
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p717
I1
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p718
g640
sS'trials.thisRepN'
p719
I2
sg26
V
sg20
F0.11743593215942383
sS'trials.thisTrialN'
p720
I0
sg17
F0.11760282516479492
sS'blocks.thisRepN'
p721
I0
sg25
V
sa(dp722
g629
g665
sg631
g666
sg16
I1
sg27
g31
sg15
S'e'
sg19
I0
sg24
V4
sS'trials.thisN'
p723
I9
sg43
g249
sg44
g250
sS'blocks.thisN'
p724
I3
sS'blocks.thisTrialN'
p725
I3
sg32
g12
sg45
g60
sg636
I1
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p726
I0
sg46
g63
sS'blocks.thisIndex'
p727
g640
sS'trials.thisRepN'
p728
I2
sg26
V
sg18
NsS'trials.thisTrialN'
p729
I1
sg17
F0.067968130111694336
sS'blocks.thisRepN'
p730
I0
sg25
V
sa(dp731
g629
g630
sg631
g632
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p732
I10
sg43
g249
sg44
g250
sS'blocks.thisN'
p733
I3
sS'blocks.thisTrialN'
p734
I3
sg32
g12
sg45
g60
sg636
I4
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p735
I3
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p736
g640
sS'trials.thisRepN'
p737
I2
sg26
V
sg20
F0.16848301887512207
sS'trials.thisTrialN'
p738
I2
sg17
F0.1690208911895752
sS'blocks.thisRepN'
p739
I0
sg25
V
sa(dp740
g629
g645
sg631
g646
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p741
I11
sg43
g249
sg44
g250
sS'blocks.thisN'
p742
I3
sS'blocks.thisTrialN'
p743
I3
sg32
g12
sg45
g60
sg636
I3
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p744
I2
sg46
g63
sS'blocks.thisIndex'
p745
g640
sS'trials.thisRepN'
p746
I2
sg26
V
sg18
NsS'trials.thisTrialN'
p747
I3
sg17
F0.13478589057922363
sS'blocks.thisRepN'
p748
I0
sg25
V
sa(dp749
g629
g712
sg631
g713
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p750
I12
sg43
g249
sg44
g250
sS'blocks.thisN'
p751
I3
sS'blocks.thisTrialN'
p752
I3
sg32
g12
sg45
g60
sg636
I2
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p753
I1
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p754
g640
sS'trials.thisRepN'
p755
I3
sg26
V
sg20
F0.11699700355529785
sS'trials.thisTrialN'
p756
I0
sg17
F0.11749601364135742
sS'blocks.thisRepN'
p757
I0
sg25
V
sa(dp758
g629
g665
sg631
g666
sg16
I1
sg27
g31
sg15
S'e'
sg19
I0
sg24
V4
sS'trials.thisN'
p759
I13
sg43
g249
sg44
g250
sS'blocks.thisN'
p760
I3
sS'blocks.thisTrialN'
p761
I3
sg32
g12
sg45
g60
sg636
I1
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p762
I0
sg46
g63
sS'blocks.thisIndex'
p763
g640
sS'trials.thisRepN'
p764
I3
sg26
V
sg18
NsS'trials.thisTrialN'
p765
I1
sg17
F0.10133099555969238
sS'blocks.thisRepN'
p766
I0
sg25
V
sa(dp767
g629
g630
sg631
g632
sg16
I1
sg27
g31
sg15
S'e'
sg19
I0
sg24
V4
sS'trials.thisN'
p768
I14
sg43
g249
sg44
g250
sS'blocks.thisN'
p769
I3
sS'blocks.thisTrialN'
p770
I3
sg32
g12
sg45
g60
sg636
I4
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p771
I3
sg46
g63
sS'blocks.thisIndex'
p772
g640
sS'trials.thisRepN'
p773
I3
sg26
V
sg18
NsS'trials.thisTrialN'
p774
I2
sg17
F0.13443183898925781
sS'blocks.thisRepN'
p775
I0
sg25
V
sa(dp776
g629
g712
sg631
g713
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p777
I15
sg43
g249
sg44
g250
sS'blocks.thisN'
p778
I3
sS'blocks.thisTrialN'
p779
I3
sg32
g12
sg45
g60
sg636
I2
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p780
I1
sg46
g63
sS'blocks.thisIndex'
p781
g640
sS'trials.thisRepN'
p782
I3
sg26
V
sg18
NsS'trials.thisTrialN'
p783
I3
sg17
F0.13476204872131348
sS'blocks.thisRepN'
p784
I0
sg25
V
sa(dp785
g629
g712
sg631
g713
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p786
I16
sg43
g249
sg44
g250
sS'blocks.thisN'
p787
I3
sS'blocks.thisTrialN'
p788
I3
sg32
g12
sg45
g60
sg636
I2
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p789
I1
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p790
g640
sS'trials.thisRepN'
p791
I4
sg26
V
sg20
F0.1339421272277832
sS'trials.thisTrialN'
p792
I0
sg17
F0.13447380065917969
sS'blocks.thisRepN'
p793
I0
sg25
V
sa(dp794
g629
g630
sg631
g632
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p795
I17
sg43
g249
sg44
g250
sS'blocks.thisN'
p796
I3
sS'blocks.thisTrialN'
p797
I3
sg32
g12
sg45
g60
sg636
I4
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p798
I3
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p799
g640
sS'trials.thisRepN'
p800
I4
sg26
V
sg20
F0.10070681571960449
sS'trials.thisTrialN'
p801
I1
sg17
F0.11742091178894043
sS'blocks.thisRepN'
p802
I0
sg25
V
sa(dp803
g629
g665
sg631
g666
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p804
I18
sg43
g249
sg44
g250
sS'blocks.thisN'
p805
I3
sS'blocks.thisTrialN'
p806
I3
sg32
g12
sg45
g60
sg636
I1
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p807
I0
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p808
g640
sS'trials.thisRepN'
p809
I4
sg26
V
sg20
F0.08434605598449707
sS'trials.thisTrialN'
p810
I2
sg17
F0.10133504867553711
sS'blocks.thisRepN'
p811
I0
sg25
V
sa(dp812
g629
g712
sg631
g713
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p813
I19
sg43
g249
sg44
g250
sS'blocks.thisN'
p814
I3
sS'blocks.thisTrialN'
p815
I3
sg32
g12
sg45
g60
sg636
I2
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p816
I1
sg46
g63
sS'blocks.thisIndex'
p817
g640
sS'trials.thisRepN'
p818
I4
sg26
V
sg18
NsS'trials.thisTrialN'
p819
I3
sg17
F0.11772394180297852
sS'blocks.thisRepN'
p820
I0
sg25
V
sa(dp821
g629
g630
sg631
g632
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p822
I20
sg43
g249
sg44
g250
sS'blocks.thisN'
p823
I3
sS'blocks.thisTrialN'
p824
I3
sg32
g12
sg45
g60
sg636
I4
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p825
I3
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p826
g640
sS'trials.thisRepN'
p827
I5
sg26
V
sg20
F0.13424491882324219
sS'trials.thisTrialN'
p828
I0
sg17
F0.13474822044372559
sS'blocks.thisRepN'
p829
I0
sg25
V
sa(dp830
g629
g630
sg631
g632
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p831
I21
sg43
g249
sg44
g250
sS'blocks.thisN'
p832
I3
sS'blocks.thisTrialN'
p833
I3
sg32
g12
sg45
g60
sg636
I4
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p834
I3
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p835
g640
sS'trials.thisRepN'
p836
I5
sg26
V
sg20
F0.11674714088439941
sS'trials.thisTrialN'
p837
I1
sg17
F0.13519406318664551
sS'blocks.thisRepN'
p838
I0
sg25
V
sa(dp839
g629
g665
sg631
g666
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p840
I22
sg43
g249
sg44
g250
sS'blocks.thisN'
p841
I3
sS'blocks.thisTrialN'
p842
I3
sg32
g12
sg45
g60
sg636
I1
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p843
I0
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p844
g640
sS'trials.thisRepN'
p845
I5
sg26
V
sg20
F0.085221052169799805
sS'trials.thisTrialN'
p846
I2
sg17
F0.10076379776000977
sS'blocks.thisRepN'
p847
I0
sg25
V
sa(dp848
g629
g712
sg631
g713
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p849
I23
sg43
g249
sg44
g250
sS'blocks.thisN'
p850
I3
sS'blocks.thisTrialN'
p851
I3
sg32
g12
sg45
g60
sg636
I2
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p852
I1
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p853
g640
sS'trials.thisRepN'
p854
I5
sg26
V
sg20
F0.10052704811096191
sS'trials.thisTrialN'
p855
I3
sg17
F0.11739706993103027
sS'blocks.thisRepN'
p856
I0
sg25
V
sa(dp857
g629
g712
sg631
g713
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p858
I24
sg43
g249
sg44
g250
sS'blocks.thisN'
p859
I3
sS'blocks.thisTrialN'
p860
I3
sg32
g12
sg45
g60
sg636
I2
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p861
I1
sg46
g63
sS'blocks.thisIndex'
p862
g640
sS'trials.thisRepN'
p863
I6
sg26
V
sg18
NsS'trials.thisTrialN'
p864
I0
sg17
F0.084471940994262695
sS'blocks.thisRepN'
p865
I0
sg25
V
sa(dp866
g629
g665
sg631
g666
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p867
I25
sg43
g249
sg44
g250
sS'blocks.thisN'
p868
I3
sS'blocks.thisTrialN'
p869
I3
sg32
g12
sg45
g60
sg636
I1
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p870
I0
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p871
g640
sS'trials.thisRepN'
p872
I6
sg26
V
sg20
F0.10032296180725098
sS'trials.thisTrialN'
p873
I1
sg17
F0.11843395233154297
sS'blocks.thisRepN'
p874
I0
sg25
V
sa(dp875
g629
g665
sg631
g666
sg16
I1
sg27
g31
sg15
S'e'
sg19
I0
sg24
V4
sS'trials.thisN'
p876
I26
sg43
g249
sg44
g250
sS'blocks.thisN'
p877
I3
sS'blocks.thisTrialN'
p878
I3
sg32
g12
sg45
g60
sg636
I1
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p879
I0
sg46
g63
sS'blocks.thisIndex'
p880
g640
sS'trials.thisRepN'
p881
I6
sg26
V
sg18
NsS'trials.thisTrialN'
p882
I2
sg17
F0.084202051162719727
sS'blocks.thisRepN'
p883
I0
sg25
V
sa(dp884
g629
g645
sg631
g646
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p885
I27
sg43
g249
sg44
g250
sS'blocks.thisN'
p886
I3
sS'blocks.thisTrialN'
p887
I3
sg32
g12
sg45
g60
sg636
I3
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p888
I2
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p889
g640
sS'trials.thisRepN'
p890
I6
sg26
V
sg20
F0.10138392448425293
sS'trials.thisTrialN'
p891
I3
sg17
F0.10169601440429688
sS'blocks.thisRepN'
p892
I0
sg25
V
sa(dp893
g629
g712
sg631
g713
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p894
I28
sg43
g249
sg44
g250
sS'blocks.thisN'
p895
I3
sS'blocks.thisTrialN'
p896
I3
sg32
g12
sg45
g60
sg636
I2
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p897
I1
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p898
g640
sS'trials.thisRepN'
p899
I7
sg26
V
sg20
F0.11683297157287598
sS'trials.thisTrialN'
p900
I0
sg17
F0.13463616371154785
sS'blocks.thisRepN'
p901
I0
sg25
V
sa(dp902
g629
g665
sg631
g666
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p903
I29
sg43
g249
sg44
g250
sS'blocks.thisN'
p904
I3
sS'blocks.thisTrialN'
p905
I3
sg32
g12
sg45
g60
sg636
I1
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p906
I0
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p907
g640
sS'trials.thisRepN'
p908
I7
sg26
V
sg20
F0.10052490234375
sS'trials.thisTrialN'
p909
I1
sg17
F0.11733102798461914
sS'blocks.thisRepN'
p910
I0
sg25
V
sa(dp911
g629
g712
sg631
g713
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p912
I30
sg43
g249
sg44
g250
sS'blocks.thisN'
p913
I3
sS'blocks.thisTrialN'
p914
I3
sg32
g12
sg45
g60
sg636
I2
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p915
I1
sg46
g63
sS'blocks.thisIndex'
p916
g640
sS'trials.thisRepN'
p917
I7
sg26
V
sg18
NsS'trials.thisTrialN'
p918
I2
sg17
F0.10061502456665039
sS'blocks.thisRepN'
p919
I0
sg25
V
sa(dp920
g629
g645
sg631
g646
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p921
I31
sg43
g249
sg44
g250
sS'blocks.thisN'
p922
I3
sS'blocks.thisTrialN'
p923
I3
sg32
g12
sg45
g60
sg636
I3
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p924
I2
sg46
g63
sS'blocks.thisIndex'
p925
g640
sS'trials.thisRepN'
p926
I7
sg26
V
sg18
NsS'trials.thisTrialN'
p927
I3
sg17
F0.084244012832641602
sS'blocks.thisRepN'
p928
I0
sg25
V
sa(dp929
g629
g645
sg631
g646
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p930
I32
sg43
g249
sg44
g250
sS'blocks.thisN'
p931
I3
sS'blocks.thisTrialN'
p932
I3
sg32
g12
sg45
g60
sg636
I3
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p933
I2
sg46
g63
sS'blocks.thisIndex'
p934
g640
sS'trials.thisRepN'
p935
I8
sg26
V
sg18
NsS'trials.thisTrialN'
p936
I0
sg17
F0.11812305450439453
sS'blocks.thisRepN'
p937
I0
sg25
V
sa(dp938
g629
g645
sg631
g646
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p939
I33
sg43
g249
sg44
g250
sS'blocks.thisN'
p940
I3
sS'blocks.thisTrialN'
p941
I3
sg32
g12
sg45
g60
sg636
I3
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p942
I2
sg46
g63
sS'blocks.thisIndex'
p943
g640
sS'trials.thisRepN'
p944
I8
sg26
V
sg18
NsS'trials.thisTrialN'
p945
I1
sg17
F0.10163021087646484
sS'blocks.thisRepN'
p946
I0
sg25
V
sa(dp947
g629
g645
sg631
g646
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p948
I34
sg43
g249
sg44
g250
sS'blocks.thisN'
p949
I3
sS'blocks.thisTrialN'
p950
I3
sg32
g12
sg45
g60
sg636
I3
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p951
I2
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p952
g640
sS'trials.thisRepN'
p953
I8
sg26
V
sg20
F0.13454794883728027
sS'trials.thisTrialN'
p954
I2
sg17
F0.13484001159667969
sS'blocks.thisRepN'
p955
I0
sg25
V
sa(dp956
g629
g645
sg631
g646
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p957
I35
sg43
g249
sg44
g250
sS'blocks.thisN'
p958
I3
sS'blocks.thisTrialN'
p959
I3
sg32
g12
sg45
g60
sg636
I3
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p960
I2
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p961
g640
sS'trials.thisRepN'
p962
I8
sg26
V
sg20
F0.10154581069946289
sS'trials.thisTrialN'
p963
I3
sg17
F0.11837100982666016
sS'blocks.thisRepN'
p964
I0
sg25
V
sa(dp965
g629
g645
sg631
g646
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p966
I36
sg43
g249
sg44
g250
sS'blocks.thisN'
p967
I3
sS'blocks.thisTrialN'
p968
I3
sg32
g12
sg45
g60
sg636
I3
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p969
I2
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p970
g640
sS'trials.thisRepN'
p971
I9
sg26
V
sg20
F0.1182560920715332
sS'trials.thisTrialN'
p972
I0
sg17
F0.11859583854675293
sS'blocks.thisRepN'
p973
I0
sg25
V
sa(dp974
g629
g665
sg631
g666
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p975
I37
sg43
g249
sg44
g250
sS'blocks.thisN'
p976
I3
sS'blocks.thisTrialN'
p977
I3
sg32
g12
sg45
g60
sg636
I1
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p978
I0
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p979
g640
sS'trials.thisRepN'
p980
I9
sg26
V
sg20
F0.1355440616607666
sS'trials.thisTrialN'
p981
I1
sg17
F0.13593196868896484
sS'blocks.thisRepN'
p982
I0
sg25
V
sa(dp983
g629
g712
sg631
g713
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p984
I38
sg43
g249
sg44
g250
sS'blocks.thisN'
p985
I3
sS'blocks.thisTrialN'
p986
I3
sg32
g12
sg45
g60
sg636
I2
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p987
I1
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p988
g640
sS'trials.thisRepN'
p989
I9
sg26
V
sg20
F0.16766810417175293
sS'trials.thisTrialN'
p990
I2
sg17
F0.16821718215942383
sS'blocks.thisRepN'
p991
I0
sg25
V
sa(dp992
g629
g665
sg631
g666
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p993
I39
sg43
g249
sg44
g250
sS'blocks.thisN'
p994
I3
sS'blocks.thisTrialN'
p995
I3
sg32
g12
sg45
g60
sg636
I1
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p996
I0
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p997
g640
sS'trials.thisRepN'
p998
I9
sg26
V
sg20
F0.11613798141479492
sS'trials.thisTrialN'
p999
I3
sg17
F0.13424301147460938
sS'blocks.thisRepN'
p1000
I0
sg25
V
sa(dp1001
VstimulusText
p1002
Vtext_trial_type_2
p1003
sVstimulusImage
p1004
Vimg_trial_type_2
p1005
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1006
I0
sg43
g249
sg44
g250
sS'blocks.thisN'
p1007
I4
sS'blocks.thisTrialN'
p1008
I4
sg32
g12
sg45
V 
sVtrial_type
p1009
I2
sg47
V 
sg33
g34
sg48
VNotice above, there are only two cateogries and they have switched positions. The concept that was previously on the left is now on the right, and the concept that was on the right is now on the left. Practice this new configuration.\u000a\u000aUse the E and I keys to catgorize items left and right, and correct errors by hitting the other key.\u000a\u000aPress E or I to continue.
p1010
sS'trials.thisIndex'
p1011
I1
sg46
V 
sg18
S'i'
sS'blocks.thisIndex'
p1012
g28
(g65
S'\x04\x00\x00\x00'
tRp1013
sS'trials.thisRepN'
p1014
I0
sg26
V
sg20
F0.2355499267578125
sS'trials.thisTrialN'
p1015
I0
sg17
F0.25202012062072754
sS'blocks.thisRepN'
p1016
I0
sg25
V
sa(dp1017
g1002
Vtext_trial_type_1
p1018
sg1004
Vimg_trial_type_1
p1019
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1020
I1
sg43
g249
sg44
g250
sS'blocks.thisN'
p1021
I4
sS'blocks.thisTrialN'
p1022
I4
sg32
g12
sg45
V 
sg1009
I1
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1023
I0
sg46
V 
sg18
S'e'
sS'blocks.thisIndex'
p1024
g1013
sS'trials.thisRepN'
p1025
I0
sg26
V
sg20
F0.084189176559448242
sS'trials.thisTrialN'
p1026
I1
sg17
F0.084726810455322266
sS'blocks.thisRepN'
p1027
I0
sg25
V
sa(dp1028
g1002
g1003
sg1004
g1005
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1029
I2
sg43
g249
sg44
g250
sS'blocks.thisN'
p1030
I4
sS'blocks.thisTrialN'
p1031
I4
sg32
g12
sg45
V 
sg1009
I2
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1032
I1
sg46
V 
sg18
S'i'
sS'blocks.thisIndex'
p1033
g1013
sS'trials.thisRepN'
p1034
I1
sg26
V
sg20
F0.10045099258422852
sS'trials.thisTrialN'
p1035
I0
sg17
F0.11719202995300293
sS'blocks.thisRepN'
p1036
I0
sg25
V
sa(dp1037
g1002
g1003
sg1004
g1005
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1038
I3
sg43
g249
sg44
g250
sS'blocks.thisN'
p1039
I4
sS'blocks.thisTrialN'
p1040
I4
sg32
g12
sg45
V 
sg1009
I2
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1041
I1
sg46
V 
sg18
S'i'
sS'blocks.thisIndex'
p1042
g1013
sS'trials.thisRepN'
p1043
I1
sg26
V
sg20
F0.033160924911499023
sS'trials.thisTrialN'
p1044
I1
sg17
F0.050026893615722656
sS'blocks.thisRepN'
p1045
I0
sg25
V
sa(dp1046
g1002
g1003
sg1004
g1005
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1047
I4
sg43
g249
sg44
g250
sS'blocks.thisN'
p1048
I4
sS'blocks.thisTrialN'
p1049
I4
sg32
g12
sg45
V 
sg1009
I2
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1050
I1
sg46
V 
sg18
S'i'
sS'blocks.thisIndex'
p1051
g1013
sS'trials.thisRepN'
p1052
I2
sg26
V
sg20
F0.051812887191772461
sS'trials.thisTrialN'
p1053
I0
sg17
F0.052263975143432617
sS'blocks.thisRepN'
p1054
I0
sg25
V
sa(dp1055
g1002
g1018
sg1004
g1019
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p1056
I5
sg43
g249
sg44
g250
sS'blocks.thisN'
p1057
I4
sS'blocks.thisTrialN'
p1058
I4
sg32
g12
sg45
V 
sg1009
I1
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1059
I0
sg46
V 
sS'blocks.thisIndex'
p1060
g1013
sS'trials.thisRepN'
p1061
I2
sg26
V
sg18
NsS'trials.thisTrialN'
p1062
I1
sg17
F0.067559957504272461
sS'blocks.thisRepN'
p1063
I0
sg25
V
sa(dp1064
g1002
g1003
sg1004
g1005
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1065
I6
sg43
g249
sg44
g250
sS'blocks.thisN'
p1066
I4
sS'blocks.thisTrialN'
p1067
I4
sg32
g12
sg45
V 
sg1009
I2
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1068
I1
sg46
V 
sg18
S'i'
sS'blocks.thisIndex'
p1069
g1013
sS'trials.thisRepN'
p1070
I3
sg26
V
sg20
F0.083994865417480469
sS'trials.thisTrialN'
p1071
I0
sg17
F0.10168600082397461
sS'blocks.thisRepN'
p1072
I0
sg25
V
sa(dp1073
g1002
g1018
sg1004
g1019
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p1074
I7
sg43
g249
sg44
g250
sS'blocks.thisN'
p1075
I4
sS'blocks.thisTrialN'
p1076
I4
sg32
g12
sg45
V 
sg1009
I1
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1077
I0
sg46
V 
sS'blocks.thisIndex'
p1078
g1013
sS'trials.thisRepN'
p1079
I3
sg26
V
sg18
NsS'trials.thisTrialN'
p1080
I1
sg17
F0.051551103591918945
sS'blocks.thisRepN'
p1081
I0
sg25
V
sa(dp1082
g1002
g1018
sg1004
g1019
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p1083
I8
sg43
g249
sg44
g250
sS'blocks.thisN'
p1084
I4
sS'blocks.thisTrialN'
p1085
I4
sg32
g12
sg45
V 
sg1009
I1
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1086
I0
sg46
V 
sS'blocks.thisIndex'
p1087
g1013
sS'trials.thisRepN'
p1088
I4
sg26
V
sg18
NsS'trials.thisTrialN'
p1089
I0
sg17
F0.05080413818359375
sS'blocks.thisRepN'
p1090
I0
sg25
V
sa(dp1091
g1002
g1003
sg1004
g1005
sg16
I1
sg27
g31
sg15
S'e'
sg19
I0
sg24
V4
sS'trials.thisN'
p1092
I9
sg43
g249
sg44
g250
sS'blocks.thisN'
p1093
I4
sS'blocks.thisTrialN'
p1094
I4
sg32
g12
sg45
V 
sg1009
I2
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1095
I1
sg46
V 
sS'blocks.thisIndex'
p1096
g1013
sS'trials.thisRepN'
p1097
I4
sg26
V
sg18
NsS'trials.thisTrialN'
p1098
I1
sg17
F0.0840301513671875
sS'blocks.thisRepN'
p1099
I0
sg25
V
sa(dp1100
g1002
g1018
sg1004
g1019
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1101
I10
sg43
g249
sg44
g250
sS'blocks.thisN'
p1102
I4
sS'blocks.thisTrialN'
p1103
I4
sg32
g12
sg45
V 
sg1009
I1
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1104
I0
sg46
V 
sg18
S'e'
sS'blocks.thisIndex'
p1105
g1013
sS'trials.thisRepN'
p1106
I5
sg26
V
sg20
F0.10169196128845215
sS'trials.thisTrialN'
p1107
I0
sg17
F0.10195112228393555
sS'blocks.thisRepN'
p1108
I0
sg25
V
sa(dp1109
g1002
g1003
sg1004
g1005
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1110
I11
sg43
g249
sg44
g250
sS'blocks.thisN'
p1111
I4
sS'blocks.thisTrialN'
p1112
I4
sg32
g12
sg45
V 
sg1009
I2
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1113
I1
sg46
V 
sg18
S'i'
sS'blocks.thisIndex'
p1114
g1013
sS'trials.thisRepN'
p1115
I5
sg26
V
sg20
F0.084024906158447266
sS'trials.thisTrialN'
p1116
I1
sg17
F0.084540128707885742
sS'blocks.thisRepN'
p1117
I0
sg25
V
sa(dp1118
g1002
g1018
sg1004
g1019
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1119
I12
sg43
g249
sg44
g250
sS'blocks.thisN'
p1120
I4
sS'blocks.thisTrialN'
p1121
I4
sg32
g12
sg45
V 
sg1009
I1
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1122
I0
sg46
V 
sg18
S'e'
sS'blocks.thisIndex'
p1123
g1013
sS'trials.thisRepN'
p1124
I6
sg26
V
sg20
F0.051165103912353516
sS'trials.thisTrialN'
p1125
I0
sg17
F0.067312002182006836
sS'blocks.thisRepN'
p1126
I0
sg25
V
sa(dp1127
g1002
g1018
sg1004
g1019
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1128
I13
sg43
g249
sg44
g250
sS'blocks.thisN'
p1129
I4
sS'blocks.thisTrialN'
p1130
I4
sg32
g12
sg45
V 
sg1009
I1
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1131
I0
sg46
V 
sg18
S'e'
sS'blocks.thisIndex'
p1132
g1013
sS'trials.thisRepN'
p1133
I6
sg26
V
sg20
F0.10017681121826172
sS'trials.thisTrialN'
p1134
I1
sg17
F0.1006019115447998
sS'blocks.thisRepN'
p1135
I0
sg25
V
sa(dp1136
g1002
g1003
sg1004
g1005
sg16
I1
sg27
g31
sg15
S'e'
sg19
I0
sg24
V4
sS'trials.thisN'
p1137
I14
sg43
g249
sg44
g250
sS'blocks.thisN'
p1138
I4
sS'blocks.thisTrialN'
p1139
I4
sg32
g12
sg45
V 
sg1009
I2
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1140
I1
sg46
V 
sS'blocks.thisIndex'
p1141
g1013
sS'trials.thisRepN'
p1142
I7
sg26
V
sg18
NsS'trials.thisTrialN'
p1143
I0
sg17
F0.050156116485595703
sS'blocks.thisRepN'
p1144
I0
sg25
V
sa(dp1145
g1002
g1018
sg1004
g1019
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p1146
I15
sg43
g249
sg44
g250
sS'blocks.thisN'
p1147
I4
sS'blocks.thisTrialN'
p1148
I4
sg32
g12
sg45
V 
sg1009
I1
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1149
I0
sg46
V 
sS'blocks.thisIndex'
p1150
g1013
sS'trials.thisRepN'
p1151
I7
sg26
V
sg18
NsS'trials.thisTrialN'
p1152
I1
sg17
F0.10143494606018066
sS'blocks.thisRepN'
p1153
I0
sg25
V
sa(dp1154
g1002
g1018
sg1004
g1019
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1155
I16
sg43
g249
sg44
g250
sS'blocks.thisN'
p1156
I4
sS'blocks.thisTrialN'
p1157
I4
sg32
g12
sg45
V 
sg1009
I1
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1158
I0
sg46
V 
sg18
S'e'
sS'blocks.thisIndex'
p1159
g1013
sS'trials.thisRepN'
p1160
I8
sg26
V
sg20
F0.1011509895324707
sS'trials.thisTrialN'
p1161
I0
sg17
F0.10161805152893066
sS'blocks.thisRepN'
p1162
I0
sg25
V
sa(dp1163
g1002
g1018
sg1004
g1019
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1164
I17
sg43
g249
sg44
g250
sS'blocks.thisN'
p1165
I4
sS'blocks.thisTrialN'
p1166
I4
sg32
g12
sg45
V 
sg1009
I1
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1167
I0
sg46
V 
sg18
S'e'
sS'blocks.thisIndex'
p1168
g1013
sS'trials.thisRepN'
p1169
I8
sg26
V
sg20
F0.10064792633056641
sS'trials.thisTrialN'
p1170
I1
sg17
F0.10113811492919922
sS'blocks.thisRepN'
p1171
I0
sg25
V
sa(dp1172
g1002
g1003
sg1004
g1005
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1173
I18
sg43
g249
sg44
g250
sS'blocks.thisN'
p1174
I4
sS'blocks.thisTrialN'
p1175
I4
sg32
g12
sg45
V 
sg1009
I2
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1176
I1
sg46
V 
sg18
S'i'
sS'blocks.thisIndex'
p1177
g1013
sS'trials.thisRepN'
p1178
I9
sg26
V
sg20
F0.068068027496337891
sS'trials.thisTrialN'
p1179
I0
sg17
F0.068488121032714844
sS'blocks.thisRepN'
p1180
I0
sg25
V
sa(dp1181
g1002
g1003
sg1004
g1005
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1182
I19
sg43
g249
sg44
g250
sS'blocks.thisN'
p1183
I4
sS'blocks.thisTrialN'
p1184
I4
sg32
g12
sg45
V 
sg1009
I2
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1185
I1
sg46
V 
sg18
S'i'
sS'blocks.thisIndex'
p1186
g1013
sS'trials.thisRepN'
p1187
I9
sg26
V
sg20
F0.084431886672973633
sS'trials.thisTrialN'
p1188
I1
sg17
F0.1003868579864502
sS'blocks.thisRepN'
p1189
I0
sg25
V
sa(dp1190
g1002
g1018
sg1004
g1019
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1191
I20
sg43
g249
sg44
g250
sS'blocks.thisN'
p1192
I4
sS'blocks.thisTrialN'
p1193
I4
sg32
g12
sg45
V 
sg1009
I1
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1194
I0
sg46
V 
sg18
S'e'
sS'blocks.thisIndex'
p1195
g1013
sS'trials.thisRepN'
p1196
I10
sg26
V
sg20
F0.082854986190795898
sS'trials.thisTrialN'
p1197
I0
sg17
F0.099658966064453125
sS'blocks.thisRepN'
p1198
I0
sg25
V
sa(dp1199
g1002
g1003
sg1004
g1005
sg16
I1
sg27
g31
sg15
S'e'
sg19
I0
sg24
V4
sS'trials.thisN'
p1200
I21
sg43
g249
sg44
g250
sS'blocks.thisN'
p1201
I4
sS'blocks.thisTrialN'
p1202
I4
sg32
g12
sg45
V 
sg1009
I2
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1203
I1
sg46
V 
sS'blocks.thisIndex'
p1204
g1013
sS'trials.thisRepN'
p1205
I10
sg26
V
sg18
NsS'trials.thisTrialN'
p1206
I1
sg17
F0.084980964660644531
sS'blocks.thisRepN'
p1207
I0
sg25
V
sa(dp1208
g1002
g1003
sg1004
g1005
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1209
I22
sg43
g249
sg44
g250
sS'blocks.thisN'
p1210
I4
sS'blocks.thisTrialN'
p1211
I4
sg32
g12
sg45
V 
sg1009
I2
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1212
I1
sg46
V 
sg18
S'i'
sS'blocks.thisIndex'
p1213
g1013
sS'trials.thisRepN'
p1214
I11
sg26
V
sg20
F0.084244012832641602
sS'trials.thisTrialN'
p1215
I0
sg17
F0.10090017318725586
sS'blocks.thisRepN'
p1216
I0
sg25
V
sa(dp1217
g1002
g1018
sg1004
g1019
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p1218
I23
sg43
g249
sg44
g250
sS'blocks.thisN'
p1219
I4
sS'blocks.thisTrialN'
p1220
I4
sg32
g12
sg45
V 
sg1009
I1
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1221
I0
sg46
V 
sS'blocks.thisIndex'
p1222
g1013
sS'trials.thisRepN'
p1223
I11
sg26
V
sg18
NsS'trials.thisTrialN'
p1224
I1
sg17
F0.051277875900268555
sS'blocks.thisRepN'
p1225
I0
sg25
V
sa(dp1226
g1002
g1018
sg1004
g1019
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p1227
I24
sg43
g249
sg44
g250
sS'blocks.thisN'
p1228
I4
sS'blocks.thisTrialN'
p1229
I4
sg32
g12
sg45
V 
sg1009
I1
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1230
I0
sg46
V 
sS'blocks.thisIndex'
p1231
g1013
sS'trials.thisRepN'
p1232
I12
sg26
V
sg18
NsS'trials.thisTrialN'
p1233
I0
sg17
F0.068432807922363281
sS'blocks.thisRepN'
p1234
I0
sg25
V
sa(dp1235
g1002
g1003
sg1004
g1005
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1236
I25
sg43
g249
sg44
g250
sS'blocks.thisN'
p1237
I4
sS'blocks.thisTrialN'
p1238
I4
sg32
g12
sg45
V 
sg1009
I2
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1239
I1
sg46
V 
sg18
S'i'
sS'blocks.thisIndex'
p1240
g1013
sS'trials.thisRepN'
p1241
I12
sg26
V
sg20
F0.067190885543823242
sS'trials.thisTrialN'
p1242
I1
sg17
F0.067633152008056641
sS'blocks.thisRepN'
p1243
I0
sg25
V
sa(dp1244
g1002
g1018
sg1004
g1019
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1245
I26
sg43
g249
sg44
g250
sS'blocks.thisN'
p1246
I4
sS'blocks.thisTrialN'
p1247
I4
sg32
g12
sg45
V 
sg1009
I1
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1248
I0
sg46
V 
sg18
S'e'
sS'blocks.thisIndex'
p1249
g1013
sS'trials.thisRepN'
p1250
I13
sg26
V
sg20
F0.085833072662353516
sS'trials.thisTrialN'
p1251
I0
sg17
F0.085889101028442383
sS'blocks.thisRepN'
p1252
I0
sg25
V
sa(dp1253
g1002
g1003
sg1004
g1005
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1254
I27
sg43
g249
sg44
g250
sS'blocks.thisN'
p1255
I4
sS'blocks.thisTrialN'
p1256
I4
sg32
g12
sg45
V 
sg1009
I2
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1257
I1
sg46
V 
sg18
S'i'
sS'blocks.thisIndex'
p1258
g1013
sS'trials.thisRepN'
p1259
I13
sg26
V
sg20
F0.05144500732421875
sS'trials.thisTrialN'
p1260
I1
sg17
F0.050793886184692383
sS'blocks.thisRepN'
p1261
I0
sg25
V
sa(dp1262
g1002
g1018
sg1004
g1019
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p1263
I28
sg43
g249
sg44
g250
sS'blocks.thisN'
p1264
I4
sS'blocks.thisTrialN'
p1265
I4
sg32
g12
sg45
V 
sg1009
I1
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1266
I0
sg46
V 
sS'blocks.thisIndex'
p1267
g1013
sS'trials.thisRepN'
p1268
I14
sg26
V
sg18
NsS'trials.thisTrialN'
p1269
I0
sg17
F0.084494829177856445
sS'blocks.thisRepN'
p1270
I0
sg25
V
sa(dp1271
g1002
g1003
sg1004
g1005
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1272
I29
sg43
g249
sg44
g250
sS'blocks.thisN'
p1273
I4
sS'blocks.thisTrialN'
p1274
I4
sg32
g12
sg45
V 
sg1009
I2
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1275
I1
sg46
V 
sg18
S'i'
sS'blocks.thisIndex'
p1276
g1013
sS'trials.thisRepN'
p1277
I14
sg26
V
sg20
F0.067427158355712891
sS'trials.thisTrialN'
p1278
I1
sg17
F0.0849761962890625
sS'blocks.thisRepN'
p1279
I0
sg25
V
sa(dp1280
g1002
g1018
sg1004
g1019
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1281
I30
sg43
g249
sg44
g250
sS'blocks.thisN'
p1282
I4
sS'blocks.thisTrialN'
p1283
I4
sg32
g12
sg45
V 
sg1009
I1
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1284
I0
sg46
V 
sg18
S'e'
sS'blocks.thisIndex'
p1285
g1013
sS'trials.thisRepN'
p1286
I15
sg26
V
sg20
F0.10065817832946777
sS'trials.thisTrialN'
p1287
I0
sg17
F0.10117983818054199
sS'blocks.thisRepN'
p1288
I0
sg25
V
sa(dp1289
g1002
g1003
sg1004
g1005
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1290
I31
sg43
g249
sg44
g250
sS'blocks.thisN'
p1291
I4
sS'blocks.thisTrialN'
p1292
I4
sg32
g12
sg45
V 
sg1009
I2
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1293
I1
sg46
V 
sg18
S'i'
sS'blocks.thisIndex'
p1294
g1013
sS'trials.thisRepN'
p1295
I15
sg26
V
sg20
F0.05014491081237793
sS'trials.thisTrialN'
p1296
I1
sg17
F0.083648920059204102
sS'blocks.thisRepN'
p1297
I0
sg25
V
sa(dp1298
g1002
g1003
sg1004
g1005
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1299
I32
sg43
g249
sg44
g250
sS'blocks.thisN'
p1300
I4
sS'blocks.thisTrialN'
p1301
I4
sg32
g12
sg45
V 
sg1009
I2
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1302
I1
sg46
V 
sg18
S'i'
sS'blocks.thisIndex'
p1303
g1013
sS'trials.thisRepN'
p1304
I16
sg26
V
sg20
F0.050408124923706055
sS'trials.thisTrialN'
p1305
I0
sg17
F0.067487001419067383
sS'blocks.thisRepN'
p1306
I0
sg25
V
sa(dp1307
g1002
g1003
sg1004
g1005
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1308
I33
sg43
g249
sg44
g250
sS'blocks.thisN'
p1309
I4
sS'blocks.thisTrialN'
p1310
I4
sg32
g12
sg45
V 
sg1009
I2
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1311
I1
sg46
V 
sg18
S'i'
sS'blocks.thisIndex'
p1312
g1013
sS'trials.thisRepN'
p1313
I16
sg26
V
sg20
F0.067903995513916016
sS'trials.thisTrialN'
p1314
I1
sg17
F0.083569049835205078
sS'blocks.thisRepN'
p1315
I0
sg25
V
sa(dp1316
g1002
g1018
sg1004
g1019
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1317
I34
sg43
g249
sg44
g250
sS'blocks.thisN'
p1318
I4
sS'blocks.thisTrialN'
p1319
I4
sg32
g12
sg45
V 
sg1009
I1
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1320
I0
sg46
V 
sg18
S'e'
sS'blocks.thisIndex'
p1321
g1013
sS'trials.thisRepN'
p1322
I17
sg26
V
sg20
F0.051046133041381836
sS'trials.thisTrialN'
p1323
I0
sg17
F0.067181110382080078
sS'blocks.thisRepN'
p1324
I0
sg25
V
sa(dp1325
g1002
g1003
sg1004
g1005
sg16
I1
sg27
g31
sg15
S'e'
sg19
I0
sg24
V4
sS'trials.thisN'
p1326
I35
sg43
g249
sg44
g250
sS'blocks.thisN'
p1327
I4
sS'blocks.thisTrialN'
p1328
I4
sg32
g12
sg45
V 
sg1009
I2
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1329
I1
sg46
V 
sS'blocks.thisIndex'
p1330
g1013
sS'trials.thisRepN'
p1331
I17
sg26
V
sg18
NsS'trials.thisTrialN'
p1332
I1
sg17
F0.050480842590332031
sS'blocks.thisRepN'
p1333
I0
sg25
V
sa(dp1334
g1002
g1003
sg1004
g1005
sg16
I1
sg27
g31
sg15
S'e'
sg19
I0
sg24
V4
sS'trials.thisN'
p1335
I36
sg43
g249
sg44
g250
sS'blocks.thisN'
p1336
I4
sS'blocks.thisTrialN'
p1337
I4
sg32
g12
sg45
V 
sg1009
I2
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1338
I1
sg46
V 
sS'blocks.thisIndex'
p1339
g1013
sS'trials.thisRepN'
p1340
I18
sg26
V
sg18
NsS'trials.thisTrialN'
p1341
I0
sg17
F0.11851906776428223
sS'blocks.thisRepN'
p1342
I0
sg25
V
sa(dp1343
g1002
g1018
sg1004
g1019
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1344
I37
sg43
g249
sg44
g250
sS'blocks.thisN'
p1345
I4
sS'blocks.thisTrialN'
p1346
I4
sg32
g12
sg45
V 
sg1009
I1
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1347
I0
sg46
V 
sg18
S'e'
sS'blocks.thisIndex'
p1348
g1013
sS'trials.thisRepN'
p1349
I18
sg26
V
sg20
F0.050917148590087891
sS'trials.thisTrialN'
p1350
I1
sg17
F0.068477869033813477
sS'blocks.thisRepN'
p1351
I0
sg25
V
sa(dp1352
g1002
g1018
sg1004
g1019
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p1353
I38
sg43
g249
sg44
g250
sS'blocks.thisN'
p1354
I4
sS'blocks.thisTrialN'
p1355
I4
sg32
g12
sg45
V 
sg1009
I1
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1356
I0
sg46
V 
sS'blocks.thisIndex'
p1357
g1013
sS'trials.thisRepN'
p1358
I19
sg26
V
sg18
NsS'trials.thisTrialN'
p1359
I0
sg17
F0.050657987594604492
sS'blocks.thisRepN'
p1360
I0
sg25
V
sa(dp1361
g1002
g1018
sg1004
g1019
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1362
I39
sg43
g249
sg44
g250
sS'blocks.thisN'
p1363
I4
sS'blocks.thisTrialN'
p1364
I4
sg32
g12
sg45
V 
sg1009
I1
sg47
V 
sg33
g34
sg48
g1010
sS'trials.thisIndex'
p1365
I0
sg46
V 
sg18
S'e'
sS'blocks.thisIndex'
p1366
g1013
sS'trials.thisRepN'
p1367
I19
sg26
V
sg20
F0.10016298294067383
sS'trials.thisTrialN'
p1368
I1
sg17
F0.1343381404876709
sS'blocks.thisRepN'
p1369
I0
sg25
V
sa(dp1370
VstimulusText
p1371
Vtext_trial_type_4
p1372
sVstimulusImage
p1373
Vimg_trial_type_4
p1374
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1375
I0
sg43
g249
sg44
g250
sS'blocks.thisN'
p1376
I5
sS'blocks.thisTrialN'
p1377
I5
sg32
g12
sg45
g60
sVtrial_type
p1378
I4
sg47
g443
sg33
g34
sg48
VSee above, the four categories now appear together in a new configuration. Remember, each item belongs to only one group.\u000a\u000aThe green and white labels and items may help to identify the appropriate category. Use the E and I keys to categorize items into the four groups left and right, and correct errors by hitting the other key.\u000a\u000aPress E or I to continue.
p1379
sS'trials.thisIndex'
p1380
I3
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p1381
g28
(g65
S'\x05\x00\x00\x00'
tRp1382
sS'trials.thisRepN'
p1383
I0
sg26
V
sg20
F0.25253486633300781
sS'trials.thisTrialN'
p1384
I0
sg17
F0.25272512435913086
sS'blocks.thisRepN'
p1385
I0
sg25
V
sa(dp1386
g1371
Vtext_trial_type_1
p1387
sg1373
Vimg_trial_type_1
p1388
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1389
I1
sg43
g249
sg44
g250
sS'blocks.thisN'
p1390
I5
sS'blocks.thisTrialN'
p1391
I5
sg32
g12
sg45
g60
sg1378
I1
sg47
g443
sg33
g34
sg48
g1379
sS'trials.thisIndex'
p1392
I0
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p1393
g1382
sS'trials.thisRepN'
p1394
I0
sg26
V
sg20
F0.16715407371520996
sS'trials.thisTrialN'
p1395
I1
sg17
F0.18414211273193359
sS'blocks.thisRepN'
p1396
I0
sg25
V
sa(dp1397
g1371
Vtext_trial_type_2
p1398
sg1373
Vimg_trial_type_2
p1399
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1400
I2
sg43
g249
sg44
g250
sS'blocks.thisN'
p1401
I5
sS'blocks.thisTrialN'
p1402
I5
sg32
g12
sg45
g60
sg1378
I2
sg47
g443
sg33
g34
sg48
g1379
sS'trials.thisIndex'
p1403
I1
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p1404
g1382
sS'trials.thisRepN'
p1405
I0
sg26
V
sg20
F0.13506197929382324
sS'trials.thisTrialN'
p1406
I2
sg17
F0.15231513977050781
sS'blocks.thisRepN'
p1407
I0
sg25
V
sa(dp1408
g1371
g1387
sg1373
g1388
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1409
I3
sg43
g249
sg44
g250
sS'blocks.thisN'
p1410
I5
sS'blocks.thisTrialN'
p1411
I5
sg32
g12
sg45
g60
sg1378
I1
sg47
g443
sg33
g34
sg48
g1379
sS'trials.thisIndex'
p1412
I0
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p1413
g1382
sS'trials.thisRepN'
p1414
I0
sg26
V
sg20
F0.083349943161010742
sS'trials.thisTrialN'
p1415
I3
sg17
F0.083894968032836914
sS'blocks.thisRepN'
p1416
I0
sg25
V
sa(dp1417
g1371
g1387
sg1373
g1388
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1418
I4
sg43
g249
sg44
g250
sS'blocks.thisN'
p1419
I5
sS'blocks.thisTrialN'
p1420
I5
sg32
g12
sg45
g60
sg1378
I1
sg47
g443
sg33
g34
sg48
g1379
sS'trials.thisIndex'
p1421
I0
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p1422
g1382
sS'trials.thisRepN'
p1423
I1
sg26
V
sg20
F0.050542831420898438
sS'trials.thisTrialN'
p1424
I0
sg17
F0.067610979080200195
sS'blocks.thisRepN'
p1425
I0
sg25
V
sa(dp1426
g1371
g1372
sg1373
g1374
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1427
I5
sg43
g249
sg44
g250
sS'blocks.thisN'
p1428
I5
sS'blocks.thisTrialN'
p1429
I5
sg32
g12
sg45
g60
sg1378
I4
sg47
g443
sg33
g34
sg48
g1379
sS'trials.thisIndex'
p1430
I3
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p1431
g1382
sS'trials.thisRepN'
p1432
I1
sg26
V
sg20
F0.0507659912109375
sS'trials.thisTrialN'
p1433
I1
sg17
F0.067319154739379883
sS'blocks.thisRepN'
p1434
I0
sg25
V
sa(dp1435
g1371
Vtext_trial_type_3
p1436
sg1373
Vimg_trial_type_3
p1437
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p1438
I6
sg43
g249
sg44
g250
sS'blocks.thisN'
p1439
I5
sS'blocks.thisTrialN'
p1440
I5
sg32
g12
sg45
g60
sg1378
I3
sg47
g443
sg33
g34
sg48
g1379
sS'trials.thisIndex'
p1441
I2
sg46
g63
sS'blocks.thisIndex'
p1442
g1382
sS'trials.thisRepN'
p1443
I1
sg26
V
sg18
NsS'trials.thisTrialN'
p1444
I2
sg17
F0.035427093505859375
sS'blocks.thisRepN'
p1445
I0
sg25
V
sa(dp1446
g1371
g1372
sg1373
g1374
sg16
I1
sg27
g31
sg15
S'e'
sg19
I0
sg24
V4
sS'trials.thisN'
p1447
I7
sg43
g249
sg44
g250
sS'blocks.thisN'
p1448
I5
sS'blocks.thisTrialN'
p1449
I5
sg32
g12
sg45
g60
sg1378
I4
sg47
g443
sg33
g34
sg48
g1379
sS'trials.thisIndex'
p1450
I3
sg46
g63
sS'blocks.thisIndex'
p1451
g1382
sS'trials.thisRepN'
p1452
I1
sg26
V
sg18
NsS'trials.thisTrialN'
p1453
I3
sg17
F0.084079980850219727
sS'blocks.thisRepN'
p1454
I0
sg25
V
sa(dp1455
g1371
g1436
sg1373
g1437
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1456
I8
sg43
g249
sg44
g250
sS'blocks.thisN'
p1457
I5
sS'blocks.thisTrialN'
p1458
I5
sg32
g12
sg45
g60
sg1378
I3
sg47
g443
sg33
g34
sg48
g1379
sS'trials.thisIndex'
p1459
I2
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p1460
g1382
sS'trials.thisRepN'
p1461
I2
sg26
V
sg20
F0.083526134490966797
sS'trials.thisTrialN'
p1462
I0
sg17
F0.084071874618530273
sS'blocks.thisRepN'
p1463
I0
sg25
V
sa(dp1464
g1371
g1436
sg1373
g1437
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p1465
I9
sg43
g249
sg44
g250
sS'blocks.thisN'
p1466
I5
sS'blocks.thisTrialN'
p1467
I5
sg32
g12
sg45
g60
sg1378
I3
sg47
g443
sg33
g34
sg48
g1379
sS'trials.thisIndex'
p1468
I2
sg46
g63
sS'blocks.thisIndex'
p1469
g1382
sS'trials.thisRepN'
p1470
I2
sg26
V
sg18
NsS'trials.thisTrialN'
p1471
I1
sg17
F0.10065102577209473
sS'blocks.thisRepN'
p1472
I0
sg25
V
sa(dp1473
g1371
g1398
sg1373
g1399
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1474
I10
sg43
g249
sg44
g250
sS'blocks.thisN'
p1475
I5
sS'blocks.thisTrialN'
p1476
I5
sg32
g12
sg45
g60
sg1378
I2
sg47
g443
sg33
g34
sg48
g1379
sS'trials.thisIndex'
p1477
I1
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p1478
g1382
sS'trials.thisRepN'
p1479
I2
sg26
V
sg20
F0.067431926727294922
sS'trials.thisTrialN'
p1480
I2
sg17
F0.067651987075805664
sS'blocks.thisRepN'
p1481
I0
sg25
V
sa(dp1482
g1371
g1398
sg1373
g1399
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1483
I11
sg43
g249
sg44
g250
sS'blocks.thisN'
p1484
I5
sS'blocks.thisTrialN'
p1485
I5
sg32
g12
sg45
g60
sg1378
I2
sg47
g443
sg33
g34
sg48
g1379
sS'trials.thisIndex'
p1486
I1
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p1487
g1382
sS'trials.thisRepN'
p1488
I2
sg26
V
sg20
F0.050437211990356445
sS'trials.thisTrialN'
p1489
I3
sg17
F0.050971031188964844
sS'blocks.thisRepN'
p1490
I0
sg25
V
sa(dp1491
g1371
g1372
sg1373
g1374
sg16
I1
sg27
g31
sg15
S'e'
sg19
I0
sg24
V4
sS'trials.thisN'
p1492
I12
sg43
g249
sg44
g250
sS'blocks.thisN'
p1493
I5
sS'blocks.thisTrialN'
p1494
I5
sg32
g12
sg45
g60
sg1378
I4
sg47
g443
sg33
g34
sg48
g1379
sS'trials.thisIndex'
p1495
I3
sg46
g63
sS'blocks.thisIndex'
p1496
g1382
sS'trials.thisRepN'
p1497
I3
sg26
V
sg18
NsS'trials.thisTrialN'
p1498
I0
sg17
F0.068190813064575195
sS'blocks.thisRepN'
p1499
I0
sg25
V
sa(dp1500
g1371
g1398
sg1373
g1399
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1501
I13
sg43
g249
sg44
g250
sS'blocks.thisN'
p1502
I5
sS'blocks.thisTrialN'
p1503
I5
sg32
g12
sg45
g60
sg1378
I2
sg47
g443
sg33
g34
sg48
g1379
sS'trials.thisIndex'
p1504
I1
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p1505
g1382
sS'trials.thisRepN'
p1506
I3
sg26
V
sg20
F0.10130691528320312
sS'trials.thisTrialN'
p1507
I1
sg17
F0.11728596687316895
sS'blocks.thisRepN'
p1508
I0
sg25
V
sa(dp1509
g1371
g1387
sg1373
g1388
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p1510
I14
sg43
g249
sg44
g250
sS'blocks.thisN'
p1511
I5
sS'blocks.thisTrialN'
p1512
I5
sg32
g12
sg45
g60
sg1378
I1
sg47
g443
sg33
g34
sg48
g1379
sS'trials.thisIndex'
p1513
I0
sg46
g63
sS'blocks.thisIndex'
p1514
g1382
sS'trials.thisRepN'
p1515
I3
sg26
V
sg18
NsS'trials.thisTrialN'
p1516
I2
sg17
F0.068558931350708008
sS'blocks.thisRepN'
p1517
I0
sg25
V
sa(dp1518
g1371
g1436
sg1373
g1437
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1519
I15
sg43
g249
sg44
g250
sS'blocks.thisN'
p1520
I5
sS'blocks.thisTrialN'
p1521
I5
sg32
g12
sg45
g60
sg1378
I3
sg47
g443
sg33
g34
sg48
g1379
sS'trials.thisIndex'
p1522
I2
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p1523
g1382
sS'trials.thisRepN'
p1524
I3
sg26
V
sg20
F0.10028409957885742
sS'trials.thisTrialN'
p1525
I3
sg17
F0.11852097511291504
sS'blocks.thisRepN'
p1526
I0
sg25
V
sa(dp1527
g1371
g1398
sg1373
g1399
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1528
I16
sg43
g249
sg44
g250
sS'blocks.thisN'
p1529
I5
sS'blocks.thisTrialN'
p1530
I5
sg32
g12
sg45
g60
sg1378
I2
sg47
g443
sg33
g34
sg48
g1379
sS'trials.thisIndex'
p1531
I1
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p1532
g1382
sS'trials.thisRepN'
p1533
I4
sg26
V
sg20
F0.067783117294311523
sS'trials.thisTrialN'
p1534
I0
sg17
F0.084386110305786133
sS'blocks.thisRepN'
p1535
I0
sg25
V
sa(dp1536
g1371
g1372
sg1373
g1374
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1537
I17
sg43
g249
sg44
g250
sS'blocks.thisN'
p1538
I5
sS'blocks.thisTrialN'
p1539
I5
sg32
g12
sg45
g60
sg1378
I4
sg47
g443
sg33
g34
sg48
g1379
sS'trials.thisIndex'
p1540
I3
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p1541
g1382
sS'trials.thisRepN'
p1542
I4
sg26
V
sg20
F0.099692106246948242
sS'trials.thisTrialN'
p1543
I1
sg17
F0.1003880500793457
sS'blocks.thisRepN'
p1544
I0
sg25
V
sa(dp1545
g1371
g1387
sg1373
g1388
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1546
I18
sg43
g249
sg44
g250
sS'blocks.thisN'
p1547
I5
sS'blocks.thisTrialN'
p1548
I5
sg32
g12
sg45
g60
sg1378
I1
sg47
g443
sg33
g34
sg48
g1379
sS'trials.thisIndex'
p1549
I0
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p1550
g1382
sS'trials.thisRepN'
p1551
I4
sg26
V
sg20
F0.13399100303649902
sS'trials.thisTrialN'
p1552
I2
sg17
F0.13450813293457031
sS'blocks.thisRepN'
p1553
I0
sg25
V
sa(dp1554
g1371
g1436
sg1373
g1437
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1555
I19
sg43
g249
sg44
g250
sS'blocks.thisN'
p1556
I5
sS'blocks.thisTrialN'
p1557
I5
sg32
g12
sg45
g60
sg1378
I3
sg47
g443
sg33
g34
sg48
g1379
sS'trials.thisIndex'
p1558
I2
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p1559
g1382
sS'trials.thisRepN'
p1560
I4
sg26
V
sg20
F0.083539962768554688
sS'trials.thisTrialN'
p1561
I3
sg17
F0.083878040313720703
sS'blocks.thisRepN'
p1562
I0
sg25
V
sa(dp1563
VstimulusText
p1564
Vtext_trial_type_2
p1565
sVstimulusImage
p1566
Vimg_trial_type_2
p1567
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1568
I0
sg43
g249
sg44
g250
sS'blocks.thisN'
p1569
I6
sS'blocks.thisTrialN'
p1570
I6
sg32
g12
sg45
g60
sVtrial_type
p1571
I2
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1572
I1
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p1573
g28
(g65
S'\x06\x00\x00\x00'
tRp1574
sS'trials.thisRepN'
p1575
I0
sg26
V
sg20
F0.067472934722900391
sS'trials.thisTrialN'
p1576
I0
sg17
F0.067986011505126953
sS'blocks.thisRepN'
p1577
I0
sg25
V
sa(dp1578
g1564
g1565
sg1566
g1567
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1579
I1
sg43
g249
sg44
g250
sS'blocks.thisN'
p1580
I6
sS'blocks.thisTrialN'
p1581
I6
sg32
g12
sg45
g60
sg1571
I2
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1582
I1
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p1583
g1574
sS'trials.thisRepN'
p1584
I0
sg26
V
sg20
F0.083378076553344727
sS'trials.thisTrialN'
p1585
I1
sg17
F0.11717891693115234
sS'blocks.thisRepN'
p1586
I0
sg25
V
sa(dp1587
g1564
g1565
sg1566
g1567
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1588
I2
sg43
g249
sg44
g250
sS'blocks.thisN'
p1589
I6
sS'blocks.thisTrialN'
p1590
I6
sg32
g12
sg45
g60
sg1571
I2
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1591
I1
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p1592
g1574
sS'trials.thisRepN'
p1593
I0
sg26
V
sg20
F0.083373069763183594
sS'trials.thisTrialN'
p1594
I2
sg17
F0.08394312858581543
sS'blocks.thisRepN'
p1595
I0
sg25
V
sa(dp1596
g1564
Vtext_trial_type_4
p1597
sg1566
Vimg_trial_type_4
p1598
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1599
I3
sg43
g249
sg44
g250
sS'blocks.thisN'
p1600
I6
sS'blocks.thisTrialN'
p1601
I6
sg32
g12
sg45
g60
sg1571
I4
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1602
I3
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p1603
g1574
sS'trials.thisRepN'
p1604
I0
sg26
V
sg20
F0.11756396293640137
sS'trials.thisTrialN'
p1605
I3
sg17
F0.11781692504882812
sS'blocks.thisRepN'
p1606
I0
sg25
V
sa(dp1607
g1564
g1597
sg1566
g1598
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1608
I4
sg43
g249
sg44
g250
sS'blocks.thisN'
p1609
I6
sS'blocks.thisTrialN'
p1610
I6
sg32
g12
sg45
g60
sg1571
I4
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1611
I3
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p1612
g1574
sS'trials.thisRepN'
p1613
I1
sg26
V
sg20
F0.10085821151733398
sS'trials.thisTrialN'
p1614
I0
sg17
F0.11687707901000977
sS'blocks.thisRepN'
p1615
I0
sg25
V
sa(dp1616
g1564
Vtext_trial_type_3
p1617
sg1566
Vimg_trial_type_3
p1618
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1619
I5
sg43
g249
sg44
g250
sS'blocks.thisN'
p1620
I6
sS'blocks.thisTrialN'
p1621
I6
sg32
g12
sg45
g60
sg1571
I3
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1622
I2
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p1623
g1574
sS'trials.thisRepN'
p1624
I1
sg26
V
sg20
F0.050584077835083008
sS'trials.thisTrialN'
p1625
I1
sg17
F0.067297935485839844
sS'blocks.thisRepN'
p1626
I0
sg25
V
sa(dp1627
g1564
g1617
sg1566
g1618
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1628
I6
sg43
g249
sg44
g250
sS'blocks.thisN'
p1629
I6
sS'blocks.thisTrialN'
p1630
I6
sg32
g12
sg45
g60
sg1571
I3
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1631
I2
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p1632
g1574
sS'trials.thisRepN'
p1633
I1
sg26
V
sg20
F0.10060691833496094
sS'trials.thisTrialN'
p1634
I2
sg17
F0.14977288246154785
sS'blocks.thisRepN'
p1635
I0
sg25
V
sa(dp1636
g1564
g1597
sg1566
g1598
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1637
I7
sg43
g249
sg44
g250
sS'blocks.thisN'
p1638
I6
sS'blocks.thisTrialN'
p1639
I6
sg32
g12
sg45
g60
sg1571
I4
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1640
I3
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p1641
g1574
sS'trials.thisRepN'
p1642
I1
sg26
V
sg20
F0.051968812942504883
sS'trials.thisTrialN'
p1643
I3
sg17
F0.052138090133666992
sS'blocks.thisRepN'
p1644
I0
sg25
V
sa(dp1645
g1564
Vtext_trial_type_1
p1646
sg1566
Vimg_trial_type_1
p1647
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1648
I8
sg43
g249
sg44
g250
sS'blocks.thisN'
p1649
I6
sS'blocks.thisTrialN'
p1650
I6
sg32
g12
sg45
g60
sg1571
I1
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1651
I0
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p1652
g1574
sS'trials.thisRepN'
p1653
I2
sg26
V
sg20
F0.13577604293823242
sS'trials.thisTrialN'
p1654
I0
sg17
F0.13624310493469238
sS'blocks.thisRepN'
p1655
I0
sg25
V
sa(dp1656
g1564
g1597
sg1566
g1598
sg16
I1
sg27
g31
sg15
S'e'
sg19
I0
sg24
V4
sS'trials.thisN'
p1657
I9
sg43
g249
sg44
g250
sS'blocks.thisN'
p1658
I6
sS'blocks.thisTrialN'
p1659
I6
sg32
g12
sg45
g60
sg1571
I4
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1660
I3
sg46
g63
sS'blocks.thisIndex'
p1661
g1574
sS'trials.thisRepN'
p1662
I2
sg26
V
sg18
NsS'trials.thisTrialN'
p1663
I1
sg17
F0.084680080413818359
sS'blocks.thisRepN'
p1664
I0
sg25
V
sa(dp1665
g1564
g1617
sg1566
g1618
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1666
I10
sg43
g249
sg44
g250
sS'blocks.thisN'
p1667
I6
sS'blocks.thisTrialN'
p1668
I6
sg32
g12
sg45
g60
sg1571
I3
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1669
I2
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p1670
g1574
sS'trials.thisRepN'
p1671
I2
sg26
V
sg20
F0.10033702850341797
sS'trials.thisTrialN'
p1672
I2
sg17
F0.11831903457641602
sS'blocks.thisRepN'
p1673
I0
sg25
V
sa(dp1674
g1564
g1617
sg1566
g1618
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p1675
I11
sg43
g249
sg44
g250
sS'blocks.thisN'
p1676
I6
sS'blocks.thisTrialN'
p1677
I6
sg32
g12
sg45
g60
sg1571
I3
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1678
I2
sg46
g63
sS'blocks.thisIndex'
p1679
g1574
sS'trials.thisRepN'
p1680
I2
sg26
V
sg18
NsS'trials.thisTrialN'
p1681
I3
sg17
F0.050835132598876953
sS'blocks.thisRepN'
p1682
I0
sg25
V
sa(dp1683
g1564
g1617
sg1566
g1618
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p1684
I12
sg43
g249
sg44
g250
sS'blocks.thisN'
p1685
I6
sS'blocks.thisTrialN'
p1686
I6
sg32
g12
sg45
g60
sg1571
I3
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1687
I2
sg46
g63
sS'blocks.thisIndex'
p1688
g1574
sS'trials.thisRepN'
p1689
I3
sg26
V
sg18
NsS'trials.thisTrialN'
p1690
I0
sg17
F0.085009098052978516
sS'blocks.thisRepN'
p1691
I0
sg25
V
sa(dp1692
g1564
g1597
sg1566
g1598
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1693
I13
sg43
g249
sg44
g250
sS'blocks.thisN'
p1694
I6
sS'blocks.thisTrialN'
p1695
I6
sg32
g12
sg45
g60
sg1571
I4
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1696
I3
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p1697
g1574
sS'trials.thisRepN'
p1698
I3
sg26
V
sg20
F0.067486047744750977
sS'trials.thisTrialN'
p1699
I1
sg17
F0.084357023239135742
sS'blocks.thisRepN'
p1700
I0
sg25
V
sa(dp1701
g1564
g1617
sg1566
g1618
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1702
I14
sg43
g249
sg44
g250
sS'blocks.thisN'
p1703
I6
sS'blocks.thisTrialN'
p1704
I6
sg32
g12
sg45
g60
sg1571
I3
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1705
I2
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p1706
g1574
sS'trials.thisRepN'
p1707
I3
sg26
V
sg20
F0.035121917724609375
sS'trials.thisTrialN'
p1708
I2
sg17
F0.035336017608642578
sS'blocks.thisRepN'
p1709
I0
sg25
V
sa(dp1710
g1564
g1646
sg1566
g1647
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1711
I15
sg43
g249
sg44
g250
sS'blocks.thisN'
p1712
I6
sS'blocks.thisTrialN'
p1713
I6
sg32
g12
sg45
g60
sg1571
I1
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1714
I0
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p1715
g1574
sS'trials.thisRepN'
p1716
I3
sg26
V
sg20
F0.086442947387695312
sS'trials.thisTrialN'
p1717
I3
sg17
F0.13564395904541016
sS'blocks.thisRepN'
p1718
I0
sg25
V
sa(dp1719
g1564
g1617
sg1566
g1618
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1720
I16
sg43
g249
sg44
g250
sS'blocks.thisN'
p1721
I6
sS'blocks.thisTrialN'
p1722
I6
sg32
g12
sg45
g60
sg1571
I3
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1723
I2
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p1724
g1574
sS'trials.thisRepN'
p1725
I4
sg26
V
sg20
F0.034735918045043945
sS'trials.thisTrialN'
p1726
I0
sg17
F0.1004641056060791
sS'blocks.thisRepN'
p1727
I0
sg25
V
sa(dp1728
g1564
g1646
sg1566
g1647
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1729
I17
sg43
g249
sg44
g250
sS'blocks.thisN'
p1730
I6
sS'blocks.thisTrialN'
p1731
I6
sg32
g12
sg45
g60
sg1571
I1
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1732
I0
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p1733
g1574
sS'trials.thisRepN'
p1734
I4
sg26
V
sg20
F0.067842006683349609
sS'trials.thisTrialN'
p1735
I1
sg17
F0.068059921264648438
sS'blocks.thisRepN'
p1736
I0
sg25
V
sa(dp1737
g1564
g1565
sg1566
g1567
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1738
I18
sg43
g249
sg44
g250
sS'blocks.thisN'
p1739
I6
sS'blocks.thisTrialN'
p1740
I6
sg32
g12
sg45
g60
sg1571
I2
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1741
I1
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p1742
g1574
sS'trials.thisRepN'
p1743
I4
sg26
V
sg20
F0.067068099975585938
sS'trials.thisTrialN'
p1744
I2
sg17
F0.083806991577148438
sS'blocks.thisRepN'
p1745
I0
sg25
V
sa(dp1746
g1564
g1646
sg1566
g1647
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1747
I19
sg43
g249
sg44
g250
sS'blocks.thisN'
p1748
I6
sS'blocks.thisTrialN'
p1749
I6
sg32
g12
sg45
g60
sg1571
I1
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1750
I0
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p1751
g1574
sS'trials.thisRepN'
p1752
I4
sg26
V
sg20
F0.068186044692993164
sS'trials.thisTrialN'
p1753
I3
sg17
F0.068770170211791992
sS'blocks.thisRepN'
p1754
I0
sg25
V
sa(dp1755
g1564
g1646
sg1566
g1647
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1756
I20
sg43
g249
sg44
g250
sS'blocks.thisN'
p1757
I6
sS'blocks.thisTrialN'
p1758
I6
sg32
g12
sg45
g60
sg1571
I1
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1759
I0
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p1760
g1574
sS'trials.thisRepN'
p1761
I5
sg26
V
sg20
F0.067223072052001953
sS'trials.thisTrialN'
p1762
I0
sg17
F0.11740708351135254
sS'blocks.thisRepN'
p1763
I0
sg25
V
sa(dp1764
g1564
g1617
sg1566
g1618
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p1765
I21
sg43
g249
sg44
g250
sS'blocks.thisN'
p1766
I6
sS'blocks.thisTrialN'
p1767
I6
sg32
g12
sg45
g60
sg1571
I3
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1768
I2
sg46
g63
sS'blocks.thisIndex'
p1769
g1574
sS'trials.thisRepN'
p1770
I5
sg26
V
sg18
NsS'trials.thisTrialN'
p1771
I1
sg17
F0.051043987274169922
sS'blocks.thisRepN'
p1772
I0
sg25
V
sa(dp1773
g1564
g1617
sg1566
g1618
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1774
I22
sg43
g249
sg44
g250
sS'blocks.thisN'
p1775
I6
sS'blocks.thisTrialN'
p1776
I6
sg32
g12
sg45
g60
sg1571
I3
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1777
I2
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p1778
g1574
sS'trials.thisRepN'
p1779
I5
sg26
V
sg20
F0.067987918853759766
sS'trials.thisTrialN'
p1780
I2
sg17
F0.068482875823974609
sS'blocks.thisRepN'
p1781
I0
sg25
V
sa(dp1782
g1564
g1565
sg1566
g1567
sg16
I1
sg27
g31
sg15
S'e'
sg19
I0
sg24
V4
sS'trials.thisN'
p1783
I23
sg43
g249
sg44
g250
sS'blocks.thisN'
p1784
I6
sS'blocks.thisTrialN'
p1785
I6
sg32
g12
sg45
g60
sg1571
I2
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1786
I1
sg46
g63
sS'blocks.thisIndex'
p1787
g1574
sS'trials.thisRepN'
p1788
I5
sg26
V
sg18
NsS'trials.thisTrialN'
p1789
I3
sg17
F0.050568103790283203
sS'blocks.thisRepN'
p1790
I0
sg25
V
sa(dp1791
g1564
g1597
sg1566
g1598
sg16
I1
sg27
g31
sg15
S'e'
sg19
I0
sg24
V4
sS'trials.thisN'
p1792
I24
sg43
g249
sg44
g250
sS'blocks.thisN'
p1793
I6
sS'blocks.thisTrialN'
p1794
I6
sg32
g12
sg45
g60
sg1571
I4
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1795
I3
sg46
g63
sS'blocks.thisIndex'
p1796
g1574
sS'trials.thisRepN'
p1797
I6
sg26
V
sg18
NsS'trials.thisTrialN'
p1798
I0
sg17
F0.051642894744873047
sS'blocks.thisRepN'
p1799
I0
sg25
V
sa(dp1800
g1564
g1597
sg1566
g1598
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1801
I25
sg43
g249
sg44
g250
sS'blocks.thisN'
p1802
I6
sS'blocks.thisTrialN'
p1803
I6
sg32
g12
sg45
g60
sg1571
I4
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1804
I3
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p1805
g1574
sS'trials.thisRepN'
p1806
I6
sg26
V
sg20
F0.15096282958984375
sS'trials.thisTrialN'
p1807
I1
sg17
F0.15126705169677734
sS'blocks.thisRepN'
p1808
I0
sg25
V
sa(dp1809
g1564
g1565
sg1566
g1567
sg16
I1
sg27
g31
sg15
S'e'
sg19
I0
sg24
V4
sS'trials.thisN'
p1810
I26
sg43
g249
sg44
g250
sS'blocks.thisN'
p1811
I6
sS'blocks.thisTrialN'
p1812
I6
sg32
g12
sg45
g60
sg1571
I2
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1813
I1
sg46
g63
sS'blocks.thisIndex'
p1814
g1574
sS'trials.thisRepN'
p1815
I6
sg26
V
sg18
NsS'trials.thisTrialN'
p1816
I2
sg17
F0.05018305778503418
sS'blocks.thisRepN'
p1817
I0
sg25
V
sa(dp1818
g1564
g1565
sg1566
g1567
sg16
I1
sg27
g31
sg15
S'e'
sg19
I0
sg24
V4
sS'trials.thisN'
p1819
I27
sg43
g249
sg44
g250
sS'blocks.thisN'
p1820
I6
sS'blocks.thisTrialN'
p1821
I6
sg32
g12
sg45
g60
sg1571
I2
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1822
I1
sg46
g63
sS'blocks.thisIndex'
p1823
g1574
sS'trials.thisRepN'
p1824
I6
sg26
V
sg18
NsS'trials.thisTrialN'
p1825
I3
sg17
F0.30144810676574707
sS'blocks.thisRepN'
p1826
I0
sg25
V
sa(dp1827
g1564
g1646
sg1566
g1647
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1828
I28
sg43
g249
sg44
g250
sS'blocks.thisN'
p1829
I6
sS'blocks.thisTrialN'
p1830
I6
sg32
g12
sg45
g60
sg1571
I1
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1831
I0
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p1832
g1574
sS'trials.thisRepN'
p1833
I7
sg26
V
sg20
F0.068653106689453125
sS'trials.thisTrialN'
p1834
I0
sg17
F0.069085121154785156
sS'blocks.thisRepN'
p1835
I0
sg25
V
sa(dp1836
g1564
g1565
sg1566
g1567
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1837
I29
sg43
g249
sg44
g250
sS'blocks.thisN'
p1838
I6
sS'blocks.thisTrialN'
p1839
I6
sg32
g12
sg45
g60
sg1571
I2
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1840
I1
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p1841
g1574
sS'trials.thisRepN'
p1842
I7
sg26
V
sg20
F0.017100811004638672
sS'trials.thisTrialN'
p1843
I1
sg17
F0.050415992736816406
sS'blocks.thisRepN'
p1844
I0
sg25
V
sa(dp1845
g1564
g1646
sg1566
g1647
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1846
I30
sg43
g249
sg44
g250
sS'blocks.thisN'
p1847
I6
sS'blocks.thisTrialN'
p1848
I6
sg32
g12
sg45
g60
sg1571
I1
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1849
I0
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p1850
g1574
sS'trials.thisRepN'
p1851
I7
sg26
V
sg20
F2.2448849678039551
sS'trials.thisTrialN'
p1852
I2
sg17
F2.2454459667205811
sS'blocks.thisRepN'
p1853
I0
sg25
V
sa(dp1854
g1564
g1646
sg1566
g1647
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1855
I31
sg43
g249
sg44
g250
sS'blocks.thisN'
p1856
I6
sS'blocks.thisTrialN'
p1857
I6
sg32
g12
sg45
g60
sg1571
I1
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1858
I0
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p1859
g1574
sS'trials.thisRepN'
p1860
I7
sg26
V
sg20
F0.13468194007873535
sS'trials.thisTrialN'
p1861
I3
sg17
F0.13492679595947266
sS'blocks.thisRepN'
p1862
I0
sg25
V
sa(dp1863
g1564
g1597
sg1566
g1598
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1864
I32
sg43
g249
sg44
g250
sS'blocks.thisN'
p1865
I6
sS'blocks.thisTrialN'
p1866
I6
sg32
g12
sg45
g60
sg1571
I4
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1867
I3
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p1868
g1574
sS'trials.thisRepN'
p1869
I8
sg26
V
sg20
F0.11721682548522949
sS'trials.thisTrialN'
p1870
I0
sg17
F0.13437294960021973
sS'blocks.thisRepN'
p1871
I0
sg25
V
sa(dp1872
g1564
g1646
sg1566
g1647
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p1873
I33
sg43
g249
sg44
g250
sS'blocks.thisN'
p1874
I6
sS'blocks.thisTrialN'
p1875
I6
sg32
g12
sg45
g60
sg1571
I1
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1876
I0
sg46
g63
sS'blocks.thisIndex'
p1877
g1574
sS'trials.thisRepN'
p1878
I8
sg26
V
sg18
NsS'trials.thisTrialN'
p1879
I1
sg17
F0.13510894775390625
sS'blocks.thisRepN'
p1880
I0
sg25
V
sa(dp1881
g1564
g1565
sg1566
g1567
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1882
I34
sg43
g249
sg44
g250
sS'blocks.thisN'
p1883
I6
sS'blocks.thisTrialN'
p1884
I6
sg32
g12
sg45
g60
sg1571
I2
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1885
I1
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p1886
g1574
sS'trials.thisRepN'
p1887
I8
sg26
V
sg20
F0.11679482460021973
sS'trials.thisTrialN'
p1888
I2
sg17
F0.11731100082397461
sS'blocks.thisRepN'
p1889
I0
sg25
V
sa(dp1890
g1564
g1597
sg1566
g1598
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1891
I35
sg43
g249
sg44
g250
sS'blocks.thisN'
p1892
I6
sS'blocks.thisTrialN'
p1893
I6
sg32
g12
sg45
g60
sg1571
I4
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1894
I3
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p1895
g1574
sS'trials.thisRepN'
p1896
I8
sg26
V
sg20
F0.084652900695800781
sS'trials.thisTrialN'
p1897
I3
sg17
F0.10044622421264648
sS'blocks.thisRepN'
p1898
I0
sg25
V
sa(dp1899
g1564
g1565
sg1566
g1567
sg16
I1
sg27
g31
sg15
S'e'
sg19
I0
sg24
V4
sS'trials.thisN'
p1900
I36
sg43
g249
sg44
g250
sS'blocks.thisN'
p1901
I6
sS'blocks.thisTrialN'
p1902
I6
sg32
g12
sg45
g60
sg1571
I2
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1903
I1
sg46
g63
sS'blocks.thisIndex'
p1904
g1574
sS'trials.thisRepN'
p1905
I9
sg26
V
sg18
NsS'trials.thisTrialN'
p1906
I0
sg17
F0.084742069244384766
sS'blocks.thisRepN'
p1907
I0
sg25
V
sa(dp1908
g1564
g1597
sg1566
g1598
sg16
I1
sg27
g31
sg15
S'e'
sg19
I1
sg24
V4
sS'trials.thisN'
p1909
I37
sg43
g249
sg44
g250
sS'blocks.thisN'
p1910
I6
sS'blocks.thisTrialN'
p1911
I6
sg32
g12
sg45
g60
sg1571
I4
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1912
I3
sg46
g63
sg18
S'i'
sS'blocks.thisIndex'
p1913
g1574
sS'trials.thisRepN'
p1914
I9
sg26
V
sg20
F0.15104913711547852
sS'trials.thisTrialN'
p1915
I1
sg17
F0.15150785446166992
sS'blocks.thisRepN'
p1916
I0
sg25
V
sa(dp1917
g1564
g1617
sg1566
g1618
sg16
I1
sg27
g31
sg15
S'i'
sg19
I1
sg24
V4
sS'trials.thisN'
p1918
I38
sg43
g249
sg44
g250
sS'blocks.thisN'
p1919
I6
sS'blocks.thisTrialN'
p1920
I6
sg32
g12
sg45
g60
sg1571
I3
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1921
I2
sg46
g63
sg18
S'e'
sS'blocks.thisIndex'
p1922
g1574
sS'trials.thisRepN'
p1923
I9
sg26
V
sg20
F0.084442138671875
sS'trials.thisTrialN'
p1924
I2
sg17
F0.084748983383178711
sS'blocks.thisRepN'
p1925
I0
sg25
V
sa(dp1926
g1564
g1646
sg1566
g1647
sg16
I1
sg27
g31
sg15
S'i'
sg19
I0
sg24
V4
sS'trials.thisN'
p1927
I39
sg43
g249
sg44
g250
sS'blocks.thisN'
p1928
I6
sS'blocks.thisTrialN'
p1929
I6
sg32
g12
sg45
g60
sg1571
I1
sg47
g443
sg33
g34
sg48
g637
sS'trials.thisIndex'
p1930
I0
sg46
g63
sS'blocks.thisIndex'
p1931
g1574
sS'trials.thisRepN'
p1932
I9
sg26
V
sg18
NsS'trials.thisTrialN'
p1933
I3
sg17
F0.085424900054931641
sS'blocks.thisRepN'
p1934
I0
sg25
V
sasS'loops'
p1935
(lp1936
g1
(cpsychopy.data
TrialHandler
p1937
g3
NtRp1938
(dp1939
S'origin'
p1940
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[-1.000,-1.000,-1.000]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IAT" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trials_code">\u000a        <Param name="Begin Experiment" val="#declare accuracy feedback message variable&#10;msg=&quot;&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trials_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# choose a random exemplar from the appropriate trial type list&#10;if trial_type == 1:&#10;    text_stimulus = text_trial_type_1_trials.pop()&#10;    image_stimulus = img_trial_type_1_trials.pop()&#10;elif trial_type == 2:&#10;    text_stimulus = text_trial_type_2_trials.pop()&#10;    image_stimulus = img_trial_type_2_trials.pop()&#10;elif trial_type == 3:&#10;    text_stimulus = text_trial_type_3_trials.pop()&#10;    image_stimulus = img_trial_type_3_trials.pop()&#10;elif trial_type == 4:&#10;    text_stimulus = text_trial_type_4_trials.pop()&#10;    image_stimulus = img_trial_type_4_trials.pop()&#10;&#10;# set stimulus colors based on trial type&#10;if trial_type == 1 or trial_type == 2:&#10;     stimulusColor = [1, 1, 1]&#10;elif trial_type &gt;2:&#10;     stimulusColor = [-1, 1, -1]&#10;&#10;# set required and feedback responses&#10;# attributes are invariate across blocks so can be determined based on trial type only&#10;if trial_type == 3: #pos&#10;    requiredAllowed = &quot;i&quot;&#10;    requiredCorrect = &quot;i&quot;&#10;    feedbackAllowed = &quot;e&quot;&#10;    feedbackCorrect = &quot;e&quot;&#10;elif trial_type == 4: #neg&#10;    requiredAllowed = &quot;e&quot;&#10;    requiredCorrect = &quot;e&quot;&#10;    feedbackAllowed = &quot;i&quot;&#10;    feedbackCorrect = &quot;i&quot;&#10;# categories depend on block order, current block and trial type&#10;if block_order == 1: &#10;    if blocks.thisN &lt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;&#10;    elif blocks.thisN &gt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;elif block_order == 2: &#10;    if blocks.thisN &lt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;    elif blocks.thisN &gt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="if len(feedbackResponse.keys)&lt;1:&#10;    msg=&quot;&quot;&#10;else:&#10;    msg=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="stimulusImageBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulusImageBox" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$image_stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val=".6" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulusTextBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulusTextBox" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$stimulusColor" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$text_stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="requiredResponse">\u000a        <Param name="correctAns" val="$requiredCorrect " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="requiredResponse" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="requiredAllowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedbackResponse">\u000a        <Param name="correctAns" val="$feedbackCorrect " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedbackResponse" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedbackAllowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="feedback">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="leftCategoryLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftCategoryLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightCategoryLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightCategoryLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="leftAttributeLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftAttributeLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightAttributeLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightAttributeLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orLeft">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orLeft" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orRight">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orRight" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instruction">\u000a      <CodeComponent name="block_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;import math  # for math.ceil() rounding up&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine rows of examplars (i.e., max number of rows)&#10;&quot;&quot;&quot;&#10;This method creates a fully counterbalanced presentation of exemplars when there are 5&#10;of them, but it will not present each one an equal number of times it the n diverges from 5.&#10;&quot;&quot;&quot;&#10;n_exemplars = len(exemplars)&#10;list_multiplier = int(math.ceil(10/n_exemplars))  # math.ceil() rounds up. 10 is the derived from way block lengths are calculated. Admittedly, this comment doensn't adequately document why it's ten. Honestly, I have to work it out of my fingers every time and can't explain it.&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a&#10;&#10;# declare trial rows (not sure if necessary, but can't be bothered to removed and test)&#10;trial_rows = &quot;&quot;&#10;&#10;# set block order based on participant code&#10;participantNumber = int(expInfo['participant'])&#10;if (participantNumber % 2) == 1: &#10;    block_order = 1&#10;elif (participantNumber % 2) == 0:&#10;    block_order = 2&#10;else:&#10;    print &quot;****condition file error: please enter a numeric participant code****&quot;&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="block_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# set the block length and the rows to pull from based on the current block &#10;# this layout follows Nosek et al. 2007, &quot;The Implicit Association Test at age 7: A methodological and conceptual review&quot;&#10;if blocks.thisN == 0:&#10;    trial_rows = &quot;2:4&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 1:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 2:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 3:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 10   #4*10 = 40 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 4:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 20   #2*20 = 40 trials&#10;    modified_list_multiplier = list_multiplier * 2  # because this block has a different trials:categories ratio&#10;elif blocks.thisN == 5:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 6:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 10   #4*10 = 40 trials&#10;    modified_list_multiplier = list_multiplier&#10;&#10;# Generate list of stimuli for the block&#10;text_trial_type_1_trials = generate_trials('text_trial_type_1_exemplars', modified_list_multiplier)  # function and variable determined at begin exp.&#10;text_trial_type_2_trials = generate_trials('text_trial_type_2_exemplars', modified_list_multiplier)&#10;text_trial_type_3_trials = generate_trials('text_trial_type_3_exemplars', modified_list_multiplier)&#10;text_trial_type_4_trials = generate_trials('text_trial_type_4_exemplars', modified_list_multiplier)&#10;img_trial_type_1_trials = generate_trials('img_trial_type_1_exemplars', modified_list_multiplier)&#10;img_trial_type_2_trials = generate_trials('img_trial_type_2_exemplars', modified_list_multiplier)&#10;img_trial_type_3_trials = generate_trials('img_trial_type_3_exemplars', modified_list_multiplier)&#10;img_trial_type_4_trials = generate_trials('img_trial_type_4_exemplars', modified_list_multiplier)&#10;&#10;# set category and attribute labels based on the block order and current block&#10;if block_order == 1 and blocks.thisN &lt;= 3:&#10;    leftCategory = categoryA&#10;    rightCategory = categoryB&#10;elif block_order == 1 and blocks.thisN &gt; 3:&#10;    leftCategory = categoryB&#10;    rightCategory = categoryA&#10;elif block_order == 2 and blocks.thisN &lt;= 3:&#10;    leftCategory = categoryB&#10;    rightCategory = categoryA&#10;elif block_order == 2 and blocks.thisN &gt; 3:&#10;    leftCategory = categoryA&#10;    rightCategory = categoryB" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="instructionsBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instructionsBox" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instructions" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.05" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="instructionsKey">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="instructionsKey" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1.25" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="leftCategoryLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftCategoryLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightCategoryLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightCategoryLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="leftAttributeLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftAttributeLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightAttributeLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightAttributeLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orLeft_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orLeft_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orRight_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orRight_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="endBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="endBox" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="End of the task" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks">\u000a      <Param name="conditionsFile" val="instructions.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'block': 1, u'instructions': u'In this response task will you have to react to words and propositions that are presented on the screen. In the next phase words will be presented in ORANGE.\u005cn\u005cnIt is your job to decide as soon as possible whether the word refers to TRUE or FALSE.\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.'}, {u'block': 2, u'instructions': u&quot;The next phase some propositions will be presented in BLUE.\u005cnThese propositons are always statements about SELF ESTEEM.\u005cn\u005cnYou must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the right response (TRUE).\u005cnWhen the proposition 'I am worthless' appears, respond with the left response (FALSE).\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 3, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase some words will be presented in ORANGE and some propositions in BLUE. These propositons are always statements about SELF ESTEEM.\u005cn\u005cnAgain, you must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 4, u'instructions': u&quot;IMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\u005cn\u005cnYou must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the left response (FALSE).\u005cnWhen the proposition 'I am worthless' appears, respond with the right response (TRUE).\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 5, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase will again present words in ORANGE and statements in BLUE.\u005cn\u005cnAgain, you must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instruction"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="n_block_repeats" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'stimulusText': u'text_trial_type_1', u'stimulusImage': u'img_trial_type_1', u'trialtype': 1}, {u'stimulusText': u'text_trial_type_2', u'stimulusImage': u'img_trial_type_2', u'trialtype': 2}, {u'stimulusText': u'text_trial_type_3', u'stimulusImage': u'img_trial_type_3', u'trialtype': 3}, {u'stimulusText': u'text_trial_type_4', u'stimulusImage': u'img_trial_type_4', u'trialtype': 4}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="$trial_rows" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="blocks"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p1941
sS'thisTrial'
p1942
(lp1943
sS'_exp'
p1944
I214841264
sg11
S'blocks'
p1945
sg6
g7
sS'thisRepN'
p1946
I1
sg21
I01
sg22
g23
sS'data'
p1947
g1
(cpsychopy.data
DataHandler
p1948
c__builtin__
dict
p1949
(dp1950
S'ran'
p1951
cnumpy.ma.core
_mareconstruct
p1952
(cnumpy.ma.core
MaskedArray
p1953
cnumpy
ndarray
p1954
(I0
tp1955
S'b'
tRp1956
(I1
(I7
I1
tg29
(S'f4'
I0
I1
tRp1957
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00'
NtbsS'order'
p1958
g1952
(g1953
g1954
g1955
S'b'
tRp1959
(I1
(I7
I1
tg1957
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00@\x00\x00@@\x00\x00\x80@\x00\x00\xa0@\x00\x00\xc0@'
S'\x00\x00\x00\x00\x00\x00\x00'
NtbstRp1960
(dp1961
S'isNumeric'
p1962
(dp1963
g1951
I01
sg1958
I01
ssS'trials'
p1964
g1938
sS'dataTypes'
p1965
(lp1966
g1951
ag1958
asS'dataShape'
p1967
(lp1968
I7
aI1
asbsS'method'
p1969
S'sequential'
p1970
sS'sequenceIndices'
p1971
cnumpy.core.multiarray
_reconstruct
p1972
(g1954
(I0
tS'b'
tRp1973
(I1
(I7
I1
tg65
I00
S'\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x04\x00\x00\x00\x05\x00\x00\x00\x06\x00\x00\x00'
tbsS'finished'
p1974
I01
sS'nReps'
p1975
I1
sS'nRemaining'
p1976
I-1
sS'trialList'
p1977
(lp1978
g1
(cpsychopy.data
TrialType
p1979
g1949
(dp1980
g43
V 
sg44
V 
sg45
g60
sg47
V 
sg46
g63
sg48
g61
stRp1981
ag1
(g1979
g1949
(dp1982
g43
g249
sg44
g250
sg45
V 
sg47
V 
sg46
V 
sg48
g254
stRp1983
ag1
(g1979
g1949
(dp1984
g43
g249
sg44
g250
sg45
g60
sg47
g443
sg46
g63
sg48
g444
stRp1985
ag1
(g1979
g1949
(dp1986
g43
g249
sg44
g250
sg45
g60
sg47
g443
sg46
g63
sg48
g637
stRp1987
ag1
(g1979
g1949
(dp1988
g43
g249
sg44
g250
sg45
V 
sg47
V 
sg46
V 
sg48
g1010
stRp1989
ag1
(g1979
g1949
(dp1990
g43
g249
sg44
g250
sg45
g60
sg47
g443
sg46
g63
sg48
g1379
stRp1991
ag1
(g1979
g1949
(dp1992
g43
g249
sg44
g250
sg45
g60
sg47
g443
sg46
g63
sg48
g637
stRp1993
asS'seed'
p1994
NsS'thisIndex'
p1995
g1574
sS'thisN'
p1996
I7
sS'thisTrialN'
p1997
I0
sS'nTotal'
p1998
I7
sS'_warnUseOfNext'
p1999
I01
sbag1
(g1937
g3
NtRp2000
(dp2001
g1940
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[-1.000,-1.000,-1.000]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IAT" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trials_code">\u000a        <Param name="Begin Experiment" val="#declare accuracy feedback message variable&#10;msg=&quot;&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trials_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# choose a random exemplar from the appropriate trial type list&#10;if trial_type == 1:&#10;    text_stimulus = text_trial_type_1_trials.pop()&#10;    image_stimulus = img_trial_type_1_trials.pop()&#10;elif trial_type == 2:&#10;    text_stimulus = text_trial_type_2_trials.pop()&#10;    image_stimulus = img_trial_type_2_trials.pop()&#10;elif trial_type == 3:&#10;    text_stimulus = text_trial_type_3_trials.pop()&#10;    image_stimulus = img_trial_type_3_trials.pop()&#10;elif trial_type == 4:&#10;    text_stimulus = text_trial_type_4_trials.pop()&#10;    image_stimulus = img_trial_type_4_trials.pop()&#10;&#10;# set stimulus colors based on trial type&#10;if trial_type == 1 or trial_type == 2:&#10;     stimulusColor = [1, 1, 1]&#10;elif trial_type &gt;2:&#10;     stimulusColor = [-1, 1, -1]&#10;&#10;# set required and feedback responses&#10;# attributes are invariate across blocks so can be determined based on trial type only&#10;if trial_type == 3: #pos&#10;    requiredAllowed = &quot;i&quot;&#10;    requiredCorrect = &quot;i&quot;&#10;    feedbackAllowed = &quot;e&quot;&#10;    feedbackCorrect = &quot;e&quot;&#10;elif trial_type == 4: #neg&#10;    requiredAllowed = &quot;e&quot;&#10;    requiredCorrect = &quot;e&quot;&#10;    feedbackAllowed = &quot;i&quot;&#10;    feedbackCorrect = &quot;i&quot;&#10;# categories depend on block order, current block and trial type&#10;if block_order == 1: &#10;    if blocks.thisN &lt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;&#10;    elif blocks.thisN &gt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;elif block_order == 2: &#10;    if blocks.thisN &lt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;    elif blocks.thisN &gt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="if len(feedbackResponse.keys)&lt;1:&#10;    msg=&quot;&quot;&#10;else:&#10;    msg=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="stimulusImageBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulusImageBox" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$image_stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val=".6" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulusTextBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulusTextBox" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$stimulusColor" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$text_stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="requiredResponse">\u000a        <Param name="correctAns" val="$requiredCorrect " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="requiredResponse" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="requiredAllowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedbackResponse">\u000a        <Param name="correctAns" val="$feedbackCorrect " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedbackResponse" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedbackAllowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="feedback">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="leftCategoryLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftCategoryLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightCategoryLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightCategoryLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="leftAttributeLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftAttributeLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightAttributeLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightAttributeLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orLeft">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orLeft" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orRight">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orRight" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instruction">\u000a      <CodeComponent name="block_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;import math  # for math.ceil() rounding up&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine rows of examplars (i.e., max number of rows)&#10;&quot;&quot;&quot;&#10;This method creates a fully counterbalanced presentation of exemplars when there are 5&#10;of them, but it will not present each one an equal number of times it the n diverges from 5.&#10;&quot;&quot;&quot;&#10;n_exemplars = len(exemplars)&#10;list_multiplier = int(math.ceil(10/n_exemplars))  # math.ceil() rounds up. 10 is the derived from way block lengths are calculated. Admittedly, this comment doensn't adequately document why it's ten. Honestly, I have to work it out of my fingers every time and can't explain it.&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a&#10;&#10;# declare trial rows (not sure if necessary, but can't be bothered to removed and test)&#10;trial_rows = &quot;&quot;&#10;&#10;# set block order based on participant code&#10;participantNumber = int(expInfo['participant'])&#10;if (participantNumber % 2) == 1: &#10;    block_order = 1&#10;elif (participantNumber % 2) == 0:&#10;    block_order = 2&#10;else:&#10;    print &quot;****condition file error: please enter a numeric participant code****&quot;&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="block_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# set the block length and the rows to pull from based on the current block &#10;# this layout follows Nosek et al. 2007, &quot;The Implicit Association Test at age 7: A methodological and conceptual review&quot;&#10;if blocks.thisN == 0:&#10;    trial_rows = &quot;2:4&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 1:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 2:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 3:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 10   #4*10 = 40 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 4:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 20   #2*20 = 40 trials&#10;    modified_list_multiplier = list_multiplier * 2  # because this block has a different trials:categories ratio&#10;elif blocks.thisN == 5:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 6:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 10   #4*10 = 40 trials&#10;    modified_list_multiplier = list_multiplier&#10;&#10;# Generate list of stimuli for the block&#10;text_trial_type_1_trials = generate_trials('text_trial_type_1_exemplars', modified_list_multiplier)  # function and variable determined at begin exp.&#10;text_trial_type_2_trials = generate_trials('text_trial_type_2_exemplars', modified_list_multiplier)&#10;text_trial_type_3_trials = generate_trials('text_trial_type_3_exemplars', modified_list_multiplier)&#10;text_trial_type_4_trials = generate_trials('text_trial_type_4_exemplars', modified_list_multiplier)&#10;img_trial_type_1_trials = generate_trials('img_trial_type_1_exemplars', modified_list_multiplier)&#10;img_trial_type_2_trials = generate_trials('img_trial_type_2_exemplars', modified_list_multiplier)&#10;img_trial_type_3_trials = generate_trials('img_trial_type_3_exemplars', modified_list_multiplier)&#10;img_trial_type_4_trials = generate_trials('img_trial_type_4_exemplars', modified_list_multiplier)&#10;&#10;# set category and attribute labels based on the block order and current block&#10;if block_order == 1 and blocks.thisN &lt;= 3:&#10;    leftCategory = categoryA&#10;    rightCategory = categoryB&#10;elif block_order == 1 and blocks.thisN &gt; 3:&#10;    leftCategory = categoryB&#10;    rightCategory = categoryA&#10;elif block_order == 2 and blocks.thisN &lt;= 3:&#10;    leftCategory = categoryB&#10;    rightCategory = categoryA&#10;elif block_order == 2 and blocks.thisN &gt; 3:&#10;    leftCategory = categoryA&#10;    rightCategory = categoryB" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="instructionsBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instructionsBox" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instructions" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.05" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="instructionsKey">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="instructionsKey" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1.25" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="leftCategoryLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftCategoryLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightCategoryLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightCategoryLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="leftAttributeLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftAttributeLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightAttributeLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightAttributeLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orLeft_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orLeft_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orRight_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orRight_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="endBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="endBox" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="End of the task" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks">\u000a      <Param name="conditionsFile" val="instructions.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'block': 1, u'instructions': u'In this response task will you have to react to words and propositions that are presented on the screen. In the next phase words will be presented in ORANGE.\u005cn\u005cnIt is your job to decide as soon as possible whether the word refers to TRUE or FALSE.\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.'}, {u'block': 2, u'instructions': u&quot;The next phase some propositions will be presented in BLUE.\u005cnThese propositons are always statements about SELF ESTEEM.\u005cn\u005cnYou must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the right response (TRUE).\u005cnWhen the proposition 'I am worthless' appears, respond with the left response (FALSE).\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 3, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase some words will be presented in ORANGE and some propositions in BLUE. These propositons are always statements about SELF ESTEEM.\u005cn\u005cnAgain, you must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 4, u'instructions': u&quot;IMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\u005cn\u005cnYou must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the left response (FALSE).\u005cnWhen the proposition 'I am worthless' appears, respond with the right response (TRUE).\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 5, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase will again present words in ORANGE and statements in BLUE.\u005cn\u005cnAgain, you must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instruction"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="n_block_repeats" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'stimulusText': u'text_trial_type_1', u'stimulusImage': u'img_trial_type_1', u'trialtype': 1}, {u'stimulusText': u'text_trial_type_2', u'stimulusImage': u'img_trial_type_2', u'trialtype': 2}, {u'stimulusText': u'text_trial_type_3', u'stimulusImage': u'img_trial_type_3', u'trialtype': 3}, {u'stimulusText': u'text_trial_type_4', u'stimulusImage': u'img_trial_type_4', u'trialtype': 4}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="$trial_rows" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="blocks"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p2002
sg1942
(lp2003
sg1944
I214841264
sg11
g1964
sg6
g7
sg1946
I10
sg21
I01
sg22
g23
sg1947
g1
(g1948
g1949
(dp2004
g16
g1952
(g1953
g1954
g1955
S'b'
tRp2005
(I1
(I2
I10
tg1957
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg18
g1972
(g1954
(I0
tS'b'
tRp2006
(I1
(I2
I10
tg29
(S'O4'
I0
I1
tRp2007
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp2008
NaS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'i'
aS'i'
aS'i'
aNaS'i'
aS'i'
aNaS'i'
aNaS'i'
atbsg1951
g1952
(g1953
g1954
g1955
S'b'
tRp2009
(I1
(I2
I10
tg1957
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg20
g1952
(g1953
g1954
g1955
S'b'
tRp2010
(I1
(I2
I10
tg1957
I00
S'\x00\x00\x00\x00P\\<>\xd0\xdf=>@\x82+>0j\x1c>0\xbd\x08>\xa0\x98>>\xf0\xd7+>@\xd0\x1a>\xd0\x17=>\x90\xe1\x80>\xd0f>>\xf0\xc4\x1a>\x00\x00\x00\x00\xe0\x1a\x1a>\x90$\n>\x00\x00\x00\x00\xb0\xe9\x1a>\x00\x00\x00\x00\x80\xb6<>'
S'\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x01\x00\x01\x00'
Ntbsg17
g1952
(g1953
g1954
g1955
S'b'
tRp2011
(I1
(I2
I10
tg1957
I00
S'(g\xdf>\xe0w<>\xa0\x9cO>\x80\xde=>\xe0r\x1c>\xd0\xf1\x1a>`\xa9>>\x90\xf5+>\xc0V\x1b>\xa09=>P\x83\x89>\xb0qO>\x10\x83+>`\xe2\x08>\xb0!\x1a> <\n>\x80\xa1<>\xd0n+> \x9e\xf0=\xe0\x1a=>'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg19
g1952
(g1953
g1954
g1955
S'b'
tRp2012
(I1
(I2
I10
tg1957
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg1958
g1952
(g1953
g1954
g1955
S'b'
tRp2013
(I1
(I2
I10
tg1957
I00
S'\x00\x00\x00\x00\x00\x00@@\x00\x00\x80@\x00\x00\xa0@\x00\x00\x10A\x00\x00@A\x00\x00PA\x00\x00\x88A\x00\x00\x90A\x00\x00\x98A\x00\x00\x80?\x00\x00\x00@\x00\x00\xc0@\x00\x00\xe0@\x00\x00\x00A\x00\x00 A\x00\x000A\x00\x00`A\x00\x00pA\x00\x00\x80A'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg15
g1972
(g1954
(I0
tS'b'
tRp2014
(I1
(I2
I10
tg2007
I00
(lp2015
S'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
atbstRp2016
(dp2017
g1962
(dp2018
g16
I01
sg1951
I01
sg20
I01
sg18
I00
sg17
I01
sg19
I01
sg1958
I01
sg15
I00
ssg1964
g2000
sg1965
(lp2019
g1951
ag1958
ag15
ag16
ag17
ag18
ag19
ag20
asg1967
(lp2020
I2
aI10
asbsg1969
S'fullRandom'
p2021
sg1971
g1972
(g1954
(I0
tS'b'
tRp2022
(I1
(I2
I10
tg2007
I00
(lp2023
I0
aI1
aI0
aI1
aI1
aI1
aI0
aI1
aI1
aI0
aI1
aI0
aI0
aI1
aI0
aI1
aI0
aI1
aI0
aI0
atbsg1974
I01
sg1975
I10
sg1976
I-1
sg1977
(lp2024
g1
(g1979
g1949
(dp2025
g49
I3
sg50
g56
sg51
g55
stRp2026
ag1
(g1979
g1949
(dp2027
g49
I4
sg50
g72
sg51
g71
stRp2028
asg1994
Nsg1995
I0
sg1996
I20
sg1997
I0
sg1998
I20
sg1999
I01
sbag1
(g1937
g3
NtRp2029
(dp2030
g1940
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[-1.000,-1.000,-1.000]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IAT" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trials_code">\u000a        <Param name="Begin Experiment" val="#declare accuracy feedback message variable&#10;msg=&quot;&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trials_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# choose a random exemplar from the appropriate trial type list&#10;if trial_type == 1:&#10;    text_stimulus = text_trial_type_1_trials.pop()&#10;    image_stimulus = img_trial_type_1_trials.pop()&#10;elif trial_type == 2:&#10;    text_stimulus = text_trial_type_2_trials.pop()&#10;    image_stimulus = img_trial_type_2_trials.pop()&#10;elif trial_type == 3:&#10;    text_stimulus = text_trial_type_3_trials.pop()&#10;    image_stimulus = img_trial_type_3_trials.pop()&#10;elif trial_type == 4:&#10;    text_stimulus = text_trial_type_4_trials.pop()&#10;    image_stimulus = img_trial_type_4_trials.pop()&#10;&#10;# set stimulus colors based on trial type&#10;if trial_type == 1 or trial_type == 2:&#10;     stimulusColor = [1, 1, 1]&#10;elif trial_type &gt;2:&#10;     stimulusColor = [-1, 1, -1]&#10;&#10;# set required and feedback responses&#10;# attributes are invariate across blocks so can be determined based on trial type only&#10;if trial_type == 3: #pos&#10;    requiredAllowed = &quot;i&quot;&#10;    requiredCorrect = &quot;i&quot;&#10;    feedbackAllowed = &quot;e&quot;&#10;    feedbackCorrect = &quot;e&quot;&#10;elif trial_type == 4: #neg&#10;    requiredAllowed = &quot;e&quot;&#10;    requiredCorrect = &quot;e&quot;&#10;    feedbackAllowed = &quot;i&quot;&#10;    feedbackCorrect = &quot;i&quot;&#10;# categories depend on block order, current block and trial type&#10;if block_order == 1: &#10;    if blocks.thisN &lt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;&#10;    elif blocks.thisN &gt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;elif block_order == 2: &#10;    if blocks.thisN &lt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;    elif blocks.thisN &gt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="if len(feedbackResponse.keys)&lt;1:&#10;    msg=&quot;&quot;&#10;else:&#10;    msg=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="stimulusImageBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulusImageBox" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$image_stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val=".6" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulusTextBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulusTextBox" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$stimulusColor" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$text_stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="requiredResponse">\u000a        <Param name="correctAns" val="$requiredCorrect " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="requiredResponse" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="requiredAllowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedbackResponse">\u000a        <Param name="correctAns" val="$feedbackCorrect " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedbackResponse" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedbackAllowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="feedback">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="leftCategoryLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftCategoryLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightCategoryLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightCategoryLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="leftAttributeLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftAttributeLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightAttributeLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightAttributeLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orLeft">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orLeft" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orRight">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orRight" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instruction">\u000a      <CodeComponent name="block_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;import math  # for math.ceil() rounding up&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine rows of examplars (i.e., max number of rows)&#10;&quot;&quot;&quot;&#10;This method creates a fully counterbalanced presentation of exemplars when there are 5&#10;of them, but it will not present each one an equal number of times it the n diverges from 5.&#10;&quot;&quot;&quot;&#10;n_exemplars = len(exemplars)&#10;list_multiplier = int(math.ceil(10/n_exemplars))  # math.ceil() rounds up. 10 is the derived from way block lengths are calculated. Admittedly, this comment doensn't adequately document why it's ten. Honestly, I have to work it out of my fingers every time and can't explain it.&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a&#10;&#10;# declare trial rows (not sure if necessary, but can't be bothered to removed and test)&#10;trial_rows = &quot;&quot;&#10;&#10;# set block order based on participant code&#10;participantNumber = int(expInfo['participant'])&#10;if (participantNumber % 2) == 1: &#10;    block_order = 1&#10;elif (participantNumber % 2) == 0:&#10;    block_order = 2&#10;else:&#10;    print &quot;****condition file error: please enter a numeric participant code****&quot;&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="block_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# set the block length and the rows to pull from based on the current block &#10;# this layout follows Nosek et al. 2007, &quot;The Implicit Association Test at age 7: A methodological and conceptual review&quot;&#10;if blocks.thisN == 0:&#10;    trial_rows = &quot;2:4&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 1:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 2:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 3:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 10   #4*10 = 40 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 4:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 20   #2*20 = 40 trials&#10;    modified_list_multiplier = list_multiplier * 2  # because this block has a different trials:categories ratio&#10;elif blocks.thisN == 5:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 6:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 10   #4*10 = 40 trials&#10;    modified_list_multiplier = list_multiplier&#10;&#10;# Generate list of stimuli for the block&#10;text_trial_type_1_trials = generate_trials('text_trial_type_1_exemplars', modified_list_multiplier)  # function and variable determined at begin exp.&#10;text_trial_type_2_trials = generate_trials('text_trial_type_2_exemplars', modified_list_multiplier)&#10;text_trial_type_3_trials = generate_trials('text_trial_type_3_exemplars', modified_list_multiplier)&#10;text_trial_type_4_trials = generate_trials('text_trial_type_4_exemplars', modified_list_multiplier)&#10;img_trial_type_1_trials = generate_trials('img_trial_type_1_exemplars', modified_list_multiplier)&#10;img_trial_type_2_trials = generate_trials('img_trial_type_2_exemplars', modified_list_multiplier)&#10;img_trial_type_3_trials = generate_trials('img_trial_type_3_exemplars', modified_list_multiplier)&#10;img_trial_type_4_trials = generate_trials('img_trial_type_4_exemplars', modified_list_multiplier)&#10;&#10;# set category and attribute labels based on the block order and current block&#10;if block_order == 1 and blocks.thisN &lt;= 3:&#10;    leftCategory = categoryA&#10;    rightCategory = categoryB&#10;elif block_order == 1 and blocks.thisN &gt; 3:&#10;    leftCategory = categoryB&#10;    rightCategory = categoryA&#10;elif block_order == 2 and blocks.thisN &lt;= 3:&#10;    leftCategory = categoryB&#10;    rightCategory = categoryA&#10;elif block_order == 2 and blocks.thisN &gt; 3:&#10;    leftCategory = categoryA&#10;    rightCategory = categoryB" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="instructionsBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instructionsBox" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instructions" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.05" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="instructionsKey">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="instructionsKey" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1.25" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="leftCategoryLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftCategoryLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightCategoryLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightCategoryLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="leftAttributeLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftAttributeLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightAttributeLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightAttributeLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orLeft_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orLeft_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orRight_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orRight_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="endBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="endBox" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="End of the task" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks">\u000a      <Param name="conditionsFile" val="instructions.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'block': 1, u'instructions': u'In this response task will you have to react to words and propositions that are presented on the screen. In the next phase words will be presented in ORANGE.\u005cn\u005cnIt is your job to decide as soon as possible whether the word refers to TRUE or FALSE.\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.'}, {u'block': 2, u'instructions': u&quot;The next phase some propositions will be presented in BLUE.\u005cnThese propositons are always statements about SELF ESTEEM.\u005cn\u005cnYou must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the right response (TRUE).\u005cnWhen the proposition 'I am worthless' appears, respond with the left response (FALSE).\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 3, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase some words will be presented in ORANGE and some propositions in BLUE. These propositons are always statements about SELF ESTEEM.\u005cn\u005cnAgain, you must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 4, u'instructions': u&quot;IMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\u005cn\u005cnYou must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the left response (FALSE).\u005cnWhen the proposition 'I am worthless' appears, respond with the right response (TRUE).\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 5, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase will again present words in ORANGE and statements in BLUE.\u005cn\u005cnAgain, you must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instruction"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="n_block_repeats" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'stimulusText': u'text_trial_type_1', u'stimulusImage': u'img_trial_type_1', u'trialtype': 1}, {u'stimulusText': u'text_trial_type_2', u'stimulusImage': u'img_trial_type_2', u'trialtype': 2}, {u'stimulusText': u'text_trial_type_3', u'stimulusImage': u'img_trial_type_3', u'trialtype': 3}, {u'stimulusText': u'text_trial_type_4', u'stimulusImage': u'img_trial_type_4', u'trialtype': 4}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="$trial_rows" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="blocks"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p2031
sg1942
(lp2032
sg1944
I214841264
sg11
g1964
sg6
g7
sg1946
I10
sg21
I01
sg22
g23
sg1947
g1
(g1948
g1949
(dp2033
g16
g1952
(g1953
g1954
g1955
S'b'
tRp2034
(I1
(I2
I10
tg1957
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg18
g1972
(g1954
(I0
tS'b'
tRp2035
(I1
(I2
I10
tg2007
I00
(lp2036
S'i'
aNaNaS'i'
aS'i'
aS'i'
aNaS'i'
aS'i'
aNaNaNaNaS'e'
aS'e'
aNaS'e'
aS'e'
aS'e'
aS'e'
atbsg1951
g1952
(g1953
g1954
g1955
S'b'
tRp2037
(I1
(I2
I10
tg1957
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg20
g1952
(g1953
g1954
g1955
S'b'
tRp2038
(I1
(I2
I10
tg1957
I00
S'@`\xac=\x00\x00\x00\x00\x00\x00\x00\x00\x80\x19\x0c=\x00d\x91<\x80_\x87<\x00\x00\x00\x00 \xcb\x89=\xe0\xbb\x89=\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80-\x8b=\x80\xb1K=\x00\x00\x00\x00@\x08O=\x00\x08\x8a=\x00\xe1R=@/N='
S'\x00\x01\x01\x00\x00\x00\x01\x00\x00\x01\x01\x01\x01\x00\x00\x01\x00\x00\x00\x00'
Ntbsg17
g1952
(g1953
g1954
g1955
S'b'
tRp2039
(I1
(I2
I10
tg1957
I00
S'\x00\xdb\xac=\x80?\x8a=\x00V\x8d<@\xe9L=\x80B\x13=\x80\x0c\xbd>\xe0\x1b\xf1=\xc0?\x89=\xe0\xbc\x8a=\x80\x11P=p\\=>\xf0\xba\t>@\x90\x8a=@\xdf\x8b=\xa0u\x8a=\xe0\x97\x88= \x01\x8a=\xc0\x9c\xab=@\x94S=`g\x8a='
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg19
g1952
(g1953
g1954
g1955
S'b'
tRp2040
(I1
(I2
I10
tg1957
I00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg1958
g1952
(g1953
g1954
g1955
S'b'
tRp2041
(I1
(I2
I10
tg1957
I00
S'\x00\x00\x00@\x00\x00@@\x00\x00\xe0@\x00\x00 A\x00\x000A\x00\x00@A\x00\x00PA\x00\x00pA\x00\x00\x80A\x00\x00\x98A\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80@\x00\x00\xa0@\x00\x00\xc0@\x00\x00\x00A\x00\x00\x10A\x00\x00`A\x00\x00\x88A\x00\x00\x90A'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg15
g1972
(g1954
(I0
tS'b'
tRp2042
(I1
(I2
I10
tg2007
I00
(lp2043
S'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
atbstRp2044
(dp2045
g1962
(dp2046
g16
I01
sg1951
I01
sg20
I01
sg18
I00
sg17
I01
sg19
I01
sg1958
I01
sg15
I00
ssg1964
g2029
sg1965
(lp2047
g1951
ag1958
ag15
ag16
ag17
ag18
ag19
ag20
asg1967
(lp2048
I2
aI10
asbsg1969
g2021
sg1971
g1972
(g1954
(I0
tS'b'
tRp2049
(I1
(I2
I10
tg2007
I00
(lp2050
I1
aI0
aI1
aI1
aI1
aI0
aI0
aI1
aI0
aI1
aI1
aI0
aI1
aI0
aI1
aI0
aI0
aI0
aI1
aI0
atbsg1974
I01
sg1975
I10
sg1976
I-1
sg1977
(lp2051
g1
(g1979
g1949
(dp2052
g253
I1
sg246
g272
sg244
g271
stRp2053
ag1
(g1979
g1949
(dp2054
g253
I2
sg246
g247
sg244
g245
stRp2055
asg1994
Nsg1995
I0
sg1996
I20
sg1997
I0
sg1998
I20
sg1999
I01
sbag1
(g1937
g3
NtRp2056
(dp2057
g1940
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[-1.000,-1.000,-1.000]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IAT" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trials_code">\u000a        <Param name="Begin Experiment" val="#declare accuracy feedback message variable&#10;msg=&quot;&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trials_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# choose a random exemplar from the appropriate trial type list&#10;if trial_type == 1:&#10;    text_stimulus = text_trial_type_1_trials.pop()&#10;    image_stimulus = img_trial_type_1_trials.pop()&#10;elif trial_type == 2:&#10;    text_stimulus = text_trial_type_2_trials.pop()&#10;    image_stimulus = img_trial_type_2_trials.pop()&#10;elif trial_type == 3:&#10;    text_stimulus = text_trial_type_3_trials.pop()&#10;    image_stimulus = img_trial_type_3_trials.pop()&#10;elif trial_type == 4:&#10;    text_stimulus = text_trial_type_4_trials.pop()&#10;    image_stimulus = img_trial_type_4_trials.pop()&#10;&#10;# set stimulus colors based on trial type&#10;if trial_type == 1 or trial_type == 2:&#10;     stimulusColor = [1, 1, 1]&#10;elif trial_type &gt;2:&#10;     stimulusColor = [-1, 1, -1]&#10;&#10;# set required and feedback responses&#10;# attributes are invariate across blocks so can be determined based on trial type only&#10;if trial_type == 3: #pos&#10;    requiredAllowed = &quot;i&quot;&#10;    requiredCorrect = &quot;i&quot;&#10;    feedbackAllowed = &quot;e&quot;&#10;    feedbackCorrect = &quot;e&quot;&#10;elif trial_type == 4: #neg&#10;    requiredAllowed = &quot;e&quot;&#10;    requiredCorrect = &quot;e&quot;&#10;    feedbackAllowed = &quot;i&quot;&#10;    feedbackCorrect = &quot;i&quot;&#10;# categories depend on block order, current block and trial type&#10;if block_order == 1: &#10;    if blocks.thisN &lt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;&#10;    elif blocks.thisN &gt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;elif block_order == 2: &#10;    if blocks.thisN &lt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;    elif blocks.thisN &gt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="if len(feedbackResponse.keys)&lt;1:&#10;    msg=&quot;&quot;&#10;else:&#10;    msg=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="stimulusImageBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulusImageBox" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$image_stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val=".6" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulusTextBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulusTextBox" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$stimulusColor" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$text_stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="requiredResponse">\u000a        <Param name="correctAns" val="$requiredCorrect " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="requiredResponse" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="requiredAllowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedbackResponse">\u000a        <Param name="correctAns" val="$feedbackCorrect " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedbackResponse" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedbackAllowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="feedback">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="leftCategoryLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftCategoryLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightCategoryLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightCategoryLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="leftAttributeLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftAttributeLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightAttributeLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightAttributeLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orLeft">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orLeft" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orRight">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orRight" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instruction">\u000a      <CodeComponent name="block_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;import math  # for math.ceil() rounding up&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine rows of examplars (i.e., max number of rows)&#10;&quot;&quot;&quot;&#10;This method creates a fully counterbalanced presentation of exemplars when there are 5&#10;of them, but it will not present each one an equal number of times it the n diverges from 5.&#10;&quot;&quot;&quot;&#10;n_exemplars = len(exemplars)&#10;list_multiplier = int(math.ceil(10/n_exemplars))  # math.ceil() rounds up. 10 is the derived from way block lengths are calculated. Admittedly, this comment doensn't adequately document why it's ten. Honestly, I have to work it out of my fingers every time and can't explain it.&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a&#10;&#10;# declare trial rows (not sure if necessary, but can't be bothered to removed and test)&#10;trial_rows = &quot;&quot;&#10;&#10;# set block order based on participant code&#10;participantNumber = int(expInfo['participant'])&#10;if (participantNumber % 2) == 1: &#10;    block_order = 1&#10;elif (participantNumber % 2) == 0:&#10;    block_order = 2&#10;else:&#10;    print &quot;****condition file error: please enter a numeric participant code****&quot;&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="block_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# set the block length and the rows to pull from based on the current block &#10;# this layout follows Nosek et al. 2007, &quot;The Implicit Association Test at age 7: A methodological and conceptual review&quot;&#10;if blocks.thisN == 0:&#10;    trial_rows = &quot;2:4&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 1:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 2:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 3:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 10   #4*10 = 40 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 4:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 20   #2*20 = 40 trials&#10;    modified_list_multiplier = list_multiplier * 2  # because this block has a different trials:categories ratio&#10;elif blocks.thisN == 5:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 6:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 10   #4*10 = 40 trials&#10;    modified_list_multiplier = list_multiplier&#10;&#10;# Generate list of stimuli for the block&#10;text_trial_type_1_trials = generate_trials('text_trial_type_1_exemplars', modified_list_multiplier)  # function and variable determined at begin exp.&#10;text_trial_type_2_trials = generate_trials('text_trial_type_2_exemplars', modified_list_multiplier)&#10;text_trial_type_3_trials = generate_trials('text_trial_type_3_exemplars', modified_list_multiplier)&#10;text_trial_type_4_trials = generate_trials('text_trial_type_4_exemplars', modified_list_multiplier)&#10;img_trial_type_1_trials = generate_trials('img_trial_type_1_exemplars', modified_list_multiplier)&#10;img_trial_type_2_trials = generate_trials('img_trial_type_2_exemplars', modified_list_multiplier)&#10;img_trial_type_3_trials = generate_trials('img_trial_type_3_exemplars', modified_list_multiplier)&#10;img_trial_type_4_trials = generate_trials('img_trial_type_4_exemplars', modified_list_multiplier)&#10;&#10;# set category and attribute labels based on the block order and current block&#10;if block_order == 1 and blocks.thisN &lt;= 3:&#10;    leftCategory = categoryA&#10;    rightCategory = categoryB&#10;elif block_order == 1 and blocks.thisN &gt; 3:&#10;    leftCategory = categoryB&#10;    rightCategory = categoryA&#10;elif block_order == 2 and blocks.thisN &lt;= 3:&#10;    leftCategory = categoryB&#10;    rightCategory = categoryA&#10;elif block_order == 2 and blocks.thisN &gt; 3:&#10;    leftCategory = categoryA&#10;    rightCategory = categoryB" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="instructionsBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instructionsBox" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instructions" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.05" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="instructionsKey">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="instructionsKey" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1.25" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="leftCategoryLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftCategoryLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightCategoryLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightCategoryLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="leftAttributeLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftAttributeLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightAttributeLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightAttributeLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orLeft_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orLeft_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orRight_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orRight_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="endBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="endBox" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="End of the task" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks">\u000a      <Param name="conditionsFile" val="instructions.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'block': 1, u'instructions': u'In this response task will you have to react to words and propositions that are presented on the screen. In the next phase words will be presented in ORANGE.\u005cn\u005cnIt is your job to decide as soon as possible whether the word refers to TRUE or FALSE.\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.'}, {u'block': 2, u'instructions': u&quot;The next phase some propositions will be presented in BLUE.\u005cnThese propositons are always statements about SELF ESTEEM.\u005cn\u005cnYou must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the right response (TRUE).\u005cnWhen the proposition 'I am worthless' appears, respond with the left response (FALSE).\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 3, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase some words will be presented in ORANGE and some propositions in BLUE. These propositons are always statements about SELF ESTEEM.\u005cn\u005cnAgain, you must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 4, u'instructions': u&quot;IMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\u005cn\u005cnYou must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the left response (FALSE).\u005cnWhen the proposition 'I am worthless' appears, respond with the right response (TRUE).\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 5, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase will again present words in ORANGE and statements in BLUE.\u005cn\u005cnAgain, you must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instruction"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="n_block_repeats" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'stimulusText': u'text_trial_type_1', u'stimulusImage': u'img_trial_type_1', u'trialtype': 1}, {u'stimulusText': u'text_trial_type_2', u'stimulusImage': u'img_trial_type_2', u'trialtype': 2}, {u'stimulusText': u'text_trial_type_3', u'stimulusImage': u'img_trial_type_3', u'trialtype': 3}, {u'stimulusText': u'text_trial_type_4', u'stimulusImage': u'img_trial_type_4', u'trialtype': 4}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="$trial_rows" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="blocks"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p2058
sg1942
(lp2059
sg1944
I214841264
sg11
g1964
sg6
g7
sg1946
I5
sg21
I01
sg22
g23
sg1947
g1
(g1948
g1949
(dp2060
g16
g1952
(g1953
g1954
g1955
S'b'
tRp2061
(I1
(I4
I5
tg1957
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg18
g1972
(g1954
(I0
tS'b'
tRp2062
(I1
(I4
I5
tg2007
I00
(lp2063
S'i'
aS'i'
aS'i'
aNaS'i'
aS'e'
aNaNaNaNaNaNaNaNaNaS'i'
aS'i'
aS'i'
aS'i'
aS'i'
atbsg1951
g1952
(g1953
g1954
g1955
S'b'
tRp2064
(I1
(I4
I5
tg1957
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg20
g1952
(g1953
g1954
g1955
S'b'
tRp2065
(I1
(I4
I5
tg1957
I00
S'`%\x89=\x80!\x0e=0\x1e<>\x00\x00\x00\x00\x80\xfb\x08=\x00\xab\x87<\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x90\xa8\x19>`\xbe\x1a>@6\t>\xa0i\t>\x10\xda+>'
S'\x00\x00\x00\x01\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00'
Ntbsg17
g1952
(g1953
g1954
g1955
S'b'
tRp2066
(I1
(I4
I5
tg1957
I00
S'\x80\xc5\xac=\x00\x02\x0f=\x80<M>\xf0\xca\t>`\xa5\xd0=`\t\xbd> \xc5\t>\xe0\xa2\xac=@z\xce=@\x03U=\xb0\xe1\x89> \x06\xf3=\x00\x10\xad=\x80\xff\xcd=\xc0\xbc\x0e=\x90\xf0+>\xe0\xde,>0\xc6<>\x00\x92N>\xa0\xf4^>'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg19
g1952
(g1953
g1954
g1955
S'b'
tRp2067
(I1
(I4
I5
tg1957
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg1958
g1952
(g1953
g1954
g1955
S'b'
tRp2068
(I1
(I4
I5
tg1957
I00
S'\x00\x00\x80?\x00\x00\x00@\x00\x00\xa0@\x00\x00\x00A\x00\x00pA\x00\x00@@\x00\x00\x10A\x00\x00 A\x00\x00@A\x00\x00\x90A\x00\x00\x00\x00\x00\x00\xc0@\x00\x000A\x00\x00PA\x00\x00\x80A\x00\x00\x80@\x00\x00\xe0@\x00\x00`A\x00\x00\x88A\x00\x00\x98A'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg15
g1972
(g1954
(I0
tS'b'
tRp2069
(I1
(I4
I5
tg2007
I00
(lp2070
S'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
atbstRp2071
(dp2072
g1962
(dp2073
g16
I01
sg1951
I01
sg20
I01
sg18
I00
sg17
I01
sg19
I01
sg1958
I01
sg15
I00
ssg1964
g2056
sg1965
(lp2074
g1951
ag1958
ag15
ag16
ag17
ag18
ag19
ag20
asg1967
(lp2075
I4
aI5
asbsg1969
g2021
sg1971
g1972
(g1954
(I0
tS'b'
tRp2076
(I1
(I4
I5
tg2007
I00
(lp2077
I2
aI3
aI0
aI1
aI2
aI0
aI0
aI1
aI2
aI3
aI0
aI2
aI1
aI3
aI1
aI1
aI3
aI2
aI0
aI3
atbsg1974
I01
sg1975
I5
sg1976
I-1
sg1977
(lp2078
g1
(g1979
g1949
(dp2079
g442
I1
sg437
g453
sg435
g452
stRp2080
ag1
(g1979
g1949
(dp2081
g442
I2
sg437
g473
sg435
g472
stRp2082
ag1
(g1979
g1949
(dp2083
g442
I3
sg437
g438
sg435
g436
stRp2084
ag1
(g1979
g1949
(dp2085
g442
I4
sg437
g484
sg435
g483
stRp2086
asg1994
Nsg1995
I3
sg1996
I20
sg1997
I0
sg1998
I20
sg1999
I01
sbag1
(g1937
g3
NtRp2087
(dp2088
g1940
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[-1.000,-1.000,-1.000]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IAT" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trials_code">\u000a        <Param name="Begin Experiment" val="#declare accuracy feedback message variable&#10;msg=&quot;&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trials_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# choose a random exemplar from the appropriate trial type list&#10;if trial_type == 1:&#10;    text_stimulus = text_trial_type_1_trials.pop()&#10;    image_stimulus = img_trial_type_1_trials.pop()&#10;elif trial_type == 2:&#10;    text_stimulus = text_trial_type_2_trials.pop()&#10;    image_stimulus = img_trial_type_2_trials.pop()&#10;elif trial_type == 3:&#10;    text_stimulus = text_trial_type_3_trials.pop()&#10;    image_stimulus = img_trial_type_3_trials.pop()&#10;elif trial_type == 4:&#10;    text_stimulus = text_trial_type_4_trials.pop()&#10;    image_stimulus = img_trial_type_4_trials.pop()&#10;&#10;# set stimulus colors based on trial type&#10;if trial_type == 1 or trial_type == 2:&#10;     stimulusColor = [1, 1, 1]&#10;elif trial_type &gt;2:&#10;     stimulusColor = [-1, 1, -1]&#10;&#10;# set required and feedback responses&#10;# attributes are invariate across blocks so can be determined based on trial type only&#10;if trial_type == 3: #pos&#10;    requiredAllowed = &quot;i&quot;&#10;    requiredCorrect = &quot;i&quot;&#10;    feedbackAllowed = &quot;e&quot;&#10;    feedbackCorrect = &quot;e&quot;&#10;elif trial_type == 4: #neg&#10;    requiredAllowed = &quot;e&quot;&#10;    requiredCorrect = &quot;e&quot;&#10;    feedbackAllowed = &quot;i&quot;&#10;    feedbackCorrect = &quot;i&quot;&#10;# categories depend on block order, current block and trial type&#10;if block_order == 1: &#10;    if blocks.thisN &lt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;&#10;    elif blocks.thisN &gt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;elif block_order == 2: &#10;    if blocks.thisN &lt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;    elif blocks.thisN &gt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="if len(feedbackResponse.keys)&lt;1:&#10;    msg=&quot;&quot;&#10;else:&#10;    msg=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="stimulusImageBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulusImageBox" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$image_stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val=".6" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulusTextBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulusTextBox" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$stimulusColor" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$text_stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="requiredResponse">\u000a        <Param name="correctAns" val="$requiredCorrect " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="requiredResponse" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="requiredAllowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedbackResponse">\u000a        <Param name="correctAns" val="$feedbackCorrect " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedbackResponse" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedbackAllowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="feedback">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="leftCategoryLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftCategoryLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightCategoryLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightCategoryLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="leftAttributeLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftAttributeLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightAttributeLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightAttributeLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orLeft">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orLeft" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orRight">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orRight" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instruction">\u000a      <CodeComponent name="block_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;import math  # for math.ceil() rounding up&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine rows of examplars (i.e., max number of rows)&#10;&quot;&quot;&quot;&#10;This method creates a fully counterbalanced presentation of exemplars when there are 5&#10;of them, but it will not present each one an equal number of times it the n diverges from 5.&#10;&quot;&quot;&quot;&#10;n_exemplars = len(exemplars)&#10;list_multiplier = int(math.ceil(10/n_exemplars))  # math.ceil() rounds up. 10 is the derived from way block lengths are calculated. Admittedly, this comment doensn't adequately document why it's ten. Honestly, I have to work it out of my fingers every time and can't explain it.&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a&#10;&#10;# declare trial rows (not sure if necessary, but can't be bothered to removed and test)&#10;trial_rows = &quot;&quot;&#10;&#10;# set block order based on participant code&#10;participantNumber = int(expInfo['participant'])&#10;if (participantNumber % 2) == 1: &#10;    block_order = 1&#10;elif (participantNumber % 2) == 0:&#10;    block_order = 2&#10;else:&#10;    print &quot;****condition file error: please enter a numeric participant code****&quot;&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="block_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# set the block length and the rows to pull from based on the current block &#10;# this layout follows Nosek et al. 2007, &quot;The Implicit Association Test at age 7: A methodological and conceptual review&quot;&#10;if blocks.thisN == 0:&#10;    trial_rows = &quot;2:4&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 1:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 2:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 3:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 10   #4*10 = 40 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 4:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 20   #2*20 = 40 trials&#10;    modified_list_multiplier = list_multiplier * 2  # because this block has a different trials:categories ratio&#10;elif blocks.thisN == 5:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 6:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 10   #4*10 = 40 trials&#10;    modified_list_multiplier = list_multiplier&#10;&#10;# Generate list of stimuli for the block&#10;text_trial_type_1_trials = generate_trials('text_trial_type_1_exemplars', modified_list_multiplier)  # function and variable determined at begin exp.&#10;text_trial_type_2_trials = generate_trials('text_trial_type_2_exemplars', modified_list_multiplier)&#10;text_trial_type_3_trials = generate_trials('text_trial_type_3_exemplars', modified_list_multiplier)&#10;text_trial_type_4_trials = generate_trials('text_trial_type_4_exemplars', modified_list_multiplier)&#10;img_trial_type_1_trials = generate_trials('img_trial_type_1_exemplars', modified_list_multiplier)&#10;img_trial_type_2_trials = generate_trials('img_trial_type_2_exemplars', modified_list_multiplier)&#10;img_trial_type_3_trials = generate_trials('img_trial_type_3_exemplars', modified_list_multiplier)&#10;img_trial_type_4_trials = generate_trials('img_trial_type_4_exemplars', modified_list_multiplier)&#10;&#10;# set category and attribute labels based on the block order and current block&#10;if block_order == 1 and blocks.thisN &lt;= 3:&#10;    leftCategory = categoryA&#10;    rightCategory = categoryB&#10;elif block_order == 1 and blocks.thisN &gt; 3:&#10;    leftCategory = categoryB&#10;    rightCategory = categoryA&#10;elif block_order == 2 and blocks.thisN &lt;= 3:&#10;    leftCategory = categoryB&#10;    rightCategory = categoryA&#10;elif block_order == 2 and blocks.thisN &gt; 3:&#10;    leftCategory = categoryA&#10;    rightCategory = categoryB" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="instructionsBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instructionsBox" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instructions" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.05" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="instructionsKey">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="instructionsKey" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1.25" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="leftCategoryLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftCategoryLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightCategoryLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightCategoryLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="leftAttributeLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftAttributeLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightAttributeLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightAttributeLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orLeft_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orLeft_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orRight_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orRight_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="endBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="endBox" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="End of the task" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks">\u000a      <Param name="conditionsFile" val="instructions.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'block': 1, u'instructions': u'In this response task will you have to react to words and propositions that are presented on the screen. In the next phase words will be presented in ORANGE.\u005cn\u005cnIt is your job to decide as soon as possible whether the word refers to TRUE or FALSE.\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.'}, {u'block': 2, u'instructions': u&quot;The next phase some propositions will be presented in BLUE.\u005cnThese propositons are always statements about SELF ESTEEM.\u005cn\u005cnYou must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the right response (TRUE).\u005cnWhen the proposition 'I am worthless' appears, respond with the left response (FALSE).\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 3, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase some words will be presented in ORANGE and some propositions in BLUE. These propositons are always statements about SELF ESTEEM.\u005cn\u005cnAgain, you must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 4, u'instructions': u&quot;IMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\u005cn\u005cnYou must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the left response (FALSE).\u005cnWhen the proposition 'I am worthless' appears, respond with the right response (TRUE).\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 5, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase will again present words in ORANGE and statements in BLUE.\u005cn\u005cnAgain, you must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instruction"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="n_block_repeats" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'stimulusText': u'text_trial_type_1', u'stimulusImage': u'img_trial_type_1', u'trialtype': 1}, {u'stimulusText': u'text_trial_type_2', u'stimulusImage': u'img_trial_type_2', u'trialtype': 2}, {u'stimulusText': u'text_trial_type_3', u'stimulusImage': u'img_trial_type_3', u'trialtype': 3}, {u'stimulusText': u'text_trial_type_4', u'stimulusImage': u'img_trial_type_4', u'trialtype': 4}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="$trial_rows" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="blocks"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p2089
sg1942
(lp2090
sg1944
I214841264
sg11
g1964
sg6
g7
sg1946
I10
sg21
I01
sg22
g23
sg1947
g1
(g1948
g1949
(dp2091
g16
g1952
(g1953
g1954
g1955
S'b'
tRp2092
(I1
(I4
I10
tg1957
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg18
g1972
(g1954
(I0
tS'b'
tRp2093
(I1
(I4
I10
tg2007
I00
(lp2094
S'i'
aNaNaS'i'
aS'i'
aS'i'
aNaS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aNaS'e'
aNaS'e'
aNaS'e'
aNaS'e'
aNaS'e'
aNaS'e'
aNaNaNaS'e'
aS'e'
aS'e'
aS'i'
aS'i'
aS'i'
aS'i'
aNaS'i'
aNaS'i'
aS'i'
aS'i'
atbsg1951
g1952
(g1953
g1954
g1955
S'b'
tRp2095
(I1
(I4
I10
tg1957
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg20
g1952
(g1953
g1954
g1955
S'b'
tRp2096
(I1
(I4
I10
tg1957
I00
S'`\x1c\n>\x00\x00\x00\x00\x00\x00\x00\x00\xa0\xbd\xac=`\x88\xae= v\xcd=\x00\x00\x00\x00\x00\xe0\xcd=\x10\xcc\n>\xc0\xd9\xed=@\x82\xf0= \x9c\xef=\x00\x00\x00\x00 (\t>\x00\x00\x00\x00 \xe1\xcd=\x00\x00\x00\x00 F\xef=\x00\x00\x00\x000\xb1+>\x00\x00\x00\x00 \xdc\t>\x00\x00\x00\x00`\xa2\xcf=\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0\xc6\t>@\xf7\xcf=@0\xf2= \xdfN>\xc0\xba\x1a>\x00\xeb\xcd=`8\t>\x00\x00\x00\x00\xd0\x86,>\x00\x00\x00\x00`?\xce=\x80w\t> \x19\xef='
S'\x00\x01\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00\x00\x00'
Ntbsg17
g1952
(g1953
g1954
g1955
S'b'
tRp2097
(I1
(I4
I10
tg1957
I00
S'\x80T\n>\xe02\x8b=\xa0\x86\xcf=\xc0\x88\xcf=@]\xce=\x80\x8d\xf2= r\xac=@K\xf0=\xc01\x0b>\x00w\t>\xc0\xd9\xf0=\xc0\xa1\xf0=\x10\xff\t>\x80\xb3\t>@\x19\xf1=\xe0m\xf0=\xa0\xff\xac=\x10\xde\t>@\x0f\xce= A,>\xe06,>0"\n>P\x05\n>\x00F\xd0= \x88\xac=\x80\xea\xf1=\x80#\xd0=\x80\x13\n>\x80l\xf2=`\xe2\xf2=@#O>\x90\xef+> a\xf1=\x80r\t>@e\xce=\xd0\x13->\x80\xa8\t>`z\xf0=p\xfb\t>Pp\n>'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg19
g1952
(g1953
g1954
g1955
S'b'
tRp2098
(I1
(I4
I10
tg1957
I00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg1958
g1952
(g1953
g1954
g1955
S'b'
tRp2099
(I1
(I4
I10
tg1957
I00
S'\x00\x00@@\x00\x00\x10A\x00\x00PA\x00\x00\x90A\x00\x00\xb0A\x00\x00\xc8A\x00\x00\xd0A\x00\x00\xe8A\x00\x00\x14B\x00\x00\x1cB\x00\x00\x00A\x00\x00@A\x00\x00pA\x00\x00\x80A\x00\x00\x98A\x00\x00\xb8A\x00\x00\xc0A\x00\x00\xe0A\x00\x00\xf0A\x00\x00\x18B\x00\x00\x80?\x00\x00\xe0@\x00\x000A\x00\x00\xd8A\x00\x00\xf8A\x00\x00\x00B\x00\x00\x04B\x00\x00\x08B\x00\x00\x0cB\x00\x00\x10B\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x80@\x00\x00\xa0@\x00\x00\xc0@\x00\x00 A\x00\x00`A\x00\x00\x88A\x00\x00\xa0A\x00\x00\xa8A'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg15
g1972
(g1954
(I0
tS'b'
tRp2100
(I1
(I4
I10
tg2007
I00
(lp2101
S'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
atbstRp2102
(dp2103
g1962
(dp2104
g16
I01
sg1951
I01
sg20
I01
sg18
I00
sg17
I01
sg19
I01
sg1958
I01
sg15
I00
ssg1964
g2087
sg1965
(lp2105
g1951
ag1958
ag15
ag16
ag17
ag18
ag19
ag20
asg1967
(lp2106
I4
aI10
asbsg1969
g2021
sg1971
g1972
(g1954
(I0
tS'b'
tRp2107
(I1
(I4
I10
tg2007
I00
(lp2108
I3
aI3
aI1
aI1
aI1
aI3
aI1
aI1
aI2
aI2
aI2
aI3
aI0
aI0
aI3
aI3
aI0
aI0
aI2
aI0
aI3
aI3
aI3
aI3
aI0
aI0
aI0
aI1
aI2
aI1
aI0
aI2
aI2
aI1
aI1
aI1
aI2
aI2
aI2
aI0
atbsg1974
I01
sg1975
I10
sg1976
I-1
sg1977
(lp2109
g1
(g1979
g1949
(dp2110
g636
I1
sg631
g666
sg629
g665
stRp2111
ag1
(g1979
g1949
(dp2112
g636
I2
sg631
g713
sg629
g712
stRp2113
ag1
(g1979
g1949
(dp2114
g636
I3
sg631
g646
sg629
g645
stRp2115
ag1
(g1979
g1949
(dp2116
g636
I4
sg631
g632
sg629
g630
stRp2117
asg1994
Nsg1995
I0
sg1996
I40
sg1997
I0
sg1998
I40
sg1999
I01
sbag1
(g1937
g3
NtRp2118
(dp2119
g1940
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[-1.000,-1.000,-1.000]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IAT" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trials_code">\u000a        <Param name="Begin Experiment" val="#declare accuracy feedback message variable&#10;msg=&quot;&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trials_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# choose a random exemplar from the appropriate trial type list&#10;if trial_type == 1:&#10;    text_stimulus = text_trial_type_1_trials.pop()&#10;    image_stimulus = img_trial_type_1_trials.pop()&#10;elif trial_type == 2:&#10;    text_stimulus = text_trial_type_2_trials.pop()&#10;    image_stimulus = img_trial_type_2_trials.pop()&#10;elif trial_type == 3:&#10;    text_stimulus = text_trial_type_3_trials.pop()&#10;    image_stimulus = img_trial_type_3_trials.pop()&#10;elif trial_type == 4:&#10;    text_stimulus = text_trial_type_4_trials.pop()&#10;    image_stimulus = img_trial_type_4_trials.pop()&#10;&#10;# set stimulus colors based on trial type&#10;if trial_type == 1 or trial_type == 2:&#10;     stimulusColor = [1, 1, 1]&#10;elif trial_type &gt;2:&#10;     stimulusColor = [-1, 1, -1]&#10;&#10;# set required and feedback responses&#10;# attributes are invariate across blocks so can be determined based on trial type only&#10;if trial_type == 3: #pos&#10;    requiredAllowed = &quot;i&quot;&#10;    requiredCorrect = &quot;i&quot;&#10;    feedbackAllowed = &quot;e&quot;&#10;    feedbackCorrect = &quot;e&quot;&#10;elif trial_type == 4: #neg&#10;    requiredAllowed = &quot;e&quot;&#10;    requiredCorrect = &quot;e&quot;&#10;    feedbackAllowed = &quot;i&quot;&#10;    feedbackCorrect = &quot;i&quot;&#10;# categories depend on block order, current block and trial type&#10;if block_order == 1: &#10;    if blocks.thisN &lt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;&#10;    elif blocks.thisN &gt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;elif block_order == 2: &#10;    if blocks.thisN &lt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;    elif blocks.thisN &gt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="if len(feedbackResponse.keys)&lt;1:&#10;    msg=&quot;&quot;&#10;else:&#10;    msg=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="stimulusImageBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulusImageBox" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$image_stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val=".6" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulusTextBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulusTextBox" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$stimulusColor" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$text_stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="requiredResponse">\u000a        <Param name="correctAns" val="$requiredCorrect " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="requiredResponse" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="requiredAllowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedbackResponse">\u000a        <Param name="correctAns" val="$feedbackCorrect " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedbackResponse" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedbackAllowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="feedback">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="leftCategoryLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftCategoryLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightCategoryLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightCategoryLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="leftAttributeLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftAttributeLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightAttributeLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightAttributeLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orLeft">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orLeft" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orRight">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orRight" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instruction">\u000a      <CodeComponent name="block_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;import math  # for math.ceil() rounding up&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine rows of examplars (i.e., max number of rows)&#10;&quot;&quot;&quot;&#10;This method creates a fully counterbalanced presentation of exemplars when there are 5&#10;of them, but it will not present each one an equal number of times it the n diverges from 5.&#10;&quot;&quot;&quot;&#10;n_exemplars = len(exemplars)&#10;list_multiplier = int(math.ceil(10/n_exemplars))  # math.ceil() rounds up. 10 is the derived from way block lengths are calculated. Admittedly, this comment doensn't adequately document why it's ten. Honestly, I have to work it out of my fingers every time and can't explain it.&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a&#10;&#10;# declare trial rows (not sure if necessary, but can't be bothered to removed and test)&#10;trial_rows = &quot;&quot;&#10;&#10;# set block order based on participant code&#10;participantNumber = int(expInfo['participant'])&#10;if (participantNumber % 2) == 1: &#10;    block_order = 1&#10;elif (participantNumber % 2) == 0:&#10;    block_order = 2&#10;else:&#10;    print &quot;****condition file error: please enter a numeric participant code****&quot;&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="block_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# set the block length and the rows to pull from based on the current block &#10;# this layout follows Nosek et al. 2007, &quot;The Implicit Association Test at age 7: A methodological and conceptual review&quot;&#10;if blocks.thisN == 0:&#10;    trial_rows = &quot;2:4&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 1:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 2:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 3:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 10   #4*10 = 40 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 4:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 20   #2*20 = 40 trials&#10;    modified_list_multiplier = list_multiplier * 2  # because this block has a different trials:categories ratio&#10;elif blocks.thisN == 5:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 6:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 10   #4*10 = 40 trials&#10;    modified_list_multiplier = list_multiplier&#10;&#10;# Generate list of stimuli for the block&#10;text_trial_type_1_trials = generate_trials('text_trial_type_1_exemplars', modified_list_multiplier)  # function and variable determined at begin exp.&#10;text_trial_type_2_trials = generate_trials('text_trial_type_2_exemplars', modified_list_multiplier)&#10;text_trial_type_3_trials = generate_trials('text_trial_type_3_exemplars', modified_list_multiplier)&#10;text_trial_type_4_trials = generate_trials('text_trial_type_4_exemplars', modified_list_multiplier)&#10;img_trial_type_1_trials = generate_trials('img_trial_type_1_exemplars', modified_list_multiplier)&#10;img_trial_type_2_trials = generate_trials('img_trial_type_2_exemplars', modified_list_multiplier)&#10;img_trial_type_3_trials = generate_trials('img_trial_type_3_exemplars', modified_list_multiplier)&#10;img_trial_type_4_trials = generate_trials('img_trial_type_4_exemplars', modified_list_multiplier)&#10;&#10;# set category and attribute labels based on the block order and current block&#10;if block_order == 1 and blocks.thisN &lt;= 3:&#10;    leftCategory = categoryA&#10;    rightCategory = categoryB&#10;elif block_order == 1 and blocks.thisN &gt; 3:&#10;    leftCategory = categoryB&#10;    rightCategory = categoryA&#10;elif block_order == 2 and blocks.thisN &lt;= 3:&#10;    leftCategory = categoryB&#10;    rightCategory = categoryA&#10;elif block_order == 2 and blocks.thisN &gt; 3:&#10;    leftCategory = categoryA&#10;    rightCategory = categoryB" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="instructionsBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instructionsBox" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instructions" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.05" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="instructionsKey">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="instructionsKey" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1.25" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="leftCategoryLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftCategoryLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightCategoryLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightCategoryLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="leftAttributeLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftAttributeLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightAttributeLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightAttributeLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orLeft_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orLeft_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orRight_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orRight_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="endBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="endBox" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="End of the task" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks">\u000a      <Param name="conditionsFile" val="instructions.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'block': 1, u'instructions': u'In this response task will you have to react to words and propositions that are presented on the screen. In the next phase words will be presented in ORANGE.\u005cn\u005cnIt is your job to decide as soon as possible whether the word refers to TRUE or FALSE.\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.'}, {u'block': 2, u'instructions': u&quot;The next phase some propositions will be presented in BLUE.\u005cnThese propositons are always statements about SELF ESTEEM.\u005cn\u005cnYou must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the right response (TRUE).\u005cnWhen the proposition 'I am worthless' appears, respond with the left response (FALSE).\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 3, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase some words will be presented in ORANGE and some propositions in BLUE. These propositons are always statements about SELF ESTEEM.\u005cn\u005cnAgain, you must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 4, u'instructions': u&quot;IMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\u005cn\u005cnYou must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the left response (FALSE).\u005cnWhen the proposition 'I am worthless' appears, respond with the right response (TRUE).\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 5, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase will again present words in ORANGE and statements in BLUE.\u005cn\u005cnAgain, you must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instruction"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="n_block_repeats" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'stimulusText': u'text_trial_type_1', u'stimulusImage': u'img_trial_type_1', u'trialtype': 1}, {u'stimulusText': u'text_trial_type_2', u'stimulusImage': u'img_trial_type_2', u'trialtype': 2}, {u'stimulusText': u'text_trial_type_3', u'stimulusImage': u'img_trial_type_3', u'trialtype': 3}, {u'stimulusText': u'text_trial_type_4', u'stimulusImage': u'img_trial_type_4', u'trialtype': 4}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="$trial_rows" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="blocks"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p2120
sg1942
(lp2121
sg1944
I214841264
sg11
g1964
sg6
g7
sg1946
I20
sg21
I01
sg22
g23
sg1947
g1
(g1948
g1949
(dp2122
g16
g1952
(g1953
g1954
g1955
S'b'
tRp2123
(I1
(I2
I20
tg1957
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg18
g1972
(g1954
(I0
tS'b'
tRp2124
(I1
(I2
I20
tg2007
I00
(lp2125
S'e'
aNaNaNaS'e'
aS'e'
aS'e'
aNaS'e'
aS'e'
aS'e'
aNaNaS'e'
aNaS'e'
aS'e'
aS'e'
aNaS'e'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aNaS'i'
aNaS'i'
aS'i'
aNaS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aNaNatbsg1951
g1952
(g1953
g1954
g1955
S'b'
tRp2126
(I1
(I2
I20
tg1957
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg20
g1952
(g1953
g1954
g1955
S'b'
tRp2127
(I1
(I2
I20
tg1957
I00
S'`k\xac=\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0C\xd0=\x80\x92Q=\x80)\xcd=\x00\x00\x00\x00@(\xcf=\x80 \xce=\xe0\xaf\xa9=\x00\x00\x00\x00\x00\x00\x00\x00@\xc9\xaf=\x00\x00\x00\x00\xe0%\xce=\xc0\x15Q=\x80\x8eP=\x00\x00\x00\x00@"\xcd=\x004q>@\xb9\xcd=\xc0\xd3\x07=\xc09T=\x80\x05\xac=\x00\x00\x00\x00@\x15\xac=\x00\x00\x00\x00@g\x8b=\xa0\xea\xac=\x00\x00\x00\x00 \x88\xac=`\x9b\x89=\x00\xb8R=@\x17\x8a=\xc0dM=\xc0xN=@\x11\x8b=\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x01\x01\x01\x00\x00\x00\x01\x00\x00\x00\x01\x01\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x01'
Ntbsg17
g1952
(g1953
g1954
g1955
S'b'
tRp2128
(I1
(I2
I20
tg1957
I00
S"@\x85\xad=\xe0\\\x8a=@'S=\x00\x18P=\xc0\xcb\xd0=\xe0\xda\x89=`\x08\xce= \xbd\xcf= \x1d\xd0=\x80!\xcf=\x00\x1a\xcc=\xc0\x08R=\x80&\x8c=\xa0\xe6\xaf=\xa0\x0b\xad=`7\xcf=@\x96\x89= >\x8c=\xc0~O=\xf0\x8f\t>\xc8\x08\x81>`\x02\xf0=\x00\xe9L=\xc0\x12V=\xc0@\xd0=\x00\x18\xac=`#\xad=\x80pM=\x80C\x8c=\xa0\x97\xcd=\x80\n\xae=\xc0\xa4\xce=@\x83\x8a=@\rP=\x00\x08\xae= P\xab=\xa06\x8a=@&\xab=\x00\xc5N= \xba\xf2="
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg19
g1952
(g1953
g1954
g1955
S'b'
tRp2129
(I1
(I2
I20
tg1957
I00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg1958
g1952
(g1953
g1954
g1955
S'b'
tRp2130
(I1
(I2
I20
tg1957
I00
S'\x00\x00\x80?\x00\x00\xa0@\x00\x00\xe0@\x00\x00\x00A\x00\x00 A\x00\x00@A\x00\x00PA\x00\x00pA\x00\x00\x80A\x00\x00\x88A\x00\x00\xa0A\x00\x00\xb8A\x00\x00\xc0A\x00\x00\xd0A\x00\x00\xe0A\x00\x00\xf0A\x00\x00\x08B\x00\x00\x14B\x00\x00\x18B\x00\x00\x1cB\x00\x00\x00\x00\x00\x00\x00@\x00\x00@@\x00\x00\x80@\x00\x00\xc0@\x00\x00\x10A\x00\x000A\x00\x00`A\x00\x00\x90A\x00\x00\x98A\x00\x00\xa8A\x00\x00\xb0A\x00\x00\xc8A\x00\x00\xd8A\x00\x00\xe8A\x00\x00\xf8A\x00\x00\x00B\x00\x00\x04B\x00\x00\x0cB\x00\x00\x10B'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg15
g1972
(g1954
(I0
tS'b'
tRp2131
(I1
(I2
I20
tg2007
I00
(lp2132
S'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
atbstRp2133
(dp2134
g1962
(dp2135
g16
I01
sg1951
I01
sg20
I01
sg18
I00
sg17
I01
sg19
I01
sg1958
I01
sg15
I00
ssg1964
g2118
sg1965
(lp2136
g1951
ag1958
ag15
ag16
ag17
ag18
ag19
ag20
asg1967
(lp2137
I2
aI20
asbsg1969
g2021
sg1971
g1972
(g1954
(I0
tS'b'
tRp2138
(I1
(I2
I20
tg2007
I00
(lp2139
I1
aI1
aI1
aI1
aI0
aI0
aI0
aI1
aI0
aI1
aI0
aI1
aI0
aI0
aI0
aI0
aI1
aI0
aI1
aI0
aI0
aI1
aI0
aI0
aI1
aI1
aI0
aI0
aI0
aI1
aI1
aI0
aI1
aI1
aI1
aI1
aI1
aI1
aI0
aI0
atbsg1974
I01
sg1975
I20
sg1976
I-1
sg1977
(lp2140
g1
(g1979
g1949
(dp2141
g1009
I1
sg1004
g1019
sg1002
g1018
stRp2142
ag1
(g1979
g1949
(dp2143
g1009
I2
sg1004
g1005
sg1002
g1003
stRp2144
asg1994
Nsg1995
I0
sg1996
I40
sg1997
I0
sg1998
I40
sg1999
I01
sbag1
(g1937
g3
NtRp2145
(dp2146
g1940
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[-1.000,-1.000,-1.000]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IAT" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trials_code">\u000a        <Param name="Begin Experiment" val="#declare accuracy feedback message variable&#10;msg=&quot;&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trials_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# choose a random exemplar from the appropriate trial type list&#10;if trial_type == 1:&#10;    text_stimulus = text_trial_type_1_trials.pop()&#10;    image_stimulus = img_trial_type_1_trials.pop()&#10;elif trial_type == 2:&#10;    text_stimulus = text_trial_type_2_trials.pop()&#10;    image_stimulus = img_trial_type_2_trials.pop()&#10;elif trial_type == 3:&#10;    text_stimulus = text_trial_type_3_trials.pop()&#10;    image_stimulus = img_trial_type_3_trials.pop()&#10;elif trial_type == 4:&#10;    text_stimulus = text_trial_type_4_trials.pop()&#10;    image_stimulus = img_trial_type_4_trials.pop()&#10;&#10;# set stimulus colors based on trial type&#10;if trial_type == 1 or trial_type == 2:&#10;     stimulusColor = [1, 1, 1]&#10;elif trial_type &gt;2:&#10;     stimulusColor = [-1, 1, -1]&#10;&#10;# set required and feedback responses&#10;# attributes are invariate across blocks so can be determined based on trial type only&#10;if trial_type == 3: #pos&#10;    requiredAllowed = &quot;i&quot;&#10;    requiredCorrect = &quot;i&quot;&#10;    feedbackAllowed = &quot;e&quot;&#10;    feedbackCorrect = &quot;e&quot;&#10;elif trial_type == 4: #neg&#10;    requiredAllowed = &quot;e&quot;&#10;    requiredCorrect = &quot;e&quot;&#10;    feedbackAllowed = &quot;i&quot;&#10;    feedbackCorrect = &quot;i&quot;&#10;# categories depend on block order, current block and trial type&#10;if block_order == 1: &#10;    if blocks.thisN &lt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;&#10;    elif blocks.thisN &gt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;elif block_order == 2: &#10;    if blocks.thisN &lt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;    elif blocks.thisN &gt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="if len(feedbackResponse.keys)&lt;1:&#10;    msg=&quot;&quot;&#10;else:&#10;    msg=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="stimulusImageBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulusImageBox" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$image_stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val=".6" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulusTextBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulusTextBox" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$stimulusColor" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$text_stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="requiredResponse">\u000a        <Param name="correctAns" val="$requiredCorrect " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="requiredResponse" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="requiredAllowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedbackResponse">\u000a        <Param name="correctAns" val="$feedbackCorrect " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedbackResponse" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedbackAllowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="feedback">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="leftCategoryLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftCategoryLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightCategoryLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightCategoryLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="leftAttributeLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftAttributeLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightAttributeLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightAttributeLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orLeft">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orLeft" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orRight">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orRight" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instruction">\u000a      <CodeComponent name="block_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;import math  # for math.ceil() rounding up&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine rows of examplars (i.e., max number of rows)&#10;&quot;&quot;&quot;&#10;This method creates a fully counterbalanced presentation of exemplars when there are 5&#10;of them, but it will not present each one an equal number of times it the n diverges from 5.&#10;&quot;&quot;&quot;&#10;n_exemplars = len(exemplars)&#10;list_multiplier = int(math.ceil(10/n_exemplars))  # math.ceil() rounds up. 10 is the derived from way block lengths are calculated. Admittedly, this comment doensn't adequately document why it's ten. Honestly, I have to work it out of my fingers every time and can't explain it.&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a&#10;&#10;# declare trial rows (not sure if necessary, but can't be bothered to removed and test)&#10;trial_rows = &quot;&quot;&#10;&#10;# set block order based on participant code&#10;participantNumber = int(expInfo['participant'])&#10;if (participantNumber % 2) == 1: &#10;    block_order = 1&#10;elif (participantNumber % 2) == 0:&#10;    block_order = 2&#10;else:&#10;    print &quot;****condition file error: please enter a numeric participant code****&quot;&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="block_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# set the block length and the rows to pull from based on the current block &#10;# this layout follows Nosek et al. 2007, &quot;The Implicit Association Test at age 7: A methodological and conceptual review&quot;&#10;if blocks.thisN == 0:&#10;    trial_rows = &quot;2:4&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 1:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 2:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 3:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 10   #4*10 = 40 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 4:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 20   #2*20 = 40 trials&#10;    modified_list_multiplier = list_multiplier * 2  # because this block has a different trials:categories ratio&#10;elif blocks.thisN == 5:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 6:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 10   #4*10 = 40 trials&#10;    modified_list_multiplier = list_multiplier&#10;&#10;# Generate list of stimuli for the block&#10;text_trial_type_1_trials = generate_trials('text_trial_type_1_exemplars', modified_list_multiplier)  # function and variable determined at begin exp.&#10;text_trial_type_2_trials = generate_trials('text_trial_type_2_exemplars', modified_list_multiplier)&#10;text_trial_type_3_trials = generate_trials('text_trial_type_3_exemplars', modified_list_multiplier)&#10;text_trial_type_4_trials = generate_trials('text_trial_type_4_exemplars', modified_list_multiplier)&#10;img_trial_type_1_trials = generate_trials('img_trial_type_1_exemplars', modified_list_multiplier)&#10;img_trial_type_2_trials = generate_trials('img_trial_type_2_exemplars', modified_list_multiplier)&#10;img_trial_type_3_trials = generate_trials('img_trial_type_3_exemplars', modified_list_multiplier)&#10;img_trial_type_4_trials = generate_trials('img_trial_type_4_exemplars', modified_list_multiplier)&#10;&#10;# set category and attribute labels based on the block order and current block&#10;if block_order == 1 and blocks.thisN &lt;= 3:&#10;    leftCategory = categoryA&#10;    rightCategory = categoryB&#10;elif block_order == 1 and blocks.thisN &gt; 3:&#10;    leftCategory = categoryB&#10;    rightCategory = categoryA&#10;elif block_order == 2 and blocks.thisN &lt;= 3:&#10;    leftCategory = categoryB&#10;    rightCategory = categoryA&#10;elif block_order == 2 and blocks.thisN &gt; 3:&#10;    leftCategory = categoryA&#10;    rightCategory = categoryB" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="instructionsBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instructionsBox" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instructions" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.05" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="instructionsKey">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="instructionsKey" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1.25" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="leftCategoryLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftCategoryLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightCategoryLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightCategoryLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="leftAttributeLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftAttributeLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightAttributeLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightAttributeLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orLeft_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orLeft_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orRight_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orRight_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="endBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="endBox" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="End of the task" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks">\u000a      <Param name="conditionsFile" val="instructions.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'block': 1, u'instructions': u'In this response task will you have to react to words and propositions that are presented on the screen. In the next phase words will be presented in ORANGE.\u005cn\u005cnIt is your job to decide as soon as possible whether the word refers to TRUE or FALSE.\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.'}, {u'block': 2, u'instructions': u&quot;The next phase some propositions will be presented in BLUE.\u005cnThese propositons are always statements about SELF ESTEEM.\u005cn\u005cnYou must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the right response (TRUE).\u005cnWhen the proposition 'I am worthless' appears, respond with the left response (FALSE).\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 3, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase some words will be presented in ORANGE and some propositions in BLUE. These propositons are always statements about SELF ESTEEM.\u005cn\u005cnAgain, you must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 4, u'instructions': u&quot;IMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\u005cn\u005cnYou must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the left response (FALSE).\u005cnWhen the proposition 'I am worthless' appears, respond with the right response (TRUE).\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 5, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase will again present words in ORANGE and statements in BLUE.\u005cn\u005cnAgain, you must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instruction"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="n_block_repeats" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'stimulusText': u'text_trial_type_1', u'stimulusImage': u'img_trial_type_1', u'trialtype': 1}, {u'stimulusText': u'text_trial_type_2', u'stimulusImage': u'img_trial_type_2', u'trialtype': 2}, {u'stimulusText': u'text_trial_type_3', u'stimulusImage': u'img_trial_type_3', u'trialtype': 3}, {u'stimulusText': u'text_trial_type_4', u'stimulusImage': u'img_trial_type_4', u'trialtype': 4}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="$trial_rows" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="blocks"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p2147
sg1942
(lp2148
sg1944
I214841264
sg11
g1964
sg6
g7
sg1946
I5
sg21
I01
sg22
g23
sg1947
g1
(g1948
g1949
(dp2149
g16
g1952
(g1953
g1954
g1955
S'b'
tRp2150
(I1
(I4
I5
tg1957
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg18
g1972
(g1954
(I0
tS'b'
tRp2151
(I1
(I4
I5
tg2007
I00
(lp2152
S'e'
aS'e'
aS'e'
aNaS'e'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aNaS'e'
aNaS'e'
aS'e'
aS'i'
aS'i'
aNaNaS'i'
atbsg1951
g1952
(g1953
g1954
g1955
S'b'
tRp2153
(I1
(I4
I5
tg1957
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg20
g1952
(g1953
g1954
g1955
S'b'
tRp2154
(I1
(I4
I5
tg1957
I00
S'p*+>`\xb3\xaa=\x00\x06O=\x00\x00\x00\x00\xf04\t>\xb0M\n>\xc0\x19\x8a=@\x97N=\x00z\xcf=\xe0\xd1\x8a=\x00\x00\x00\x00\xc0\x0f\xab=\x00\x00\x00\x00\xc0a\xcd=\x00\x17\xab=@L\x81>\x00\xf0O=\x00\x00\x00\x00\x00\x00\x00\x00`+\xcc='
S'\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00\x00\x00\x00\x01\x01\x00'
Ntbsg17
g1952
(g1953
g1954
g1955
S'b'
tRp2155
(I1
(I4
I5
tg1957
I00
S'\xc0\x8f<> \xd1\xab=\xa0w\x8a=\xa0h\x8c=\x80\xbc\t>\x80\xf8\x1b> \x8d\x8a=\x00\xc7P=\xa03\xf0=\xa0\xd2\xac=\x00\x1c\x11=\xe0-\xac= "\xce= \xbb\xf2=@\xc8\xab=0e\x81>\xa0\xde\x89= 2\xac=\xa0\xa7\x8b=@\x98\xcd='
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg19
g1952
(g1953
g1954
g1955
S'b'
tRp2156
(I1
(I4
I5
tg1957
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg1958
g1952
(g1953
g1954
g1955
S'b'
tRp2157
(I1
(I4
I5
tg1957
I00
S'\x00\x00\x80?\x00\x00@@\x00\x00\x80@\x00\x00`A\x00\x00\x90A\x00\x00\x00@\x00\x00 A\x00\x000A\x00\x00PA\x00\x00\x80A\x00\x00\xc0@\x00\x00\x00A\x00\x00\x10A\x00\x00pA\x00\x00\x98A\x00\x00\x00\x00\x00\x00\xa0@\x00\x00\xe0@\x00\x00@A\x00\x00\x88A'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg15
g1972
(g1954
(I0
tS'b'
tRp2158
(I1
(I4
I5
tg2007
I00
(lp2159
S'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
atbstRp2160
(dp2161
g1962
(dp2162
g16
I01
sg1951
I01
sg20
I01
sg18
I00
sg17
I01
sg19
I01
sg1958
I01
sg15
I00
ssg1964
g2145
sg1965
(lp2163
g1951
ag1958
ag15
ag16
ag17
ag18
ag19
ag20
asg1967
(lp2164
I4
aI5
asbsg1969
g2021
sg1971
g1972
(g1954
(I0
tS'b'
tRp2165
(I1
(I4
I5
tg2007
I00
(lp2166
I3
aI0
aI2
aI3
aI1
aI0
aI3
aI2
aI1
aI3
aI1
aI2
aI1
aI0
aI0
aI0
aI3
aI1
aI2
aI2
atbsg1974
I01
sg1975
I5
sg1976
I-1
sg1977
(lp2167
g1
(g1979
g1949
(dp2168
g1378
I1
sg1373
g1388
sg1371
g1387
stRp2169
ag1
(g1979
g1949
(dp2170
g1378
I2
sg1373
g1399
sg1371
g1398
stRp2171
ag1
(g1979
g1949
(dp2172
g1378
I3
sg1373
g1437
sg1371
g1436
stRp2173
ag1
(g1979
g1949
(dp2174
g1378
I4
sg1373
g1374
sg1371
g1372
stRp2175
asg1994
Nsg1995
I2
sg1996
I20
sg1997
I0
sg1998
I20
sg1999
I01
sbag1
(g1937
g3
NtRp2176
(dp2177
g1940
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[-1.000,-1.000,-1.000]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="IAT" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trials_code">\u000a        <Param name="Begin Experiment" val="#declare accuracy feedback message variable&#10;msg=&quot;&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trials_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# choose a random exemplar from the appropriate trial type list&#10;if trial_type == 1:&#10;    text_stimulus = text_trial_type_1_trials.pop()&#10;    image_stimulus = img_trial_type_1_trials.pop()&#10;elif trial_type == 2:&#10;    text_stimulus = text_trial_type_2_trials.pop()&#10;    image_stimulus = img_trial_type_2_trials.pop()&#10;elif trial_type == 3:&#10;    text_stimulus = text_trial_type_3_trials.pop()&#10;    image_stimulus = img_trial_type_3_trials.pop()&#10;elif trial_type == 4:&#10;    text_stimulus = text_trial_type_4_trials.pop()&#10;    image_stimulus = img_trial_type_4_trials.pop()&#10;&#10;# set stimulus colors based on trial type&#10;if trial_type == 1 or trial_type == 2:&#10;     stimulusColor = [1, 1, 1]&#10;elif trial_type &gt;2:&#10;     stimulusColor = [-1, 1, -1]&#10;&#10;# set required and feedback responses&#10;# attributes are invariate across blocks so can be determined based on trial type only&#10;if trial_type == 3: #pos&#10;    requiredAllowed = &quot;i&quot;&#10;    requiredCorrect = &quot;i&quot;&#10;    feedbackAllowed = &quot;e&quot;&#10;    feedbackCorrect = &quot;e&quot;&#10;elif trial_type == 4: #neg&#10;    requiredAllowed = &quot;e&quot;&#10;    requiredCorrect = &quot;e&quot;&#10;    feedbackAllowed = &quot;i&quot;&#10;    feedbackCorrect = &quot;i&quot;&#10;# categories depend on block order, current block and trial type&#10;if block_order == 1: &#10;    if blocks.thisN &lt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;&#10;    elif blocks.thisN &gt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;elif block_order == 2: &#10;    if blocks.thisN &lt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;    elif blocks.thisN &gt;= 3:&#10;        if trial_type == 1: #flowers&#10;            requiredAllowed = &quot;i&quot;&#10;            requiredCorrect = &quot;i&quot;&#10;            feedbackAllowed = &quot;e&quot;&#10;            feedbackCorrect = &quot;e&quot;&#10;        elif trial_type == 2: #insects&#10;            requiredAllowed = &quot;e&quot;&#10;            requiredCorrect = &quot;e&quot;&#10;            feedbackAllowed = &quot;i&quot;&#10;            feedbackCorrect = &quot;i&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="if len(feedbackResponse.keys)&lt;1:&#10;    msg=&quot;&quot;&#10;else:&#10;    msg=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <ImageComponent name="stimulusImageBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="flipVert" val="False" valType="bool" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulusImageBox" valType="code" updates="None"/>\u000a        <Param name="color" val="$[1,1,1]" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="mask" val="None" valType="str" updates="constant"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="interpolate" val="linear" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="texture resolution" val="128" valType="code" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="flipHoriz" val="False" valType="bool" updates="constant"/>\u000a        <Param name="image" val="$image_stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="size" val=".6" valType="code" updates="constant"/>\u000a      </ImageComponent>\u000a      <TextComponent name="stimulusTextBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulusTextBox" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$stimulusColor" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$text_stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="requiredResponse">\u000a        <Param name="correctAns" val="$requiredCorrect " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="requiredResponse" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="requiredAllowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedbackResponse">\u000a        <Param name="correctAns" val="$feedbackCorrect " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedbackResponse" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedbackAllowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="feedback">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="leftCategoryLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftCategoryLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightCategoryLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightCategoryLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="leftAttributeLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftAttributeLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightAttributeLabel">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightAttributeLabel" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orLeft">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orLeft" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orRight">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orRight" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instruction">\u000a      <CodeComponent name="block_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;import math  # for math.ceil() rounding up&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine rows of examplars (i.e., max number of rows)&#10;&quot;&quot;&quot;&#10;This method creates a fully counterbalanced presentation of exemplars when there are 5&#10;of them, but it will not present each one an equal number of times it the n diverges from 5.&#10;&quot;&quot;&quot;&#10;n_exemplars = len(exemplars)&#10;list_multiplier = int(math.ceil(10/n_exemplars))  # math.ceil() rounds up. 10 is the derived from way block lengths are calculated. Admittedly, this comment doensn't adequately document why it's ten. Honestly, I have to work it out of my fingers every time and can't explain it.&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a&#10;&#10;# declare trial rows (not sure if necessary, but can't be bothered to removed and test)&#10;trial_rows = &quot;&quot;&#10;&#10;# set block order based on participant code&#10;participantNumber = int(expInfo['participant'])&#10;if (participantNumber % 2) == 1: &#10;    block_order = 1&#10;elif (participantNumber % 2) == 0:&#10;    block_order = 2&#10;else:&#10;    print &quot;****condition file error: please enter a numeric participant code****&quot;&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="block_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# set the block length and the rows to pull from based on the current block &#10;# this layout follows Nosek et al. 2007, &quot;The Implicit Association Test at age 7: A methodological and conceptual review&quot;&#10;if blocks.thisN == 0:&#10;    trial_rows = &quot;2:4&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 1:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 2:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 3:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 10   #4*10 = 40 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 4:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 20   #2*20 = 40 trials&#10;    modified_list_multiplier = list_multiplier * 2  # because this block has a different trials:categories ratio&#10;elif blocks.thisN == 5:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;    modified_list_multiplier = list_multiplier&#10;elif blocks.thisN == 6:&#10;    trial_rows = &quot;0:4&quot; &#10;    n_block_repeats = 10   #4*10 = 40 trials&#10;    modified_list_multiplier = list_multiplier&#10;&#10;# Generate list of stimuli for the block&#10;text_trial_type_1_trials = generate_trials('text_trial_type_1_exemplars', modified_list_multiplier)  # function and variable determined at begin exp.&#10;text_trial_type_2_trials = generate_trials('text_trial_type_2_exemplars', modified_list_multiplier)&#10;text_trial_type_3_trials = generate_trials('text_trial_type_3_exemplars', modified_list_multiplier)&#10;text_trial_type_4_trials = generate_trials('text_trial_type_4_exemplars', modified_list_multiplier)&#10;img_trial_type_1_trials = generate_trials('img_trial_type_1_exemplars', modified_list_multiplier)&#10;img_trial_type_2_trials = generate_trials('img_trial_type_2_exemplars', modified_list_multiplier)&#10;img_trial_type_3_trials = generate_trials('img_trial_type_3_exemplars', modified_list_multiplier)&#10;img_trial_type_4_trials = generate_trials('img_trial_type_4_exemplars', modified_list_multiplier)&#10;&#10;# set category and attribute labels based on the block order and current block&#10;if block_order == 1 and blocks.thisN &lt;= 3:&#10;    leftCategory = categoryA&#10;    rightCategory = categoryB&#10;elif block_order == 1 and blocks.thisN &gt; 3:&#10;    leftCategory = categoryB&#10;    rightCategory = categoryA&#10;elif block_order == 2 and blocks.thisN &lt;= 3:&#10;    leftCategory = categoryB&#10;    rightCategory = categoryA&#10;elif block_order == 2 and blocks.thisN &gt; 3:&#10;    leftCategory = categoryA&#10;    rightCategory = categoryB" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="instructionsBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instructionsBox" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instructions" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.05" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="instructionsKey">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="instructionsKey" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1.25" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="leftCategoryLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftCategoryLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightCategoryLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightCategoryLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightCategory" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .85]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="leftAttributeLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="leftAttributeLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$leftAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="rightAttributeLabel_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="rightAttributeLabel_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$[-1, 1, -1]" valType="str" updates="constant"/>\u000a        <Param name="text" val="$rightAttribute" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, 0.55]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orLeft_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orLeft_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="orRight_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="orRight_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$orStimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.6, .7]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="endBox">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="endBox" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="End of the task" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks">\u000a      <Param name="conditionsFile" val="instructions.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'block': 1, u'instructions': u'In this response task will you have to react to words and propositions that are presented on the screen. In the next phase words will be presented in ORANGE.\u005cn\u005cnIt is your job to decide as soon as possible whether the word refers to TRUE or FALSE.\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.'}, {u'block': 2, u'instructions': u&quot;The next phase some propositions will be presented in BLUE.\u005cnThese propositons are always statements about SELF ESTEEM.\u005cn\u005cnYou must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the right response (TRUE).\u005cnWhen the proposition 'I am worthless' appears, respond with the left response (FALSE).\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 3, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase some words will be presented in ORANGE and some propositions in BLUE. These propositons are always statements about SELF ESTEEM.\u005cn\u005cnAgain, you must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 4, u'instructions': u&quot;IMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\u005cn\u005cnYou must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the left response (FALSE).\u005cnWhen the proposition 'I am worthless' appears, respond with the right response (TRUE).\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 5, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase will again present words in ORANGE and statements in BLUE.\u005cn\u005cnAgain, you must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instruction"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="n_block_repeats" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'stimulusText': u'text_trial_type_1', u'stimulusImage': u'img_trial_type_1', u'trialtype': 1}, {u'stimulusText': u'text_trial_type_2', u'stimulusImage': u'img_trial_type_2', u'trialtype': 2}, {u'stimulusText': u'text_trial_type_3', u'stimulusImage': u'img_trial_type_3', u'trialtype': 3}, {u'stimulusText': u'text_trial_type_4', u'stimulusImage': u'img_trial_type_4', u'trialtype': 4}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="$trial_rows" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="blocks"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p2178
sg1942
(lp2179
sg1944
I214841264
sg11
g1964
sg6
g7
sg1946
I10
sg21
I01
sg22
g23
sg1947
g1
(g1948
g1949
(dp2180
g16
g1952
(g1953
g1954
g1955
S'b'
tRp2181
(I1
(I4
I10
tg1957
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg18
g1972
(g1954
(I0
tS'b'
tRp2182
(I1
(I4
I10
tg2007
I00
(lp2183
S'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aNaNaS'i'
aS'i'
aS'i'
aS'i'
aNaNaNaS'i'
aS'i'
aNaS'e'
aS'e'
aS'e'
aNaNaS'e'
aS'e'
aNaS'e'
aS'e'
aS'i'
aS'i'
aS'i'
aNaS'i'
aNaS'i'
aS'i'
aS'i'
aS'i'
atbsg1951
g1952
(g1953
g1954
g1955
S'b'
tRp2184
(I1
(I4
I10
tg1957
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg20
g1952
(g1953
g1954
g1955
S'b'
tRp2185
(I1
(I4
I10
tg1957
I00
S'\xe0\x08\x0b>\x00\t\xb1=\xc0\xf0\x8a= \xa5\x8b=@\xac\x89=\x00\x9a\x8c=2\xac\x0f@\x10\xea\t>\x00\x00\x00\x00\x00\x00\x00\x00@/\x8a= \xc2\xaa=\x80\xbf\xaa=\x00[\x89=\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x17\x8c< 2\xef=\x00\x00\x00\x00@1O=\x00\x0b\xce=\x80}\xcd=\x00\x00\x00\x00\x00\x00\x00\x00\x00\xdc\x0f=@G\x0e=\x00\x00\x00\x00@=\x8b=\x00\xf0\xac=`\xc5\xf0=\xc0\x8e\xce=@\xddT=\x00\x00\x00\x00 6\x8a=\x00\x00\x00\x00\x00\x96\x1a>`\x0f\xf0=\x80^\xad=\xa0\xac\x1a>'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x00\x00\x00\x00\x01\x01\x01\x00\x00\x01\x00\x00\x00\x01\x01\x00\x00\x01\x00\x00\x00\x00\x00\x01\x00\x01\x00\x00\x00\x00'
Ntbsg17
g1952
(g1953
g1954
g1955
S'b'
tRp2186
(I1
(I4
I10
tg1957
I00
S'P\x83\x0b>@\xe6\n>\x00c\x8b=`\xd7\x8c= s\xf0=\x80|\x8d=c\xb5\x0f@@*\n>\x00Z\n>@\xf3\xae=@<\x8b=\x80\xfb\xef=`\xea\xab=\x00\xa3\xab=\x80 O=\xc0\x8cM=hW\x9a>\x00\x81N=\xc0@\xf0=@\x8d\xad=\x80\xd3\x89=\x10^\x19>@Q\xf2=\x808P=@\x19\xae=\x80\xbc\x10= \xc0\xcd=\x80\x13Q=\xc0@\x8c=\xe0\x90\xad=\x00J\xf1=@]\xef=\xc0\x8eU=\xc0l\xad=`\xc3\xac=\x80\x87S=\xc0\xe5\x1a>\x10\x99\t>\xc0\xb6\xcd=\xe0$\x1b>'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg19
g1952
(g1953
g1954
g1955
S'b'
tRp2187
(I1
(I4
I10
tg1957
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg1958
g1952
(g1953
g1954
g1955
S'b'
tRp2188
(I1
(I4
I10
tg1957
I00
S'\x00\x00\x00A\x00\x00pA\x00\x00\x88A\x00\x00\x98A\x00\x00\xa0A\x00\x00\xe0A\x00\x00\xf0A\x00\x00\xf8A\x00\x00\x04B\x00\x00\x1cB\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00@\x00\x00\x90A\x00\x00\xb8A\x00\x00\xd0A\x00\x00\xd8A\x00\x00\xe8A\x00\x00\x08B\x00\x00\x10B\x00\x00\xa0@\x00\x00\xc0@\x00\x00 A\x00\x000A\x00\x00@A\x00\x00`A\x00\x00\x80A\x00\x00\xa8A\x00\x00\xb0A\x00\x00\x18B\x00\x00@@\x00\x00\x80@\x00\x00\xe0@\x00\x00\x10A\x00\x00PA\x00\x00\xc0A\x00\x00\xc8A\x00\x00\x00B\x00\x00\x0cB\x00\x00\x14B'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg15
g1972
(g1954
(I0
tS'b'
tRp2189
(I1
(I4
I10
tg2007
I00
(lp2190
S'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
atbstRp2191
(dp2192
g1962
(dp2193
g16
I01
sg1951
I01
sg20
I01
sg18
I00
sg17
I01
sg19
I01
sg1958
I01
sg15
I00
ssg1964
g2176
sg1965
(lp2194
g1951
ag1958
ag15
ag16
ag17
ag18
ag19
ag20
asg1967
(lp2195
I4
aI10
asbsg1969
g2021
sg1971
g1972
(g1954
(I0
tS'b'
tRp2196
(I1
(I4
I10
tg2007
I00
(lp2197
I1
aI3
aI0
aI2
aI2
aI0
aI3
aI0
aI3
aI1
aI1
aI2
aI3
aI3
aI0
aI2
aI3
aI1
aI0
aI3
aI1
aI2
aI2
aI2
aI1
aI2
aI1
aI0
aI1
aI2
aI3
aI3
aI2
aI0
aI0
aI1
aI1
aI0
aI3
aI0
atbsg1974
I01
sg1975
I10
sg1976
I-1
sg1977
(lp2198
g1
(g1979
g1949
(dp2199
g1571
I1
sg1566
g1647
sg1564
g1646
stRp2200
ag1
(g1979
g1949
(dp2201
g1571
I2
sg1566
g1567
sg1564
g1565
stRp2202
ag1
(g1979
g1949
(dp2203
g1571
I3
sg1566
g1618
sg1564
g1617
stRp2204
ag1
(g1979
g1949
(dp2205
g1571
I4
sg1566
g1598
sg1564
g1597
stRp2206
asg1994
Nsg1995
I0
sg1996
I40
sg1997
I0
sg1998
I40
sg1999
I01
sbasS'savePickle'
p2207
I00
sb.